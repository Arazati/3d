// Generated by Haxe 4.0.5+f5259a9eb
(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = true;
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = true;
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = true;
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
var Vec3D = function(x,y,z) {
	this.w = 0.0;
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["Vec3D"] = Vec3D;
Vec3D.__name__ = true;
Vec3D.get_Zero = function() {
	return new Vec3D(0,0,0);
};
Vec3D.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,clone: function() {
		var v = new Vec3D(this.x,this.y,this.z);
		v.w = this.w;
		return v;
	}
	,normalized: function() {
		var length = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		var c = this.clone();
		c.x /= length;
		c.y /= length;
		c.z /= length;
		return c;
	}
	,crossProduct: function(b) {
		return new Vec3D(this.y * b.z - this.z * b.y,this.z * b.x - this.x * b.z,this.x * b.y - this.y * b.x);
	}
	,crossProductNormalised: function(b) {
		var c = new Vec3D(this.y * b.z - this.z * b.y,this.z * b.x - this.x * b.z,this.x * b.y - this.y * b.x);
		var length = Math.sqrt(c.x * c.x + c.y * c.y + c.z * c.z);
		c.x /= length;
		c.y /= length;
		c.z /= length;
		return c;
	}
	,dotProduct: function(b) {
		return this.x * b.x + this.y * b.y + this.z * b.z;
	}
	,subtract: function(b) {
		return new Vec3D(this.x - b.x,this.y - b.y,this.z - b.z);
	}
	,add: function(b) {
		return new Vec3D(this.x + b.x,this.y + b.y,this.z + b.z);
	}
	,__class__: Vec3D
};
var Triangle = function(a,b,c) {
	this.p = [Vec3D.get_Zero(),Vec3D.get_Zero(),Vec3D.get_Zero()];
	if(a != null) {
		this.p[0] = a;
	}
	if(b != null) {
		this.p[1] = b;
	}
	if(c != null) {
		this.p[2] = c;
	}
};
$hxClasses["Triangle"] = Triangle;
Triangle.__name__ = true;
Triangle.prototype = {
	p: null
	,col: null
	,clone: function() {
		var c = new Triangle(this.p[0].clone(),this.p[1].clone(),this.p[2].clone());
		c.col = this.col;
		return c;
	}
	,translated: function(pos) {
		var t = this.clone();
		t.p[0].x += pos.x;
		t.p[0].y += pos.y;
		t.p[0].z += pos.z;
		t.p[1].x += pos.x;
		t.p[1].y += pos.y;
		t.p[1].z += pos.z;
		t.p[2].x += pos.x;
		t.p[2].y += pos.y;
		t.p[2].z += pos.z;
		t.col = this.col;
		return t;
	}
	,getCrossProduct: function() {
		var a = new Vec3D(this.p[1].x - this.p[0].x,this.p[1].y - this.p[0].y,this.p[1].z - this.p[0].z);
		var b = new Vec3D(this.p[2].x - this.p[0].x,this.p[2].y - this.p[0].y,this.p[2].z - this.p[0].z);
		return a.crossProduct(b);
	}
	,getNormal: function() {
		var a = new Vec3D(this.p[1].x - this.p[0].x,this.p[1].y - this.p[0].y,this.p[1].z - this.p[0].z);
		var b = new Vec3D(this.p[2].x - this.p[0].x,this.p[2].y - this.p[0].y,this.p[2].z - this.p[0].z);
		return a.crossProductNormalised(b);
	}
	,__class__: Triangle
};
var Mesh = function(tris) {
	this.tris = new haxe_ds_List();
	if(tris != null) {
		this.tris = tris;
	}
};
$hxClasses["Mesh"] = Mesh;
Mesh.__name__ = true;
Mesh.prototype = {
	tris: null
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.tris.h);
	}
	,__class__: Mesh
};
var Matrix4x4 = function() {
	this.m = [[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]];
};
$hxClasses["Matrix4x4"] = Matrix4x4;
Matrix4x4.__name__ = true;
Matrix4x4.prototype = {
	m: null
	,Multiply: function(vector) {
		var newVec = Vec3D.get_Zero();
		newVec.x = vector.x * this.m[0][0] + vector.y * this.m[1][0] + vector.z * this.m[2][0] + this.m[3][0];
		newVec.y = vector.x * this.m[0][1] + vector.y * this.m[1][1] + vector.z * this.m[2][1] + this.m[3][1];
		newVec.z = vector.x * this.m[0][2] + vector.y * this.m[1][2] + vector.z * this.m[2][2] + this.m[3][2];
		var w = vector.x * this.m[0][3] + vector.y * this.m[1][3] + vector.z * this.m[2][3] + this.m[3][3];
		if(w != 0.0) {
			newVec.x /= w;
			newVec.y /= w;
			newVec.z /= w;
		}
		newVec.w = w;
		return newVec;
	}
	,__class__: Matrix4x4
};
var Main = function() {
	this.showFPS = true;
	this.renderTime = kha_Scheduler.time();
	this.lastTime = -1.0;
	this.heldButtons = new haxe_ds_List();
	this.debugText = "";
	this.vel = .2;
	this.speed = 1.0;
	this.camera = Vec3D.get_Zero();
	this.totalElapsedTime = 0.0;
	this.depth = new Array(Main.baseWidth * Main.pixelScale * Main.baseHeight * Main.pixelScale);
	this.matProj = new Matrix4x4();
	this.objects = 1;
	this.useLighting = true;
	this.useTriangleColor = false;
	this.useTeapot = false;
	this.wireframeEnabled = true;
	this.highResMode = false;
	this.insideOutMode = false;
	var _gthis = this;
	kha_input_Keyboard.get().notify($bind(this,this.onKeyDown),$bind(this,this.onKeyUp));
	var setMouseCoords = function(x,y,moveX,moveY) {
		_gthis.mouseXFullRes = x;
		_gthis.mouseYFullRes = y;
		_gthis.mouseX = x / Main.pixelScale | 0;
		_gthis.mouseY = y / Main.pixelScale | 0;
	};
	kha_input_Mouse.get().notify(null,null,setMouseCoords,null);
	this.font = kha_Assets.fonts.OpenSans_Regular;
	this.start();
};
$hxClasses["Main"] = Main;
Main.__name__ = true;
Main.main = function() {
	var canvas = window.document.getElementById("khanvas");
	canvas.style.display = "block";
	var resize = function() {
		canvas.width = 1280;
		canvas.height = 960;
		canvas.style.width = window.document.documentElement.clientWidth + "px";
		canvas.style.height = window.document.documentElement.clientHeight + "px";
	};
	window.onresize = resize;
	resize();
	kha_System.start(new kha_SystemOptions(" ",Main.baseWidth * Main.pixelScale,Main.baseHeight * Main.pixelScale,null,null),function(_) {
		kha_Assets.loadEverything(function() {
			var game = new Main();
			kha_Scheduler.addTimeTask(function() {
				game.update();
			},0,0.016666666666666666);
			kha_System.notifyOnFrames(function(frames) {
				game.render(frames);
			});
		});
	});
};
Main.prototype = {
	insideOutMode: null
	,highResMode: null
	,wireframeEnabled: null
	,useTeapot: null
	,useTriangleColor: null
	,useLighting: null
	,objects: null
	,meshCube: null
	,teapot: null
	,matProj: null
	,depth: null
	,start: function() {
		this.meshCube = this.createCubeMesh();
		this.teapot = Teapot.create();
		this.setCameraSettings(0.1,1000,90);
		Main.pixelScale = 4;
		this.updateBounds();
		var _g = 0;
		var _g1 = this.depth.length;
		while(_g < _g1) {
			var i = _g++;
			this.depth[i] = 0;
		}
	}
	,createCubeMesh: function() {
		var meshCube = new Mesh();
		meshCube.tris.add(new Triangle(new Vec3D(0,0,0),new Vec3D(0,1,0),new Vec3D(1,1,0)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(255,0,0);
		meshCube.tris.add(new Triangle(new Vec3D(0,0,0),new Vec3D(1,1,0),new Vec3D(1,0,0)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(191,0,0);
		meshCube.tris.add(new Triangle(new Vec3D(1,0,0),new Vec3D(1,1,0),new Vec3D(1,1,1)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(255,255,0);
		meshCube.tris.add(new Triangle(new Vec3D(1,0,0),new Vec3D(1,1,1),new Vec3D(1,0,1)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(191,191,0);
		meshCube.tris.add(new Triangle(new Vec3D(1,0,1),new Vec3D(1,1,1),new Vec3D(0,1,1)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(0,255,0);
		meshCube.tris.add(new Triangle(new Vec3D(1,0,1),new Vec3D(0,1,1),new Vec3D(0,0,1)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(0,191,0);
		meshCube.tris.add(new Triangle(new Vec3D(0,0,1),new Vec3D(0,1,1),new Vec3D(0,1,0)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(0,255,255);
		meshCube.tris.add(new Triangle(new Vec3D(0,0,1),new Vec3D(0,1,0),new Vec3D(0,0,0)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(0,191,191);
		meshCube.tris.add(new Triangle(new Vec3D(0,1,0),new Vec3D(0,1,1),new Vec3D(1,1,1)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(0,0,255);
		meshCube.tris.add(new Triangle(new Vec3D(0,1,0),new Vec3D(1,1,1),new Vec3D(1,1,0)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(0,0,191);
		meshCube.tris.add(new Triangle(new Vec3D(1,0,1),new Vec3D(0,0,1),new Vec3D(0,0,0)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(255,0,255);
		meshCube.tris.add(new Triangle(new Vec3D(1,0,1),new Vec3D(0,0,0),new Vec3D(1,0,0)));
		meshCube.tris.last().col = kha__$Color_Color_$Impl_$.fromBytes(191,0,191);
		return meshCube;
	}
	,setCameraSettings: function(nearClippingPlane,farClippingPlane,fov) {
		var fAspectRatio = Main.baseWidth / Main.baseHeight;
		var fFovRad = 1.0 / Math.tan(fov * 0.5 / 180 * Math.PI);
		this.matProj.m[0][0] = fAspectRatio * fFovRad;
		this.matProj.m[1][1] = fFovRad;
		this.matProj.m[2][2] = farClippingPlane / (farClippingPlane - nearClippingPlane);
		this.matProj.m[3][2] = -farClippingPlane * nearClippingPlane / (farClippingPlane - nearClippingPlane);
		this.matProj.m[2][3] = 1;
		this.matProj.m[3][3] = 0;
		return this.matProj;
	}
	,totalElapsedTime: null
	,camera: null
	,speed: null
	,vel: null
	,update: function() {
		var dt = this.elapsedTime();
		if(!this.isKeyHeld(32)) {
			this.totalElapsedTime += dt * this.speed;
		}
		var vel = .2;
		if(this.isKeyHeld(16)) {
			vel = 2;
		}
		if(this.isKeyHeld(87)) {
			this.speed += dt * vel;
		}
		if(this.isKeyHeld(83)) {
			this.speed -= dt * vel;
		}
	}
	,debugText: null
	,draw: function() {
		var _g = 0;
		var _g1 = this.depth.length;
		while(_g < _g1) {
			var i = _g++;
			this.depth[i] = 0;
		}
		var matRotZ = new Matrix4x4();
		matRotZ.m[0][0] = Math.cos(this.totalElapsedTime);
		matRotZ.m[0][1] = Math.sin(this.totalElapsedTime);
		matRotZ.m[1][0] = -Math.sin(this.totalElapsedTime);
		matRotZ.m[1][1] = Math.cos(this.totalElapsedTime);
		matRotZ.m[2][2] = 1;
		matRotZ.m[3][3] = 1;
		var matRotX = new Matrix4x4();
		matRotX.m[0][0] = 1;
		matRotX.m[1][1] = Math.cos(this.totalElapsedTime * .5);
		matRotX.m[1][2] = Math.sin(this.totalElapsedTime * .5);
		matRotX.m[2][1] = -Math.sin(this.totalElapsedTime * .5);
		matRotX.m[2][2] = Math.cos(this.totalElapsedTime * .5);
		matRotX.m[3][3] = 1;
		var mesh = this.meshCube;
		var pos = new Vec3D(0,0,3);
		if(this.useTeapot) {
			if(this.teapot == null) {
				this.teapot = Teapot.create();
			}
			mesh = this.teapot;
			pos = new Vec3D(0,0,6);
		}
		var _g2 = 0;
		var _g3 = this.objects;
		while(_g2 < _g3) {
			var count = _g2++;
			var _g21 = mesh.iterator();
			while(_g21.head != null) {
				var val = _g21.head.item;
				_g21.head = _g21.head.next;
				var tri = val;
				pos.x = 1.4 * count;
				pos.y = .6 * count;
				pos.z = (this.useTeapot ? 4 : 2) * (count + 1) + 2;
				var triRotatedZ = new Triangle(matRotZ.Multiply(tri.p[0]),matRotZ.Multiply(tri.p[1]),matRotZ.Multiply(tri.p[2]));
				var triRotatedX = new Triangle(matRotX.Multiply(triRotatedZ.p[0]),matRotX.Multiply(triRotatedZ.p[1]),matRotX.Multiply(triRotatedZ.p[2]));
				var triTranslated = triRotatedX.translated(pos);
				var normal = triTranslated.getNormal();
				var similarityToCameraPos = normal.dotProduct(triTranslated.p[0].subtract(this.camera));
				if(this.insideOutMode && similarityToCameraPos < 0 || !this.insideOutMode && similarityToCameraPos > 0) {
					continue;
				}
				if(this.useTriangleColor && tri.col >>> 24 == 255) {
					this.g2.set_color(tri.col);
				} else if(!this.useLighting) {
					this.g2.set_color(kha__$Color_Color_$Impl_$.fromFloats(Math.random(),Math.random(),Math.random()));
				}
				if(this.useLighting) {
					var lightDir = new Vec3D(0,0,-1);
					var lightingAmount = Math.abs(lightDir.dotProduct(normal));
					this.g2.set_color(kha__$Color_Color_$Impl_$.fromFloats(lightingAmount * (this.useTriangleColor ? ((tri.col & 16711680) >>> 16) * 0.00392156862745098 : 1),lightingAmount * (this.useTriangleColor ? ((tri.col & 65280) >>> 8) * 0.00392156862745098 : 1),lightingAmount * (this.useTriangleColor ? (tri.col & 255) * 0.00392156862745098 : 1)));
				}
				var triProjected = new Triangle(this.matProj.Multiply(triTranslated.p[0]),this.matProj.Multiply(triTranslated.p[1]),this.matProj.Multiply(triTranslated.p[2]));
				triProjected.p[0].x += 1;
				triProjected.p[0].y += 1;
				triProjected.p[1].x += 1;
				triProjected.p[1].y += 1;
				triProjected.p[2].x += 1;
				triProjected.p[2].y += 1;
				triProjected.p[0].x *= 0.5 * Main.baseWidth;
				triProjected.p[0].y *= 0.5 * Main.baseHeight;
				triProjected.p[1].x *= 0.5 * Main.baseWidth;
				triProjected.p[1].y *= 0.5 * Main.baseHeight;
				triProjected.p[2].x *= 0.5 * Main.baseWidth;
				triProjected.p[2].y *= 0.5 * Main.baseHeight;
				this.fillTriangle(triProjected);
				if(this.wireframeEnabled) {
					this.g2.set_color(-1);
					this.drawTriangle(triProjected);
				}
			}
		}
		this.g2.set_color(-1);
	}
	,drawTriangle: function(triangle) {
		if(this.highResMode) {
			var str = 1;
			this.g2.drawLine(triangle.p[0].x * Main.pixelScale,triangle.p[0].y * Main.pixelScale,triangle.p[1].x * Main.pixelScale,triangle.p[1].y * Main.pixelScale,str);
			this.g2.drawLine(triangle.p[1].x * Main.pixelScale,triangle.p[1].y * Main.pixelScale,triangle.p[2].x * Main.pixelScale,triangle.p[2].y * Main.pixelScale,str);
			this.g2.drawLine(triangle.p[2].x * Main.pixelScale,triangle.p[2].y * Main.pixelScale,triangle.p[0].x * Main.pixelScale,triangle.p[0].y * Main.pixelScale,str);
		} else {
			this.drawLine(Math.round(triangle.p[0].x),Math.round(triangle.p[0].y),Math.round(triangle.p[1].x),Math.round(triangle.p[1].y));
			this.drawLine(Math.round(triangle.p[1].x),Math.round(triangle.p[1].y),Math.round(triangle.p[2].x),Math.round(triangle.p[2].y));
			this.drawLine(Math.round(triangle.p[2].x),Math.round(triangle.p[2].y),Math.round(triangle.p[0].x),Math.round(triangle.p[0].y));
		}
	}
	,fillTriangle: function(triangle) {
		if(this.highResMode) {
			this.g2.fillTriangle(triangle.p[0].x * Main.pixelScale,triangle.p[0].y * Main.pixelScale,triangle.p[1].x * Main.pixelScale,triangle.p[1].y * Main.pixelScale,triangle.p[2].x * Main.pixelScale,triangle.p[2].y * Main.pixelScale);
		} else {
			this.lowResTriFill(triangle);
		}
	}
	,abs: function(i) {
		if(i < 0) {
			return -i;
		} else {
			return i;
		}
	}
	,drawLineButComplicatedAndNotFaster: function(x1,y1,x2,y2) {
		var x;
		var y;
		var xe;
		var ye;
		var i;
		var dx = x2 - x1;
		var dy = y2 - y1;
		var dx1 = this.abs(dx);
		var dy1 = this.abs(dy);
		var px = 2 * dy1 - dx1;
		var py = 2 * dx1 - dy1;
		if(dy1 <= dx1) {
			if(dx >= 0) {
				x = x1;
				y = y1;
				xe = x2;
			} else {
				x = x2;
				y = y2;
				xe = x1;
			}
			this.drawPixel(x,y);
			var i1 = 0;
			while(x < xe) {
				++x;
				if(px < 0) {
					px += 2 * dy1;
				} else {
					if(dx < 0 && dy < 0 || dx > 0 && dy > 0) {
						++y;
					} else {
						--y;
					}
					px += 2 * (dy1 - dx1);
				}
				this.drawPixel(x,y);
				++i1;
			}
		} else {
			if(dy >= 0) {
				x = x1;
				y = y1;
				ye = y2;
			} else {
				x = x2;
				y = y2;
				ye = y1;
			}
			this.drawPixel(x,y);
			var i2 = 0;
			while(y < ye) {
				++y;
				if(py <= 0) {
					py += 2 * dx1;
				} else {
					if(dx < 0 && dy < 0 || dx > 0 && dy > 0) {
						++x;
					} else {
						--x;
					}
					py += 2 * (dx1 - dy1);
				}
				this.drawPixel(x,y);
				++i2;
			}
		}
	}
	,drawLine: function(x1,y1,x2,y2) {
		var dx = this.abs(x2 - x1);
		var sx = x1 < x2 ? 1 : -1;
		var dy = -this.abs(y2 - y1);
		var sy = y1 < y2 ? 1 : -1;
		var err = dx + dy;
		var pixelsDrawn = 0;
		var fX = x2 - x1;
		var fY = y2 - y1;
		var flip = fX >= fY;
		while(true) {
			this.drawPixel(x1,y1);
			if(x1 == x2 && y1 == y2) {
				break;
			}
			var e2 = 2 * err;
			if(e2 > dy) {
				err += dy;
				x1 += sx;
			}
			if(e2 < dx) {
				err += dx;
				y1 += sy;
			}
		}
	}
	,lowResTriFill: function(triangle) {
		var x1 = Math.round(triangle.p[0].x);
		var y1 = Math.round(triangle.p[0].y);
		var x2 = Math.round(triangle.p[1].x);
		var y2 = Math.round(triangle.p[1].y);
		var x3 = Math.round(triangle.p[2].x);
		var y3 = Math.round(triangle.p[2].y);
		var oneOver = 1 / triangle.p[0].w;
		if(y2 < y1) {
			var c = x1;
			x1 = x2;
			x2 = c;
			c = y1;
			y1 = y2;
			y2 = c;
		}
		if(y3 < y1) {
			var c1 = x1;
			x1 = x3;
			x3 = c1;
			c1 = y1;
			y1 = y3;
			y3 = c1;
		}
		if(y3 < y2) {
			var c2 = x3;
			x3 = x2;
			x2 = c2;
			c2 = y3;
			y3 = y2;
			y2 = c2;
		}
		var dy1 = y2 - y1;
		var dx1 = x2 - x1;
		var dy2 = y3 - y1;
		var dx2 = x3 - x1;
		var dax_step = 0.0;
		var dbx_step = 0.0;
		if(dy1 != 0) {
			dax_step = dx1 / Math.abs(dy1);
		}
		if(dy2 != 0) {
			dbx_step = dx2 / Math.abs(dy2);
		}
		if(dy1 != 0) {
			var _g = y1;
			var _g1 = y2 + 1;
			while(_g < _g1) {
				var i = _g++;
				var ax = x1 + (i - y1) * dax_step + 0.5 | 0;
				var bx = x1 + (i - y1) * dbx_step + 0.5 | 0;
				if(ax > bx) {
					var c3 = ax;
					ax = bx;
					bx = c3;
				}
				var _g2 = ax;
				var _g11 = bx + 1;
				while(_g2 < _g11) {
					var j = _g2++;
					if(this.depth[j + i * Main.baseWidth] < oneOver) {
						this.drawPixel(j,i);
						this.depth[j + i * Main.baseWidth] = oneOver;
					}
				}
			}
		}
		dy1 = y3 - y2;
		dx1 = x3 - x2;
		if(dy1 != 0) {
			dax_step = dx1 / Math.abs(dy1);
		}
		if(dy2 != 0) {
			dbx_step = dx2 / Math.abs(dy2);
		}
		if(dy1 != 0) {
			var _g3 = y2;
			var _g12 = y3 + 1;
			while(_g3 < _g12) {
				var i1 = _g3++;
				var ax1 = x2 + (i1 - y2) * dax_step + 0.5 | 0;
				var bx1 = x1 + (i1 - y1) * dbx_step + 0.5 | 0;
				if(ax1 > bx1) {
					var c4 = ax1;
					ax1 = bx1;
					bx1 = c4;
				}
				var _g4 = ax1;
				var _g13 = bx1 + 1;
				while(_g4 < _g13) {
					var j1 = _g4++;
					if(this.depth[j1 + i1 * Main.baseWidth] < oneOver) {
						this.drawPixel(j1,i1);
						this.depth[j1 + i1 * Main.baseWidth] = oneOver;
					}
				}
			}
		}
	}
	,calcStepValues: function(dx1,dy1,dax_step,dx2,dy2,dbx_step) {
		if(dy1 != 0) {
			dax_step = dx1 / Math.abs(dy1);
		}
		if(dy2 != 0) {
			dbx_step = dx2 / Math.abs(dy2);
		}
	}
	,calcStep: function(yLoop1,yLoop2,x1,y1,x2,y2,dax_step,dbx_step) {
		var _g = yLoop1;
		var _g1 = yLoop2;
		while(_g < _g1) {
			var i = _g++;
			var ax = x1 + ((i - y1) * dax_step | 0);
			var bx = x2 + ((i - y2) * dbx_step | 0);
			if(ax > bx) {
				var c = ax;
				ax = bx;
				bx = c;
			}
			var tstep = 1.0 / (bx - ax);
			var t = 0.0;
			var _g2 = ax;
			var _g11 = bx;
			while(_g2 < _g11) {
				var j = _g2++;
				this.drawPixel(j,i);
				t += tstep;
			}
		}
	}
	,font: null
	,mouseXFullRes: null
	,mouseX: null
	,mouseYFullRes: null
	,mouseY: null
	,heldButtons: null
	,lastTime: null
	,g2: null
	,g3: null
	,renderTime: null
	,showFPS: null
	,render: function(frames) {
		var curTime = kha_Scheduler.time();
		var timeSinceLastFrame = curTime - this.renderTime;
		this.renderTime = curTime;
		var framebuffer = frames[0];
		var graphics2d = framebuffer.get_g2();
		this.g2 = graphics2d;
		var graphics3d = framebuffer.get_g4();
		this.g3 = graphics3d;
		graphics2d.begin();
		graphics2d.set_color(-1);
		this.draw();
		if(this.showFPS) {
			var fps = Math.round(1 / timeSinceLastFrame);
			this.drawString(fps == null ? "null" : "" + fps,Main.baseWidth * Main.pixelScale - 15,5,40,-16711936,-16777216,2,0);
		}
		var s = this.debugText.length > 0 ? this.debugText + "\n" : "";
		s += "Speed: " + Std.string(this.speed) + " (W/S - Space to pause)\n";
		s += this.highResMode ? "-High Res (L)\n" : "-Low Res (L)\n";
		s += this.insideOutMode ? "-Inside Out (M)\n" : "-Right Side Out (M)\n";
		s += this.wireframeEnabled ? "-Wireframe Enabled (N)\n" : "-Wireframe Disabled (N)\n";
		s += this.useTeapot ? "-Teapot (O for Cube)\n" : "-Cube (O for Teapot)\n";
		s += "-Pixel Mode: " + Main.pixelScale + " (U/J)\n";
		s += "-Objects: " + this.objects + " (Y/H)\n";
		s += this.useTriangleColor ? "-Colors Enabled (K)\n" : "-Colors Disabled (K)\n";
		s += this.useLighting ? "-Light Enabled (,)\n" : "-Light Disabled (,)\n";
		s = s.substring(0,s.length - 1);
		this.drawString(s,15,5,24,-16711936,-16777216);
		graphics2d.end();
	}
	,drawString: function(text,x,y,size,color,fillBgColor,horizAlignment,vertAlignment) {
		var split = text.split("\n");
		var _g = 0;
		while(_g < split.length) {
			var str = split[_g];
			++_g;
			this.g2.set_fontSize(size);
			this.g2.set_font(this.font);
			if(fillBgColor != null) {
				var x1 = x;
				var y1 = y;
				var width = this.font.width(size,str);
				var height = this.font.height(size);
				if(horizAlignment == 1) {
					x1 -= width / 2;
				} else if(horizAlignment == 2) {
					x1 -= width;
				}
				if(vertAlignment == 1) {
					y1 -= height / 2;
				} else if(vertAlignment == 2) {
					y1 -= height;
				}
				this.g2.set_color(fillBgColor);
				this.g2.fillRect(x1,y1,width,height);
			}
			this.g2.set_color(color);
			kha_graphics2_GraphicsExtension.drawAlignedString(this.g2,str,x,y,horizAlignment,vertAlignment);
			y += this.font.height(size);
		}
	}
	,drawPixel: function(x,y,color) {
		if(color != null) {
			this.g2.set_color(color);
		}
		this.g2.fillRect(x * Main.pixelScale,y * Main.pixelScale,Main.pixelScale,Main.pixelScale);
	}
	,elapsedTime: function() {
		var time = kha_Scheduler.time();
		if(this.lastTime < 0) {
			this.lastTime = time;
		}
		var dt = time - this.lastTime;
		this.lastTime = time;
		return dt;
	}
	,isKeyHeld: function(keyCode) {
		var _g_head = this.heldButtons.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var button = val;
			if(button == keyCode) {
				return true;
			}
		}
		return false;
	}
	,onKeyDown: function(keyCode) {
		this.heldButtons.add(keyCode);
		switch(keyCode) {
		case 72:
			this.objects--;
			if(this.objects < 1) {
				this.objects = 1;
			}
			break;
		case 74:
			Main.pixelScale--;
			if(Main.pixelScale < 1) {
				Main.pixelScale = 1;
			}
			this.updateBounds();
			break;
		case 75:
			this.useTriangleColor = !this.useTriangleColor;
			break;
		case 76:
			this.highResMode = !this.highResMode;
			break;
		case 77:
			this.insideOutMode = !this.insideOutMode;
			break;
		case 78:
			this.wireframeEnabled = !this.wireframeEnabled;
			break;
		case 79:
			this.useTeapot = !this.useTeapot;
			break;
		case 80:
			this.showFPS = !this.showFPS;
			break;
		case 85:
			Main.pixelScale++;
			if(Main.pixelScale > 96) {
				Main.pixelScale = 96;
			}
			this.updateBounds();
			break;
		case 89:
			this.objects++;
			if(this.objects > 10) {
				this.objects = 10;
			}
			break;
		case 188:
			this.useLighting = !this.useLighting;
			break;
		default:
			return;
		}
	}
	,updateBounds: function() {
		var defaultWidth = 1024;
		var defaultHeight = 960;
		Main.baseWidth = defaultWidth / Main.pixelScale | 0;
		Main.baseHeight = defaultHeight / Main.pixelScale | 0;
	}
	,onKeyUp: function(keyCode) {
		this.heldButtons.remove(keyCode);
	}
	,__class__: Main
};
Math.__name__ = true;
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var v = parseInt(x, (x[(i + 1)]=="x" || x[(i + 1)]=="X") ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = true;
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
var Teapot = function() { };
$hxClasses["Teapot"] = Teapot;
Teapot.__name__ = true;
Teapot.create = function() {
	if(Teapot.teapot != null) {
		return Teapot.teapot;
	}
	Teapot.teapot = new Mesh();
	var points = [];
	points.push(Vec3D.get_Zero());
	kha_math_Random.init(0);
	var i = 0;
	while(i < Teapot.data.length) {
		var endOfLine = Teapot.data.indexOf("\n",i);
		if(endOfLine == -1) {
			endOfLine = Teapot.data.length;
		}
		var str = Teapot.data.substring(i,endOfLine);
		var split = str.split(" ");
		if(str.length > 0) {
			switch(str.charAt(0)) {
			case "f":
				var tri = new Triangle(points[Std.parseInt(split[1])],points[Std.parseInt(split[2])],points[Std.parseInt(split[3])]);
				Teapot.teapot.tris.add(tri);
				tri.col = kha_math_Random.getUpTo(16777215) | -16777216;
				break;
			case "v":
				points.push(new Vec3D(parseFloat(split[1]),parseFloat(split[2]),parseFloat(split[3])));
				break;
			}
		}
		i = endOfLine + 1;
	}
	return Teapot.teapot;
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = true;
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = true;
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
_$UInt_UInt_$Impl_$.gte = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a >= b;
	}
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	var int = this1;
	if(int < 0) {
		return 4294967296.0 + int;
	} else {
		return int + 0.0;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = true;
haxe_IMap.__isInterface__ = true;
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = true;
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = true;
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Object.create(cl1.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Object.create(cl2.prototype);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c11 << 2 | c2 >> 4;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c12 << 2 | c21 >> 4;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = c21 << 4 | c31 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat64(pos,v,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = true;
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = true;
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,keys: function() {
		var a = [];
		for( var key in this.h ) (this.h.hasOwnProperty(key) ? a.push(key | 0) : null);
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = true;
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,last: function() {
		if(this.q == null) {
			return null;
		} else {
			return this.q.item;
		}
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = true;
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["haxe.ds._List.ListIterator"] = haxe_ds__$List_ListIterator;
haxe_ds__$List_ListIterator.__name__ = true;
haxe_ds__$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	bigEndian: null
	,readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			var eof1 = ((eof) instanceof js__$Boot_HaxeError) ? eof.val : eof;
			if(((eof1) instanceof haxe_io_Eof)) {
				var eof2 = eof1;
			} else {
				throw eof;
			}
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = true;
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = true;
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = true;
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = true;
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = true;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if(((val) instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_lib__$ArrayBuffer_ArrayBufferCompat = function() { };
$hxClasses["js.lib._ArrayBuffer.ArrayBufferCompat"] = js_lib__$ArrayBuffer_ArrayBufferCompat;
js_lib__$ArrayBuffer_ArrayBufferCompat.__name__ = true;
js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var kha__$Assets_ImageList = function() {
	this.names = ["goat2"];
	this.goat2Description = { name : "goat2", original_height : 404, file_sizes : [4420], original_width : 436, files : ["goat2.png"], type : "image"};
	this.goat2Name = "goat2";
	this.goat2 = null;
};
$hxClasses["kha._Assets.ImageList"] = kha__$Assets_ImageList;
kha__$Assets_ImageList.__name__ = true;
kha__$Assets_ImageList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,goat2: null
	,goat2Name: null
	,goat2Description: null
	,goat2Load: function(done,failure) {
		kha_Assets.loadImage("goat2",function(image) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 126, className : "kha._Assets.ImageList", methodName : "goat2Load"});
	}
	,goat2Unload: function() {
		this.goat2.unload();
		this.goat2 = null;
	}
	,names: null
	,__class__: kha__$Assets_ImageList
};
var kha__$Assets_SoundList = function() {
	this.names = ["tone"];
	this.toneDescription = { name : "tone", file_sizes : [45975,144612], files : ["tone.ogg","tone.mp3"], type : "sound"};
	this.toneName = "tone";
	this.tone = null;
};
$hxClasses["kha._Assets.SoundList"] = kha__$Assets_SoundList;
kha__$Assets_SoundList.__name__ = true;
kha__$Assets_SoundList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,tone: null
	,toneName: null
	,toneDescription: null
	,toneLoad: function(done,failure) {
		kha_Assets.loadSound("tone",function(sound) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 130, className : "kha._Assets.SoundList", methodName : "toneLoad"});
	}
	,toneUnload: function() {
		this.tone.unload();
		this.tone = null;
	}
	,names: null
	,__class__: kha__$Assets_SoundList
};
var kha__$Assets_BlobList = function() {
	this.names = ["Apache_License_txt"];
	this.Apache_License_txtDescription = { name : "Apache_License_txt", file_sizes : [11323], files : ["Apache License.txt"], type : "blob"};
	this.Apache_License_txtName = "Apache_License_txt";
	this.Apache_License_txt = null;
};
$hxClasses["kha._Assets.BlobList"] = kha__$Assets_BlobList;
kha__$Assets_BlobList.__name__ = true;
kha__$Assets_BlobList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,Apache_License_txt: null
	,Apache_License_txtName: null
	,Apache_License_txtDescription: null
	,Apache_License_txtLoad: function(done,failure) {
		kha_Assets.loadBlob("Apache_License_txt",function(blob) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 134, className : "kha._Assets.BlobList", methodName : "Apache_License_txtLoad"});
	}
	,Apache_License_txtUnload: function() {
		this.Apache_License_txt.unload();
		this.Apache_License_txt = null;
	}
	,names: null
	,__class__: kha__$Assets_BlobList
};
var kha__$Assets_FontList = function() {
	this.names = ["OpenSans_Bold","OpenSans_BoldItalic","OpenSans_ExtraBold","OpenSans_ExtraBoldItalic","OpenSans_Italic","OpenSans_Light","OpenSans_LightItalic","OpenSans_Regular","OpenSans_Semibold","OpenSans_SemiboldItalic"];
	this.OpenSans_SemiboldItalicDescription = { name : "OpenSans_SemiboldItalic", file_sizes : [212820], files : ["OpenSans-SemiboldItalic.ttf"], type : "font"};
	this.OpenSans_SemiboldItalicName = "OpenSans_SemiboldItalic";
	this.OpenSans_SemiboldItalic = null;
	this.OpenSans_SemiboldDescription = { name : "OpenSans_Semibold", file_sizes : [221328], files : ["OpenSans-Semibold.ttf"], type : "font"};
	this.OpenSans_SemiboldName = "OpenSans_Semibold";
	this.OpenSans_Semibold = null;
	this.OpenSans_RegularDescription = { name : "OpenSans_Regular", file_sizes : [217360], files : ["OpenSans-Regular.ttf"], type : "font"};
	this.OpenSans_RegularName = "OpenSans_Regular";
	this.OpenSans_Regular = null;
	this.OpenSans_LightItalicDescription = { name : "OpenSans_LightItalic", file_sizes : [213128], files : ["OpenSans-LightItalic.ttf"], type : "font"};
	this.OpenSans_LightItalicName = "OpenSans_LightItalic";
	this.OpenSans_LightItalic = null;
	this.OpenSans_LightDescription = { name : "OpenSans_Light", file_sizes : [222412], files : ["OpenSans-Light.ttf"], type : "font"};
	this.OpenSans_LightName = "OpenSans_Light";
	this.OpenSans_Light = null;
	this.OpenSans_ItalicDescription = { name : "OpenSans_Italic", file_sizes : [212896], files : ["OpenSans-Italic.ttf"], type : "font"};
	this.OpenSans_ItalicName = "OpenSans_Italic";
	this.OpenSans_Italic = null;
	this.OpenSans_ExtraBoldItalicDescription = { name : "OpenSans_ExtraBoldItalic", file_sizes : [213420], files : ["OpenSans-ExtraBoldItalic.ttf"], type : "font"};
	this.OpenSans_ExtraBoldItalicName = "OpenSans_ExtraBoldItalic";
	this.OpenSans_ExtraBoldItalic = null;
	this.OpenSans_ExtraBoldDescription = { name : "OpenSans_ExtraBold", file_sizes : [222584], files : ["OpenSans-ExtraBold.ttf"], type : "font"};
	this.OpenSans_ExtraBoldName = "OpenSans_ExtraBold";
	this.OpenSans_ExtraBold = null;
	this.OpenSans_BoldItalicDescription = { name : "OpenSans_BoldItalic", file_sizes : [213292], files : ["OpenSans-BoldItalic.ttf"], type : "font"};
	this.OpenSans_BoldItalicName = "OpenSans_BoldItalic";
	this.OpenSans_BoldItalic = null;
	this.OpenSans_BoldDescription = { name : "OpenSans_Bold", file_sizes : [224592], files : ["OpenSans-Bold.ttf"], type : "font"};
	this.OpenSans_BoldName = "OpenSans_Bold";
	this.OpenSans_Bold = null;
};
$hxClasses["kha._Assets.FontList"] = kha__$Assets_FontList;
kha__$Assets_FontList.__name__ = true;
kha__$Assets_FontList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,OpenSans_Bold: null
	,OpenSans_BoldName: null
	,OpenSans_BoldDescription: null
	,OpenSans_BoldLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_Bold",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_BoldLoad"});
	}
	,OpenSans_BoldUnload: function() {
		this.OpenSans_Bold.unload();
		this.OpenSans_Bold = null;
	}
	,OpenSans_BoldItalic: null
	,OpenSans_BoldItalicName: null
	,OpenSans_BoldItalicDescription: null
	,OpenSans_BoldItalicLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_BoldItalic",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_BoldItalicLoad"});
	}
	,OpenSans_BoldItalicUnload: function() {
		this.OpenSans_BoldItalic.unload();
		this.OpenSans_BoldItalic = null;
	}
	,OpenSans_ExtraBold: null
	,OpenSans_ExtraBoldName: null
	,OpenSans_ExtraBoldDescription: null
	,OpenSans_ExtraBoldLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_ExtraBold",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_ExtraBoldLoad"});
	}
	,OpenSans_ExtraBoldUnload: function() {
		this.OpenSans_ExtraBold.unload();
		this.OpenSans_ExtraBold = null;
	}
	,OpenSans_ExtraBoldItalic: null
	,OpenSans_ExtraBoldItalicName: null
	,OpenSans_ExtraBoldItalicDescription: null
	,OpenSans_ExtraBoldItalicLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_ExtraBoldItalic",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_ExtraBoldItalicLoad"});
	}
	,OpenSans_ExtraBoldItalicUnload: function() {
		this.OpenSans_ExtraBoldItalic.unload();
		this.OpenSans_ExtraBoldItalic = null;
	}
	,OpenSans_Italic: null
	,OpenSans_ItalicName: null
	,OpenSans_ItalicDescription: null
	,OpenSans_ItalicLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_Italic",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_ItalicLoad"});
	}
	,OpenSans_ItalicUnload: function() {
		this.OpenSans_Italic.unload();
		this.OpenSans_Italic = null;
	}
	,OpenSans_Light: null
	,OpenSans_LightName: null
	,OpenSans_LightDescription: null
	,OpenSans_LightLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_Light",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_LightLoad"});
	}
	,OpenSans_LightUnload: function() {
		this.OpenSans_Light.unload();
		this.OpenSans_Light = null;
	}
	,OpenSans_LightItalic: null
	,OpenSans_LightItalicName: null
	,OpenSans_LightItalicDescription: null
	,OpenSans_LightItalicLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_LightItalic",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_LightItalicLoad"});
	}
	,OpenSans_LightItalicUnload: function() {
		this.OpenSans_LightItalic.unload();
		this.OpenSans_LightItalic = null;
	}
	,OpenSans_Regular: null
	,OpenSans_RegularName: null
	,OpenSans_RegularDescription: null
	,OpenSans_RegularLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_Regular",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_RegularLoad"});
	}
	,OpenSans_RegularUnload: function() {
		this.OpenSans_Regular.unload();
		this.OpenSans_Regular = null;
	}
	,OpenSans_Semibold: null
	,OpenSans_SemiboldName: null
	,OpenSans_SemiboldDescription: null
	,OpenSans_SemiboldLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_Semibold",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_SemiboldLoad"});
	}
	,OpenSans_SemiboldUnload: function() {
		this.OpenSans_Semibold.unload();
		this.OpenSans_Semibold = null;
	}
	,OpenSans_SemiboldItalic: null
	,OpenSans_SemiboldItalicName: null
	,OpenSans_SemiboldItalicDescription: null
	,OpenSans_SemiboldItalicLoad: function(done,failure) {
		kha_Assets.loadFont("OpenSans_SemiboldItalic",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.FontList", methodName : "OpenSans_SemiboldItalicLoad"});
	}
	,OpenSans_SemiboldItalicUnload: function() {
		this.OpenSans_SemiboldItalic.unload();
		this.OpenSans_SemiboldItalic = null;
	}
	,names: null
	,__class__: kha__$Assets_FontList
};
var kha__$Assets_VideoList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.VideoList"] = kha__$Assets_VideoList;
kha__$Assets_VideoList.__name__ = true;
kha__$Assets_VideoList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,names: null
	,__class__: kha__$Assets_VideoList
};
var kha_Assets = function() { };
$hxClasses["kha.Assets"] = kha_Assets;
kha_Assets.__name__ = true;
kha_Assets.loadEverything = function(callback,filter,uncompressSoundsFilter,failed) {
	var lists = [kha__$Assets_ImageList,kha__$Assets_SoundList,kha__$Assets_BlobList,kha__$Assets_FontList,kha__$Assets_VideoList];
	var listInstances = [kha_Assets.images,kha_Assets.sounds,kha_Assets.blobs,kha_Assets.fonts,kha_Assets.videos];
	var fileCount = 0;
	var _g = 0;
	while(_g < lists.length) {
		var list = lists[_g];
		++_g;
		var _g1 = 0;
		var _g11 = Type.getInstanceFields(list);
		while(_g1 < _g11.length) {
			var file = _g11[_g1];
			++_g1;
			if(StringTools.endsWith(file,"Description")) {
				fileCount += 1;
			}
		}
	}
	if(fileCount == 0) {
		callback();
		return;
	}
	var filesLeft = fileCount;
	var loadFunc = function(desc,done,failure) {
		var name = desc.name;
		switch(desc.type) {
		case "blob":
			kha_Assets.loadBlob(name,function(blob) {
				done();
			},failure,{ fileName : "kha/Assets.hx", lineNumber : 122, className : "kha.Assets", methodName : "loadEverything"});
			break;
		case "font":
			kha_Assets.loadFont(name,function(font) {
				done();
			},failure,{ fileName : "kha/Assets.hx", lineNumber : 124, className : "kha.Assets", methodName : "loadEverything"});
			break;
		case "image":
			kha_Assets.loadImage(name,function(image) {
				done();
			},failure,{ fileName : "kha/Assets.hx", lineNumber : 113, className : "kha.Assets", methodName : "loadEverything"});
			break;
		case "sound":
			kha_Assets.loadSound(name,function(sound) {
				if(uncompressSoundsFilter == null || uncompressSoundsFilter(desc)) {
					sound.uncompress(done);
				} else {
					done();
				}
			},failure,{ fileName : "kha/Assets.hx", lineNumber : 115, className : "kha.Assets", methodName : "loadEverything"});
			break;
		case "video":
			kha_Assets.loadVideo(name,function(video) {
				done();
			},failure,{ fileName : "kha/Assets.hx", lineNumber : 126, className : "kha.Assets", methodName : "loadEverything"});
			break;
		}
	};
	var onLoaded = function() {
		filesLeft -= 1;
		kha_Assets.progress = 1 - filesLeft / fileCount;
		if(filesLeft == 0) {
			callback();
		}
	};
	var onError = function(err) {
		(kha_Assets.reporter(failed,{ fileName : "kha/Assets.hx", lineNumber : 137, className : "kha.Assets", methodName : "loadEverything"}))(err);
		onLoaded();
	};
	var _g12 = 0;
	var _g2 = lists.length;
	while(_g12 < _g2) {
		var i = _g12++;
		var list1 = lists[i];
		var listInstance = listInstances[i];
		var _g13 = 0;
		var _g21 = Type.getInstanceFields(list1);
		while(_g13 < _g21.length) {
			var field = _g21[_g13];
			++_g13;
			if(!StringTools.endsWith(field,"Description")) {
				continue;
			}
			var desc1 = Reflect.field(listInstance,field);
			if(filter == null || filter(desc1)) {
				loadFunc(desc1,onLoaded,onError);
			} else {
				onLoaded();
			}
		}
	}
};
kha_Assets.loadImage = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.images,name + "Description");
	kha_LoaderImpl.loadImageFromDescription(description,function(image) {
		kha_Assets.images[name] = image;
		done(image);
	},kha_Assets.reporter(failed,pos));
};
kha_Assets.loadImageFromPath = function(path,readable,done,failed,pos) {
	var description = { files : [path], readable : readable};
	kha_LoaderImpl.loadImageFromDescription(description,done,kha_Assets.reporter(failed,pos));
};
kha_Assets.get_imageFormats = function() {
	return kha_LoaderImpl.getImageFormats();
};
kha_Assets.loadBlob = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.blobs,name + "Description");
	kha_LoaderImpl.loadBlobFromDescription(description,function(blob) {
		kha_Assets.blobs[name] = blob;
		done(blob);
	},kha_Assets.reporter(failed,pos));
};
kha_Assets.loadBlobFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	kha_LoaderImpl.loadBlobFromDescription(description,done,kha_Assets.reporter(failed,pos));
};
kha_Assets.loadSound = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.sounds,name + "Description");
	kha_LoaderImpl.loadSoundFromDescription(description,function(sound) {
		kha_Assets.sounds[name] = sound;
		done(sound);
	},kha_Assets.reporter(failed,pos));
	return;
};
kha_Assets.loadSoundFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	kha_LoaderImpl.loadSoundFromDescription(description,done,kha_Assets.reporter(failed,pos));
	return;
};
kha_Assets.get_soundFormats = function() {
	return kha_LoaderImpl.getSoundFormats();
};
kha_Assets.loadFont = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.fonts,name + "Description");
	kha_LoaderImpl.loadFontFromDescription(description,function(font) {
		kha_Assets.fonts[name] = font;
		done(font);
	},kha_Assets.reporter(failed,pos));
	return;
};
kha_Assets.loadFontFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	kha_LoaderImpl.loadFontFromDescription(description,done,kha_Assets.reporter(failed,pos));
	return;
};
kha_Assets.get_fontFormats = function() {
	return ["ttf"];
};
kha_Assets.loadVideo = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.videos,name + "Description");
	kha_LoaderImpl.loadVideoFromDescription(description,function(video) {
		kha_Assets.videos[name] = video;
		done(video);
	},kha_Assets.reporter(failed,pos));
	return;
};
kha_Assets.loadVideoFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	kha_LoaderImpl.loadVideoFromDescription(description,done,kha_Assets.reporter(failed,pos));
	return;
};
kha_Assets.get_videoFormats = function() {
	return kha_LoaderImpl.getVideoFormats();
};
kha_Assets.reporter = function(custom,pos) {
	if(custom != null) {
		return custom;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		return function(v) {
			f(v,infos);
		};
	}
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = true;
kha_Canvas.__isInterface__ = true;
kha_Canvas.prototype = {
	get_width: null
	,get_height: null
	,get_g1: null
	,get_g2: null
	,get_g4: null
	,width: null
	,height: null
	,g1: null
	,g2: null
	,g4: null
	,__class__: kha_Canvas
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = true;
kha_Resource.__isInterface__ = true;
kha_Resource.prototype = {
	unload: null
	,__class__: kha_Resource
};
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = true;
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.create = function(width,height,format,usage) {
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0,1);
	}
};
kha_Image.create3D = function(width,height,depth,format,usage) {
	return null;
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil,antiAliasingSamples);
	}
};
kha_Image.fromCanvas = function(canvas) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(canvas.width,canvas.height,0,false);
		img.image = canvas;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(canvas.width,canvas.height,0,false,0,1);
		img1.image = canvas;
		img1.createTexture();
		return img1;
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,0,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(image.width,image.height,0,false,0,1);
		img1.image = image;
		img1.createTexture();
		return img1;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage) {
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0,1);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	var img1 = new kha_CanvasImage(width,height,format,false);
	var g2 = img1.get_g2();
	var canvas = g2.canvas;
	var imageData = new ImageData(new Uint8ClampedArray(bytes.b.bufferValue),width,height);
	canvas.putImageData(imageData,0,0);
	return img1;
};
kha_Image.fromBytes3D = function(bytes,width,height,depth,format,usage) {
	return null;
};
kha_Image.fromEncodedBytes = function(bytes,fileExtention,doneCallback,errorCallback,readable) {
	if(readable == null) {
		readable = false;
	}
	var dataUrl = "data:image;base64," + haxe_crypto_Base64.encode(bytes);
	var imageElement = js_Boot.__cast(window.document.createElement("img") , HTMLImageElement);
	imageElement.onload = function() {
		var tmp = kha_Image.fromImage(imageElement,readable);
		doneCallback(tmp);
	};
	imageElement.onerror = function() {
		errorCallback("Image was not created");
	};
	imageElement.src = dataUrl;
};
kha_Image.fromVideo = function(video) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(video.element.videoWidth,video.element.videoHeight,0,false);
		img.video = video.element;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(video.element.videoWidth,video.element.videoHeight,0,false,0,1);
		img1.video = video.element;
		img1.createTexture();
		return img1;
	}
};
kha_Image.get_maxSize = function() {
	if(kha_SystemImpl.gl == null) {
		return 8192;
	} else {
		return kha_SystemImpl.gl.getParameter(3379);
	}
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.renderTargetsInvertedY = function() {
	return true;
};
kha_Image.prototype = {
	isOpaque: function(x,y) {
		return false;
	}
	,at: function(x,y) {
		return -16777216;
	}
	,unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,getPixels: function() {
		return null;
	}
	,generateMipmaps: function(levels) {
	}
	,setMipmaps: function(mipmaps) {
	}
	,setDepthStencilFrom: function(image) {
	}
	,clear: function(x,y,z,width,height,depth,color) {
	}
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,depth: null
	,get_depth: function() {
		return 1;
	}
	,realWidth: null
	,get_realWidth: function() {
		return 0;
	}
	,realHeight: null
	,get_realHeight: function() {
		return 0;
	}
	,g1: null
	,get_g1: function() {
		return null;
	}
	,g2: null
	,get_g2: function() {
		return null;
	}
	,g4: null
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.g2canvas = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = true;
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,data: null
	,myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,frameBuffer: null
	,graphics1: null
	,g2canvas: null
	,get_g1: function() {
		if(this.graphics1 == null) {
			this.graphics1 = new kha_graphics2_Graphics1(this);
		}
		return this.graphics1;
	}
	,get_g2: function() {
		if(this.g2canvas == null) {
			var canvas = window.document.createElement("canvas");
			this.image = canvas;
			var context = canvas.getContext("2d");
			canvas.width = this.get_width();
			canvas.height = this.get_height();
			this.g2canvas = new kha_js_CanvasGraphics(context);
		}
		return this.g2canvas;
	}
	,get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,isOpaque: function(x,y) {
		if(this.data == null) {
			if(kha_CanvasImage.context == null) {
				return true;
			} else {
				this.createImageData();
			}
		}
		return this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3] != 0;
	}
	,at: function(x,y) {
		if(this.data == null) {
			if(kha_CanvasImage.context == null) {
				return -16777216;
			} else {
				this.createImageData();
			}
		}
		var r = this.data.data[y * (this.image.width | 0) * 4 + x * 4];
		var g = this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 1];
		var b = this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 2];
		var a = this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3];
		return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
	}
	,createImageData: function() {
		kha_CanvasImage.context.strokeStyle = "rgba(0,0,0,0)";
		kha_CanvasImage.context.fillStyle = "rgba(0,0,0,0)";
		kha_CanvasImage.context.fillRect(0,0,this.image.width,this.image.height);
		kha_CanvasImage.context.drawImage(this.image,0,0,this.image.width,this.image.height,0,0,this.image.width,this.image.height);
		this.data = kha_CanvasImage.context.getImageData(0,0,this.image.width,this.image.height);
	}
	,texture: null
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.format == 0 ? 4 * this.get_width() * this.get_height() : this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,new Uint8Array(this.bytes.b.bufferValue));
			if(kha_SystemImpl.gl.getError() == 1282) {
				var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
				var _g = 0;
				var _g1 = this.get_height();
				while(_g < _g1) {
					var y = _g++;
					var _g2 = 0;
					var _g11 = this.get_width();
					while(_g2 < _g11) {
						var x = _g2++;
						var _this = this.bytes;
						var pos = y * this.get_width() + x;
						var value = _this.b[pos];
						var pos1 = y * this.get_width() * 4 + x * 4;
						rgbaBytes.b[pos1] = value;
						var pos2 = y * this.get_width() * 4 + x * 4 + 1;
						rgbaBytes.b[pos2] = value;
						var pos3 = y * this.get_width() * 4 + x * 4 + 2;
						rgbaBytes.b[pos3] = value;
						var pos4 = y * this.get_width() * 4 + x * 4 + 3;
						rgbaBytes.b[pos4] = 255;
					}
				}
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,new Uint8Array(rgbaBytes.b.bufferValue));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,getPixels: function() {
		var context = this.g2canvas.canvas;
		var imageData = context.getImageData(0,0,this.get_width(),this.get_height());
		var bytes = new haxe_io_Bytes(new ArrayBuffer(imageData.data.length));
		var _g = 0;
		var _g1 = imageData.data.length;
		while(_g < _g1) {
			var i = _g++;
			bytes.b[i] = imageData.data[i];
		}
		return bytes;
	}
	,unload: function() {
		this.image = null;
		this.video = null;
		this.data = null;
	}
	,__class__: kha_CanvasImage
});
var kha__$Color_Color_$Impl_$ = {};
$hxClasses["kha._Color.Color_Impl_"] = kha__$Color_Color_$Impl_$;
kha__$Color_Color_$Impl_$.__name__ = true;
kha__$Color_Color_$Impl_$.fromValue = function(value) {
	return kha__$Color_Color_$Impl_$._new(value);
};
kha__$Color_Color_$Impl_$.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
};
kha__$Color_Color_$Impl_$.fromFloats = function(r,g,b,a) {
	if(a == null) {
		a = 1;
	}
	return kha__$Color_Color_$Impl_$._new((a * 255 | 0) << 24 | (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
};
kha__$Color_Color_$Impl_$.fromString = function(value) {
	if((value.length == 7 || value.length == 9) && value.charCodeAt(0) == 35) {
		var colorValue = Std.parseInt("0x" + HxOverrides.substr(value,1,null));
		if(value.length == 7) {
			colorValue += -16777216;
		}
		return kha__$Color_Color_$Impl_$._new(colorValue);
	} else {
		throw new js__$Boot_HaxeError("Invalid Color string: '" + value + "'");
	}
};
kha__$Color_Color_$Impl_$._new = function(value) {
	var this1 = value;
	return this1;
};
kha__$Color_Color_$Impl_$.get_value = function(this1) {
	return this1;
};
kha__$Color_Color_$Impl_$.set_value = function(this1,value) {
	this1 = value;
	return this1;
};
kha__$Color_Color_$Impl_$.get_Rb = function(this1) {
	return (this1 & 16711680) >>> 16;
};
kha__$Color_Color_$Impl_$.get_Gb = function(this1) {
	return (this1 & 65280) >>> 8;
};
kha__$Color_Color_$Impl_$.get_Bb = function(this1) {
	return this1 & 255;
};
kha__$Color_Color_$Impl_$.get_Ab = function(this1) {
	return this1 >>> 24;
};
kha__$Color_Color_$Impl_$.set_Rb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | i << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Gb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | i << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Bb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | i;
	return i;
};
kha__$Color_Color_$Impl_$.set_Ab = function(this1,i) {
	this1 = i << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.get_R = function(this1) {
	return ((this1 & 16711680) >>> 16) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_G = function(this1) {
	return ((this1 & 65280) >>> 8) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_B = function(this1) {
	return (this1 & 255) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_A = function(this1) {
	return (this1 >>> 24) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.set_R = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (f * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_G = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (f * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_B = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | (f * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_A = function(this1,f) {
	this1 = (f * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
var kha_Display = function() {
};
$hxClasses["kha.Display"] = kha_Display;
kha_Display.__name__ = true;
kha_Display.get_primary = function() {
	return kha_Display.instance;
};
kha_Display.get_all = function() {
	return [kha_Display.get_primary()];
};
kha_Display.prototype = {
	get_available: function() {
		return true;
	}
	,get_name: function() {
		return "Display";
	}
	,get_x: function() {
		return window.screen.left;
	}
	,get_y: function() {
		return window.screen.top;
	}
	,get_width: function() {
		return window.screen.width;
	}
	,get_height: function() {
		return window.screen.height;
	}
	,get_frequency: function() {
		return 60;
	}
	,get_pixelsPerInch: function() {
		var dpiElement = window.document.createElement("div");
		dpiElement.style.position = "absolute";
		dpiElement.style.width = "1in";
		dpiElement.style.height = "1in";
		dpiElement.style.left = "-100%";
		dpiElement.style.top = "-100%";
		window.document.body.appendChild(dpiElement);
		var dpi = dpiElement.offsetHeight;
		dpiElement.remove();
		return dpi;
	}
	,get_modes: function() {
		return [];
	}
	,__class__: kha_Display
};
var kha_DisplayMode = function(width,height,frequency,bitsPerPixel) {
	this.width = width;
	this.height = height;
	this.frequency = frequency;
	this.bitsPerPixel = bitsPerPixel;
};
$hxClasses["kha.DisplayMode"] = kha_DisplayMode;
kha_DisplayMode.__name__ = true;
kha_DisplayMode.prototype = {
	width: null
	,height: null
	,frequency: null
	,bitsPerPixel: null
	,__class__: kha_DisplayMode
};
var kha_Framebuffer = function($window,g1,g2,g4) {
	this.window = $window;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = true;
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	window: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,init: function(g1,g2,g4) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
	}
	,get_g1: function() {
		return this.graphics1;
	}
	,get_g2: function() {
		return this.graphics2;
	}
	,get_g4: function() {
		return this.graphics4;
	}
	,width: null
	,get_width: function() {
		return kha_System.windowWidth(this.window);
	}
	,height: null
	,get_height: function() {
		return kha_System.windowHeight(this.window);
	}
	,__class__: kha_Framebuffer
};
var kha_FramebufferOptions = function(frequency,verticalSync,colorBufferBits,depthBufferBits,stencilBufferBits,samplesPerPixel) {
	if(samplesPerPixel == null) {
		samplesPerPixel = 1;
	}
	if(stencilBufferBits == null) {
		stencilBufferBits = 8;
	}
	if(depthBufferBits == null) {
		depthBufferBits = 16;
	}
	if(colorBufferBits == null) {
		colorBufferBits = 32;
	}
	if(verticalSync == null) {
		verticalSync = true;
	}
	if(frequency == null) {
		frequency = 60;
	}
	this.samplesPerPixel = 1;
	this.stencilBufferBits = 8;
	this.depthBufferBits = 16;
	this.colorBufferBits = 32;
	this.verticalSync = true;
	this.frequency = 60;
	this.frequency = frequency;
	this.verticalSync = verticalSync;
	this.colorBufferBits = colorBufferBits;
	this.depthBufferBits = depthBufferBits;
	this.stencilBufferBits = stencilBufferBits;
	this.samplesPerPixel = samplesPerPixel;
};
$hxClasses["kha.FramebufferOptions"] = kha_FramebufferOptions;
kha_FramebufferOptions.__name__ = true;
kha_FramebufferOptions.prototype = {
	frequency: null
	,verticalSync: null
	,colorBufferBits: null
	,depthBufferBits: null
	,stencilBufferBits: null
	,samplesPerPixel: null
	,__class__: kha_FramebufferOptions
};
var kha_AlignedQuad = function() {
};
$hxClasses["kha.AlignedQuad"] = kha_AlignedQuad;
kha_AlignedQuad.__name__ = true;
kha_AlignedQuad.prototype = {
	x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
	,xadvance: null
	,__class__: kha_AlignedQuad
};
var kha_KravurImage = function(size,ascent,descent,lineGap,width,height,chars,pixels) {
	this.mySize = size;
	this.width = width;
	this.height = height;
	this.chars = chars;
	this.baseline = ascent;
	var _g = 0;
	while(_g < chars.length) {
		var char = chars[_g];
		++_g;
		char.yoff += this.baseline;
	}
	this.texture = kha_Image.create(width,height,1);
	var bytes = this.texture.lock();
	var pos = 0;
	var _g1 = 0;
	var _g2 = height;
	while(_g1 < _g2) {
		var y = _g1++;
		var _g11 = 0;
		var _g21 = width;
		while(_g11 < _g21) {
			var x = _g11++;
			var v = pixels.readU8(pos);
			bytes.b[pos] = v;
			++pos;
		}
	}
	this.texture.unlock();
};
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = true;
kha_KravurImage.prototype = {
	mySize: null
	,chars: null
	,texture: null
	,width: null
	,height: null
	,baseline: null
	,getTexture: function() {
		return this.texture;
	}
	,getBakedQuad: function(q,char_index,xpos,ypos) {
		if(char_index >= this.chars.length) {
			return null;
		}
		var ipw = 1.0 / this.width;
		var iph = 1.0 / this.height;
		var b = this.chars[char_index];
		if(b == null) {
			return null;
		}
		var round_x = Math.round(xpos + b.xoff);
		var round_y = Math.round(ypos + b.yoff);
		q.x0 = round_x;
		q.y0 = round_y;
		q.x1 = round_x + b.x1 - b.x0;
		q.y1 = round_y + b.y1 - b.y0;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		q.xadvance = b.xadvance;
		return q;
	}
	,getCharWidth: function(charIndex) {
		if(this.chars.length == 0) {
			return 0;
		}
		var offset = kha_KravurImage.charBlocks[0];
		if(charIndex < offset) {
			return this.chars[0].xadvance;
		}
		var _g = 1;
		var _g1 = kha_KravurImage.charBlocks.length / 2 | 0;
		while(_g < _g1) {
			var i = _g++;
			var prevEnd = kha_KravurImage.charBlocks[i * 2 - 1];
			var start = kha_KravurImage.charBlocks[i * 2];
			if(charIndex > start - 1) {
				offset += start - 1 - prevEnd;
			}
		}
		if(charIndex - offset >= this.chars.length) {
			return this.chars[0].xadvance;
		}
		return this.chars[charIndex - offset].xadvance;
	}
	,getHeight: function() {
		return this.mySize;
	}
	,stringWidth: function(str) {
		var width = 0;
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var c = _g++;
			width += this.getCharWidth(HxOverrides.cca(str,c));
		}
		return width;
	}
	,charactersWidth: function(characters,start,length) {
		var width = 0;
		var _g = start;
		var _g1 = start + length;
		while(_g < _g1) {
			var i = _g++;
			width += this.getCharWidth(characters[i]);
		}
		return width;
	}
	,getBaselinePosition: function() {
		return this.baseline;
	}
	,__class__: kha_KravurImage
};
var kha_Kravur = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.blob = blob;
};
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = true;
kha_Kravur.__interfaces__ = [kha_Resource];
kha_Kravur.fromBytes = function(bytes) {
	return new kha_Kravur(kha_internal_BytesBlob.fromBytes(bytes));
};
kha_Kravur.prototype = {
	oldGlyphs: null
	,blob: null
	,images: null
	,_get: function(fontSize) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		if(glyphs != this.oldGlyphs) {
			this.oldGlyphs = glyphs;
			kha_KravurImage.charBlocks = [glyphs[0]];
			var nextChar = kha_KravurImage.charBlocks[0] + 1;
			var _g = 1;
			var _g1 = glyphs.length;
			while(_g < _g1) {
				var i = _g++;
				if(glyphs[i] != nextChar) {
					kha_KravurImage.charBlocks.push(glyphs[i - 1]);
					kha_KravurImage.charBlocks.push(glyphs[i]);
					nextChar = glyphs[i] + 1;
				} else {
					++nextChar;
				}
			}
			kha_KravurImage.charBlocks.push(glyphs[glyphs.length - 1]);
		}
		var imageIndex = fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var width = 64;
			var height = 32;
			var this1 = new Array(glyphs.length);
			var baked = this1;
			var _g2 = 0;
			var _g11 = baked.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				baked[i1] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			}
			var pixels = null;
			var status = -1;
			while(status <= 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,0,fontSize,pixels,width,height,glyphs,baked);
			}
			var info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,0);
			var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			var ascent = Math.round(metrics.ascent * scale);
			var descent = Math.round(metrics.descent * scale);
			var lineGap = Math.round(metrics.lineGap * scale);
			var image = new kha_KravurImage(fontSize | 0,ascent,descent,lineGap,width,height,baked,pixels);
			this.images.h[imageIndex] = image;
			return image;
		}
		return this.images.h[imageIndex];
	}
	,height: function(fontSize) {
		return this._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this._get(fontSize).stringWidth(str);
	}
	,widthOfCharacters: function(fontSize,characters,start,length) {
		return this._get(fontSize).charactersWidth(characters,start,length);
	}
	,baseline: function(fontSize) {
		return this._get(fontSize).getBaselinePosition();
	}
	,unload: function() {
		this.blob = null;
		this.images = null;
	}
	,__class__: kha_Kravur
};
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = true;
kha_LoaderImpl.getImageFormats = function() {
	return ["png","jpg","hdr"];
};
kha_LoaderImpl.loadImageFromDescription = function(desc,done,failed) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			var tmp = kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,2,readable ? 1 : 0);
			done(tmp);
		},failed);
	} else {
		var img = window.document.createElement("img");
		img.onerror = function(event) {
			failed({ url : desc.files[0], error : event});
		};
		img.onload = function(event1) {
			var tmp1 = kha_Image.fromImage(img,readable);
			done(tmp1);
		};
		img.crossOrigin = "";
		img.src = desc.files[0];
	}
};
kha_LoaderImpl.getSoundFormats = function() {
	var element = window.document.createElement("audio");
	var formats = [];
	if(element.canPlayType("audio/mp4") != "") {
		formats.push("mp4");
	}
	if(element.canPlayType("audio/mp3") != "") {
		formats.push("mp3");
	}
	if(element.canPlayType("audio/wav") != "") {
		formats.push("wav");
	}
	if(kha_SystemImpl._hasWebAudio || element.canPlayType("audio/ogg") != "") {
		formats.push("ogg");
	}
	return formats;
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done,failed) {
	if(kha_SystemImpl._hasWebAudio) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var i = _g++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/mp3") != "") {
			var _g2 = 0;
			var _g11 = desc.files.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				var file1 = desc.files[i1];
				if(StringTools.endsWith(file1,".mp3")) {
					new kha_js_WebAudioSound(file1,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/wav") != "") {
			var _g3 = 0;
			var _g12 = desc.files.length;
			while(_g3 < _g12) {
				var i2 = _g3++;
				var file2 = desc.files[i2];
				if(StringTools.endsWith(file2,".wav")) {
					new kha_js_WebAudioSound(file2,done,failed);
					return;
				}
			}
		}
		var _g4 = 0;
		var _g13 = desc.files.length;
		while(_g4 < _g13) {
			var i3 = _g4++;
			var file3 = desc.files[i3];
			if(StringTools.endsWith(file3,".ogg")) {
				new kha_js_WebAudioSound(file3,done,failed);
				return;
			}
		}
	} else if(kha_SystemImpl.mobile) {
		var element1 = window.document.createElement("audio");
		if(element1.canPlayType("audio/mp4") != "") {
			var _g5 = 0;
			var _g14 = desc.files.length;
			while(_g5 < _g14) {
				var i4 = _g5++;
				var file4 = desc.files[i4];
				if(StringTools.endsWith(file4,".mp4")) {
					new kha_js_MobileWebAudioSound(file4,done,failed);
					return;
				}
			}
		}
		if(element1.canPlayType("audio/mp3") != "") {
			var _g6 = 0;
			var _g15 = desc.files.length;
			while(_g6 < _g15) {
				var i5 = _g6++;
				var file5 = desc.files[i5];
				if(StringTools.endsWith(file5,".mp3")) {
					new kha_js_MobileWebAudioSound(file5,done,failed);
					return;
				}
			}
		}
		if(element1.canPlayType("audio/wav") != "") {
			var _g7 = 0;
			var _g16 = desc.files.length;
			while(_g7 < _g16) {
				var i6 = _g7++;
				var file6 = desc.files[i6];
				if(StringTools.endsWith(file6,".wav")) {
					new kha_js_MobileWebAudioSound(file6,done,failed);
					return;
				}
			}
		}
		var _g8 = 0;
		var _g17 = desc.files.length;
		while(_g8 < _g17) {
			var i7 = _g8++;
			var file7 = desc.files[i7];
			if(StringTools.endsWith(file7,".ogg")) {
				new kha_js_MobileWebAudioSound(file7,done,failed);
				return;
			}
		}
	} else {
		new kha_js_Sound(desc.files,done,failed);
	}
};
kha_LoaderImpl.getVideoFormats = function() {
	return ["mp4","webm"];
};
kha_LoaderImpl.loadVideoFromDescription = function(desc,done,failed) {
	kha_js_Video.fromFile(desc.files,done);
};
kha_LoaderImpl.loadRemote = function(desc,done,failed) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = haxe_io_Bytes.ofData(byteArray);
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g = 0;
				var _g1 = data.length;
				while(_g < _g1) {
					var i = _g++;
					bytes.b[i] = data[i];
				}
			} else {
				failed({ url : desc.files[0]});
				return;
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			failed({ url : desc.files[0]});
		}
	};
	request.send(null);
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadRemote(desc,done,failed);
};
kha_LoaderImpl.loadFontFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
		done(new kha_Kravur(blob));
	},failed);
};
var kha_Macros = function() { };
$hxClasses["kha.Macros"] = kha_Macros;
kha_Macros.__name__ = true;
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = true;
kha_TimeTask.prototype = {
	task: null
	,start: null
	,period: null
	,duration: null
	,next: null
	,id: null
	,groupId: null
	,active: null
	,paused: null
	,__class__: kha_TimeTask
};
var kha_FrameTask = function(task,priority,id) {
	this.task = task;
	this.priority = priority;
	this.id = id;
	this.active = true;
	this.paused = false;
};
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = true;
kha_FrameTask.prototype = {
	task: null
	,priority: null
	,id: null
	,active: null
	,paused: null
	,__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = true;
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) {
		var i = _g++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.lastTime = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_Window.get(0).get_vSynced();
	var hz = kha_Display.get_primary().get_frequency();
	if(hz >= 57 && hz <= 63) {
		hz = 60;
	}
	kha_Scheduler.onedifhz = 1.0 / hz;
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) {
		var i = _g++;
		kha_Scheduler.deltas[i] = 0;
	}
	if(restartTimers) {
		var _g2 = 0;
		var _g3 = kha_Scheduler.timeTasks;
		while(_g2 < _g3.length) {
			var timeTask = _g3[_g2];
			++_g2;
			timeTask.paused = false;
		}
		var _g4 = 0;
		var _g5 = kha_Scheduler.frameTasks;
		while(_g4 < _g5.length) {
			var frameTask = _g5[_g4];
			++_g4;
			frameTask.paused = false;
		}
	}
};
kha_Scheduler.stop = function() {
	kha_Scheduler.stopped = true;
};
kha_Scheduler.isStopped = function() {
	return kha_Scheduler.stopped;
};
kha_Scheduler.warpTimeTasksBack = function(time,tasks) {
	var _g = 0;
	while(_g < tasks.length) {
		var timeTask = tasks[_g];
		++_g;
		if(timeTask.start >= time) {
			timeTask.next = timeTask.start;
		} else if(timeTask.period > 0) {
			var sinceStart = time - timeTask.start;
			var times = Math.ceil(sinceStart / timeTask.period);
			timeTask.next = timeTask.start + times * timeTask.period;
		}
	}
};
kha_Scheduler.warp = function(time) {
	if(time < kha_Scheduler.lastTime) {
		kha_Scheduler.current = time;
		kha_Scheduler.lastTime = time;
		kha_Scheduler.warpTimeTasksBack(time,kha_Scheduler.outdatedTimeTasks);
		kha_Scheduler.warpTimeTasksBack(time,kha_Scheduler.timeTasks);
		var _g = 0;
		var _g1 = kha_Scheduler.outdatedTimeTasks;
		while(_g < _g1.length) {
			var task = _g1[_g];
			++_g;
			if(task.next >= time) {
				kha_Scheduler.timeTasksScratchpad.push(task);
			}
		}
		var _g2 = 0;
		var _g3 = kha_Scheduler.timeTasksScratchpad;
		while(_g2 < _g3.length) {
			var task1 = _g3[_g2];
			++_g2;
			HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task1);
		}
		var _g4 = 0;
		var _g5 = kha_Scheduler.timeTasksScratchpad;
		while(_g4 < _g5.length) {
			var task2 = _g5[_g4];
			++_g4;
			kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,task2);
		}
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	} else if(time > kha_Scheduler.lastTime) {
		kha_Scheduler.startTime -= time - kha_Scheduler.lastTime;
		kha_Scheduler.current = time;
		kha_Scheduler.lastTime = time;
		kha_Scheduler.executeTimeTasks(time);
	}
};
kha_Scheduler.executeFrame = function() {
	var now = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var delta = now - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.current;
	if(delta >= 0) {
		if(kha_netsync_Session.the() == null) {
			if(delta > kha_Scheduler.maxframetime) {
				kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
				delta = kha_Scheduler.maxframetime;
				frameEnd += delta;
			} else if(kha_Scheduler.vsync) {
				var realdif = kha_Scheduler.onedifhz;
				while(realdif < delta - kha_Scheduler.onedifhz) realdif += kha_Scheduler.onedifhz;
				delta = realdif;
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT - 2;
				while(_g < _g1) {
					var i = _g++;
					delta += kha_Scheduler.deltas[i];
					kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
				}
				delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
				delta /= kha_Scheduler.DIF_COUNT;
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
				frameEnd += delta;
			} else {
				var _g2 = 0;
				var _g11 = kha_Scheduler.DIF_COUNT - 1;
				while(_g2 < _g11) {
					var i1 = _g2++;
					kha_Scheduler.deltas[i1] = kha_Scheduler.deltas[i1 + 1];
				}
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
				var next = 0;
				var _g21 = 0;
				var _g3 = kha_Scheduler.DIF_COUNT;
				while(_g21 < _g3) {
					var i2 = _g21++;
					next += kha_Scheduler.deltas[i2];
				}
				next /= kha_Scheduler.DIF_COUNT;
				frameEnd += next;
			}
		} else {
			frameEnd += delta;
		}
		kha_Scheduler.lastTime = frameEnd;
		if(!kha_Scheduler.stopped) {
			kha_Scheduler.current = frameEnd;
		}
		var _g4 = 0;
		var _g12 = kha_Scheduler.pausedTimeTasks;
		while(_g4 < _g12.length) {
			var pausedTask = _g12[_g4];
			++_g4;
			pausedTask.next += delta;
		}
		if(kha_Scheduler.stopped) {
			var _g22 = 0;
			var _g31 = kha_Scheduler.timeTasks;
			while(_g22 < _g31.length) {
				var timeTask = _g31[_g22];
				++_g22;
				timeTask.next += delta;
			}
		}
		kha_Scheduler.executeTimeTasks(frameEnd);
		var _g23 = 0;
		var _g32 = kha_Scheduler.outdatedTimeTasks;
		while(_g23 < _g32.length) {
			var task = _g32[_g23];
			++_g23;
			if(task.next < frameEnd - 10.0) {
				kha_Scheduler.timeTasksScratchpad.push(task);
			}
		}
		var _g41 = 0;
		var _g5 = kha_Scheduler.timeTasksScratchpad;
		while(_g41 < _g5.length) {
			var task1 = _g5[_g41];
			++_g41;
			HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task1);
		}
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	}
	kha_Scheduler.sortFrameTasks();
	var _g6 = 0;
	var _g13 = kha_Scheduler.frameTasks;
	while(_g6 < _g13.length) {
		var frameTask = _g13[_g6];
		++_g6;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g24 = 0;
	var _g33 = kha_Scheduler.frameTasks;
	while(_g24 < _g33.length) {
		var frameTask1 = _g33[_g24];
		++_g24;
		if(!frameTask1.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask1);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.executeTimeTasks = function(until) {
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= until) {
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				} else {
					kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
				kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
};
kha_Scheduler.archiveTimeTask = function(timeTask,frameEnd) {
};
kha_Scheduler.time = function() {
	return kha_Scheduler.current;
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time();
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g2 = 0;
	var _g3 = kha_Scheduler.DIF_COUNT;
	while(_g2 < _g3) {
		var i = _g2++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
};
kha_Scheduler.addBreakableFrameTask = function(task,priority) {
	kha_Scheduler.frameTasks.push(new kha_FrameTask(task,priority,++kha_Scheduler.currentFrameTaskId));
	kha_Scheduler.frame_tasks_sorted = false;
	return kha_Scheduler.currentFrameTaskId;
};
kha_Scheduler.addFrameTask = function(task,priority) {
	return kha_Scheduler.addBreakableFrameTask(function() {
		task();
		return true;
	},priority);
};
kha_Scheduler.pauseFrameTask = function(id,paused) {
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(frameTask.id == id) {
			frameTask.paused = paused;
			break;
		}
	}
};
kha_Scheduler.removeFrameTask = function(id) {
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(frameTask.id == id) {
			frameTask.active = false;
			break;
		}
	}
};
kha_Scheduler.generateGroupId = function() {
	return ++kha_Scheduler.currentGroupId;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addBreakableTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.getTimeTask = function(id) {
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		return kha_Scheduler.activeTimeTask;
	}
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.id == id) {
			return timeTask;
		}
	}
	var _g2 = 0;
	var _g3 = kha_Scheduler.pausedTimeTasks;
	while(_g2 < _g3.length) {
		var timeTask1 = _g3[_g2];
		++_g2;
		if(timeTask1.id == id) {
			return timeTask1;
		}
	}
	return null;
};
kha_Scheduler.pauseTimeTask = function(id,paused) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
	}
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		kha_Scheduler.activeTimeTask.paused = paused;
	}
};
kha_Scheduler.pauseRunningTimeTask = function(timeTask,paused) {
	timeTask.paused = paused;
	if(paused) {
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
		kha_Scheduler.pausedTimeTasks.push(timeTask);
	} else {
		kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,timeTask);
		HxOverrides.remove(kha_Scheduler.pausedTimeTasks,timeTask);
	}
};
kha_Scheduler.pauseTimeTasks = function(groupId,paused) {
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.groupId == groupId) {
			kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
		}
	}
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
		kha_Scheduler.activeTimeTask.paused = paused;
	}
};
kha_Scheduler.removeTimeTask = function(id) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		timeTask.active = false;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
	}
};
kha_Scheduler.removeTimeTasks = function(groupId) {
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.groupId == groupId) {
			timeTask.active = false;
			kha_Scheduler.timeTasksScratchpad.push(timeTask);
		}
	}
	var _g2 = 0;
	var _g3 = kha_Scheduler.timeTasksScratchpad;
	while(_g2 < _g3.length) {
		var timeTask1 = _g3[_g2];
		++_g2;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask1);
	}
	while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
		kha_Scheduler.activeTimeTask.active = false;
	}
};
kha_Scheduler.numTasksInSchedule = function() {
	return kha_Scheduler.timeTasks.length + kha_Scheduler.frameTasks.length;
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g = 0;
	var _g1 = list.length;
	while(_g < _g1) {
		var i = _g++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = true;
kha_Shaders.init = function() {
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_colored_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	var data1 = Reflect.field(kha_Shaders,"painter_colored_fragData" + 1);
	var bytes1 = haxe_Unserializer.run(data1);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes1));
	var data2 = Reflect.field(kha_Shaders,"painter_colored_fragData" + 2);
	var bytes2 = haxe_Unserializer.run(data2);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes2));
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs,["painter-colored.frag.essl","painter-colored-webgl2.frag.essl","painter-colored-relaxed.frag.essl"]);
	var blobs1 = [];
	var data3 = Reflect.field(kha_Shaders,"painter_colored_vertData" + 0);
	var bytes3 = haxe_Unserializer.run(data3);
	blobs1.push(kha_internal_BytesBlob.fromBytes(bytes3));
	var data4 = Reflect.field(kha_Shaders,"painter_colored_vertData" + 1);
	var bytes4 = haxe_Unserializer.run(data4);
	blobs1.push(kha_internal_BytesBlob.fromBytes(bytes4));
	var data5 = Reflect.field(kha_Shaders,"painter_colored_vertData" + 2);
	var bytes5 = haxe_Unserializer.run(data5);
	blobs1.push(kha_internal_BytesBlob.fromBytes(bytes5));
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs1,["painter-colored.vert.essl","painter-colored-webgl2.vert.essl","painter-colored-relaxed.vert.essl"]);
	var blobs2 = [];
	var data6 = Reflect.field(kha_Shaders,"painter_image_fragData" + 0);
	var bytes6 = haxe_Unserializer.run(data6);
	blobs2.push(kha_internal_BytesBlob.fromBytes(bytes6));
	var data7 = Reflect.field(kha_Shaders,"painter_image_fragData" + 1);
	var bytes7 = haxe_Unserializer.run(data7);
	blobs2.push(kha_internal_BytesBlob.fromBytes(bytes7));
	var data8 = Reflect.field(kha_Shaders,"painter_image_fragData" + 2);
	var bytes8 = haxe_Unserializer.run(data8);
	blobs2.push(kha_internal_BytesBlob.fromBytes(bytes8));
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs2,["painter-image.frag.essl","painter-image-webgl2.frag.essl","painter-image-relaxed.frag.essl"]);
	var blobs3 = [];
	var data9 = Reflect.field(kha_Shaders,"painter_image_vertData" + 0);
	var bytes9 = haxe_Unserializer.run(data9);
	blobs3.push(kha_internal_BytesBlob.fromBytes(bytes9));
	var data10 = Reflect.field(kha_Shaders,"painter_image_vertData" + 1);
	var bytes10 = haxe_Unserializer.run(data10);
	blobs3.push(kha_internal_BytesBlob.fromBytes(bytes10));
	var data11 = Reflect.field(kha_Shaders,"painter_image_vertData" + 2);
	var bytes11 = haxe_Unserializer.run(data11);
	blobs3.push(kha_internal_BytesBlob.fromBytes(bytes11));
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs3,["painter-image.vert.essl","painter-image-webgl2.vert.essl","painter-image-relaxed.vert.essl"]);
	var blobs4 = [];
	var data12 = Reflect.field(kha_Shaders,"painter_text_fragData" + 0);
	var bytes12 = haxe_Unserializer.run(data12);
	blobs4.push(kha_internal_BytesBlob.fromBytes(bytes12));
	var data13 = Reflect.field(kha_Shaders,"painter_text_fragData" + 1);
	var bytes13 = haxe_Unserializer.run(data13);
	blobs4.push(kha_internal_BytesBlob.fromBytes(bytes13));
	var data14 = Reflect.field(kha_Shaders,"painter_text_fragData" + 2);
	var bytes14 = haxe_Unserializer.run(data14);
	blobs4.push(kha_internal_BytesBlob.fromBytes(bytes14));
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs4,["painter-text.frag.essl","painter-text-webgl2.frag.essl","painter-text-relaxed.frag.essl"]);
	var blobs5 = [];
	var data15 = Reflect.field(kha_Shaders,"painter_text_vertData" + 0);
	var bytes15 = haxe_Unserializer.run(data15);
	blobs5.push(kha_internal_BytesBlob.fromBytes(bytes15));
	var data16 = Reflect.field(kha_Shaders,"painter_text_vertData" + 1);
	var bytes16 = haxe_Unserializer.run(data16);
	blobs5.push(kha_internal_BytesBlob.fromBytes(bytes16));
	var data17 = Reflect.field(kha_Shaders,"painter_text_vertData" + 2);
	var bytes17 = haxe_Unserializer.run(data17);
	blobs5.push(kha_internal_BytesBlob.fromBytes(bytes17));
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs5,["painter-text.vert.essl","painter-text-webgl2.vert.essl","painter-text-relaxed.vert.essl"]);
	var blobs6 = [];
	var data18 = Reflect.field(kha_Shaders,"painter_video_fragData" + 0);
	var bytes18 = haxe_Unserializer.run(data18);
	blobs6.push(kha_internal_BytesBlob.fromBytes(bytes18));
	var data19 = Reflect.field(kha_Shaders,"painter_video_fragData" + 1);
	var bytes19 = haxe_Unserializer.run(data19);
	blobs6.push(kha_internal_BytesBlob.fromBytes(bytes19));
	var data20 = Reflect.field(kha_Shaders,"painter_video_fragData" + 2);
	var bytes20 = haxe_Unserializer.run(data20);
	blobs6.push(kha_internal_BytesBlob.fromBytes(bytes20));
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs6,["painter-video.frag.essl","painter-video-webgl2.frag.essl","painter-video-relaxed.frag.essl"]);
	var blobs7 = [];
	var data21 = Reflect.field(kha_Shaders,"painter_video_vertData" + 0);
	var bytes21 = haxe_Unserializer.run(data21);
	blobs7.push(kha_internal_BytesBlob.fromBytes(bytes21));
	var data22 = Reflect.field(kha_Shaders,"painter_video_vertData" + 1);
	var bytes22 = haxe_Unserializer.run(data22);
	blobs7.push(kha_internal_BytesBlob.fromBytes(bytes22));
	var data23 = Reflect.field(kha_Shaders,"painter_video_vertData" + 2);
	var bytes23 = haxe_Unserializer.run(data23);
	blobs7.push(kha_internal_BytesBlob.fromBytes(bytes23));
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs7,["painter-video.vert.essl","painter-video-webgl2.vert.essl","painter-video-relaxed.vert.essl"]);
};
var kha_Sound = function() {
	this.sampleRate = 0;
	this.channels = 0;
	this.length = 0;
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = true;
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	compressedData: null
	,uncompressedData: null
	,length: null
	,channels: null
	,sampleRate: null
	,uncompress: function(done) {
		if(this.uncompressedData != null) {
			done();
			return;
		}
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			this.length = count / kha_audio2_Audio.samplesPerSecond;
			var this1 = new Float32Array(count * 2);
			this.uncompressedData = this1;
			var _g = 0;
			var _g1 = count;
			while(_g < _g1) {
				var i = _g++;
				this.uncompressedData[i * 2] = soundBytes.getFloat(i * 4);
				this.uncompressedData[i * 2 + 1] = soundBytes.getFloat(i * 4);
			}
		} else {
			this.length = count / 2 / kha_audio2_Audio.samplesPerSecond;
			var this2 = new Float32Array(count);
			this.uncompressedData = this2;
			var _g2 = 0;
			var _g11 = count;
			while(_g2 < _g11) {
				var i1 = _g2++;
				this.uncompressedData[i1] = soundBytes.getFloat(i1 * 4);
			}
		}
		this.channels = header.channel;
		this.sampleRate = header.sampleRate;
		this.compressedData = null;
		done();
	}
	,unload: function() {
		this.compressedData = null;
		this.uncompressedData = null;
	}
	,__class__: kha_Sound
};
var kha_SystemOptions = function(title,width,height,$window,framebuffer) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(title == null) {
		title = "Kha";
	}
	this.framebuffer = null;
	this.window = null;
	this.height = -1;
	this.width = -1;
	this.title = "Kha";
	this.title = title;
	this.window = $window == null ? new kha_WindowOptions(null,null,null,null,null,null,null,null,null) : $window;
	if(width > 0) {
		this.window.width = width;
		this.width = width;
	} else {
		this.width = this.window.width;
	}
	if(height > 0) {
		this.window.height = height;
		this.height = height;
	} else {
		this.height = this.window.height;
	}
	if(this.window.title == null) {
		this.window.title = title;
	}
	this.framebuffer = framebuffer == null ? new kha_FramebufferOptions(null,null,null,null,null,null) : framebuffer;
};
$hxClasses["kha.SystemOptions"] = kha_SystemOptions;
kha_SystemOptions.__name__ = true;
kha_SystemOptions.prototype = {
	title: null
	,width: null
	,height: null
	,window: null
	,framebuffer: null
	,__class__: kha_SystemOptions
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = true;
kha_System.init = function(options,callback) {
	var features = 0;
	if(options.resizable) {
		features = features | 1;
	}
	if(options.maximizable) {
		features = features | 4;
	}
	if(options.minimizable) {
		features = features | 2;
	}
	var newOptions = new kha_SystemOptions(options.title,options.width,options.height,new kha_WindowOptions(null,null,null,null,null,null,null,features,options.windowMode),new kha_FramebufferOptions(null,options.vSync,null,null,null,options.samplesPerPixel));
	kha_System.start(newOptions,function(_) {
		callback();
	});
};
kha_System.start = function(options,callback) {
	kha_System.theTitle = options.title;
	kha_SystemImpl.init(options,callback);
};
kha_System.get_title = function() {
	return kha_System.theTitle;
};
kha_System.notifyOnRender = function(listener,id) {
	if(id == null) {
		id = 0;
	}
	kha_System.renderListeners.push(function(framebuffers) {
		if(id < framebuffers.length) {
			listener(framebuffers[id]);
		}
	});
};
kha_System.notifyOnFrames = function(listener) {
	kha_System.renderListeners.push(listener);
};
kha_System.removeFramesListener = function(listener) {
	HxOverrides.remove(kha_System.renderListeners,listener);
};
kha_System.notifyOnApplicationState = function(foregroundListener,resumeListener,pauseListener,backgroundListener,shutdownListener) {
	if(foregroundListener != null) {
		kha_System.foregroundListeners.push(foregroundListener);
	}
	if(resumeListener != null) {
		kha_System.resumeListeners.push(resumeListener);
	}
	if(pauseListener != null) {
		kha_System.pauseListeners.push(pauseListener);
	}
	if(backgroundListener != null) {
		kha_System.backgroundListeners.push(backgroundListener);
	}
	if(shutdownListener != null) {
		kha_System.shutdownListeners.push(shutdownListener);
	}
};
kha_System.notifyOnDropFiles = function(dropFilesListener) {
	kha_System.dropFilesListeners.push(dropFilesListener);
};
kha_System.removeDropListener = function(listener) {
	HxOverrides.remove(kha_System.dropFilesListeners,listener);
};
kha_System.notifyOnCutCopyPaste = function(cutListener,copyListener,pasteListener) {
	kha_System.cutListener = cutListener;
	kha_System.copyListener = copyListener;
	kha_System.pasteListener = pasteListener;
};
kha_System.notifyOnLoginLogout = function(loginListener,logoutListener) {
	kha_System.loginListener = loginListener;
	kha_System.logoutListener = logoutListener;
};
kha_System.login = function() {
	kha_SystemImpl.login();
};
kha_System.waitingForLogin = function() {
	return kha_SystemImpl.waitingForLogin();
};
kha_System.allowUserChange = function() {
	kha_SystemImpl.allowUserChange();
};
kha_System.disallowUserChange = function() {
	kha_SystemImpl.disallowUserChange();
};
kha_System.render = function(framebuffers) {
	var _g = 0;
	var _g1 = kha_System.renderListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(framebuffers);
	}
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.resume = function() {
	var _g = 0;
	var _g1 = kha_System.resumeListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.pause = function() {
	var _g = 0;
	var _g1 = kha_System.pauseListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.shutdown = function() {
	var _g = 0;
	var _g1 = kha_System.shutdownListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.dropFiles = function(filePath) {
	var _g = 0;
	var _g1 = kha_System.dropFilesListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(filePath);
	}
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get($window).get_width();
};
kha_System.windowHeight = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get_all()[$window].get_height();
};
kha_System.get_screenRotation = function() {
	return 0;
};
kha_System.get_systemId = function() {
	return kha_SystemImpl.getSystemId();
};
kha_System.vibrate = function(ms) {
	kha_SystemImpl.vibrate(ms);
	return;
};
kha_System.get_language = function() {
	return kha_SystemImpl.getLanguage();
};
kha_System.stop = function() {
	return kha_SystemImpl.requestShutdown();
};
kha_System.loadUrl = function(url) {
	kha_SystemImpl.loadUrl(url);
};
kha_System.canSwitchFullscreen = function() {
	return true;
};
kha_System.isFullscreen = function() {
	if(kha_Window.get(0).get_mode() != 1) {
		return kha_Window.get(0).get_mode() == 2;
	} else {
		return true;
	}
};
kha_System.requestFullscreen = function() {
	kha_Window.get(0).set_mode(1);
};
kha_System.exitFullscreen = function() {
	kha_Window.get(0).set_mode(0);
};
kha_System.notifyOnFullscreenChange = function(func,error) {
};
kha_System.removeFullscreenListener = function(func,error) {
};
kha_System.changeResolution = function(width,height) {
};
kha_System.requestShutdown = function() {
	kha_System.stop();
};
kha_System.get_vsync = function() {
	return kha_Window.get(0).get_vSynced();
};
kha_System.get_refreshRate = function() {
	return kha_Display.get_primary().get_frequency();
};
kha_System.screenDpi = function() {
	return kha_Display.get_primary().get_pixelsPerInch();
};
kha_System.safeZone = function() {
	return kha_SystemImpl.safeZone();
};
kha_System.automaticSafeZone = function() {
	return kha_SystemImpl.automaticSafeZone();
};
kha_System.setSafeZone = function(value) {
	kha_SystemImpl.setSafeZone(value);
};
kha_System.unlockAchievement = function(id) {
	kha_SystemImpl.unlockAchievement(id);
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = true;
kha_GamepadStates.prototype = {
	axes: null
	,buttons: null
	,__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = true;
kha_SystemImpl.errorHandler = function(message,source,lineno,colno,error) {
	window.console.error(error.stack);
	return true;
};
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.ios = kha_SystemImpl.isIOS();
	kha_SystemImpl.chrome = kha_SystemImpl.isChrome();
	kha_SystemImpl.firefox = kha_SystemImpl.isFirefox();
	kha_SystemImpl.ie = kha_SystemImpl.isIE();
	if(kha_SystemImpl.mobile || kha_SystemImpl.chrome) {
		kha_SystemImpl.mobileAudioPlaying = false;
	} else {
		kha_SystemImpl.mobileAudioPlaying = true;
	}
	kha_SystemImpl.initSecondStep(callback);
};
kha_SystemImpl.initSecondStep = function(callback) {
	kha_SystemImpl.init2(kha_SystemImpl.options.window.width,kha_SystemImpl.options.window.height);
	callback(kha_SystemImpl.window);
};
kha_SystemImpl.initSensor = function() {
	if(kha_SystemImpl.ios) {
		window.ondevicemotion = function(event) {
			kha_input_Sensor._changed(0,-event.accelerationIncludingGravity.x,-event.accelerationIncludingGravity.y,-event.accelerationIncludingGravity.z);
		};
	} else {
		window.ondevicemotion = function(event1) {
			kha_input_Sensor._changed(0,event1.accelerationIncludingGravity.x,event1.accelerationIncludingGravity.y,event1.accelerationIncludingGravity.z);
		};
	}
	window.ondeviceorientation = function(event2) {
		kha_input_Sensor._changed(1,event2.beta,event2.gamma,event2.alpha);
	};
};
kha_SystemImpl.isMobile = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Android") >= 0 || agent.indexOf("webOS") >= 0 || agent.indexOf("BlackBerry") >= 0 || agent.indexOf("Windows Phone") >= 0) {
		return true;
	}
	if(kha_SystemImpl.isIOS()) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIOS = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("iPhone") >= 0 || agent.indexOf("iPad") >= 0 || agent.indexOf("iPod") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isChrome = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Chrome") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isFirefox = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Firefox") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIE = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("MSIE ") >= 0 || agent.indexOf("Trident/") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getScreenRotation = function() {
	return 0;
};
kha_SystemImpl.getTime = function() {
	var performance = window.performance ? window.performance : window.Date;
	return performance.now() / 1000;
};
kha_SystemImpl.getSystemId = function() {
	return "HTML5";
};
kha_SystemImpl.vibrate = function(ms) {
	window.navigator.vibrate(ms);
};
kha_SystemImpl.getLanguage = function() {
	var lang = window.navigator.language;
	return HxOverrides.substr(lang,0,2).toLowerCase();
};
kha_SystemImpl.requestShutdown = function() {
	window.close();
	return true;
};
kha_SystemImpl.init2 = function(defaultWidth,defaultHeight,backbufferFormat) {
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	kha_SystemImpl.gamepads[0] = new kha_input_Gamepad(0);
	kha_SystemImpl.gamepadStates[0] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[1] = new kha_input_Gamepad(1);
	kha_SystemImpl.gamepadStates[1] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[2] = new kha_input_Gamepad(2);
	kha_SystemImpl.gamepadStates[2] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[3] = new kha_input_Gamepad(3);
	kha_SystemImpl.gamepadStates[3] = new kha_GamepadStates();
	window.addEventListener("gamepadconnected",function(e) {
		kha_input_Gamepad.sendConnectEvent(e.gamepad.index);
	});
	window.addEventListener("gamepaddisconnected",function(e1) {
		kha_input_Gamepad.sendDisconnectEvent(e1.gamepad.index);
	});
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			kha_SystemImpl.pressedKeys.push(false);
		}
		var _g1 = 0;
		while(_g1 < 256) {
			var i1 = _g1++;
			kha_SystemImpl.pressedKeys.push(null);
		}
	}
	var onCopy = function(e2) {
		if(kha_System.copyListener != null) {
			var data = kha_System.copyListener();
			if(data != null) {
				e2.clipboardData.setData("text/plain",data);
			}
			e2.preventDefault();
		}
	};
	var onCut = function(e3) {
		if(kha_System.cutListener != null) {
			var data1 = kha_System.cutListener();
			if(data1 != null) {
				e3.clipboardData.setData("text/plain",data1);
			}
			e3.preventDefault();
		}
	};
	var onPaste = function(e4) {
		if(kha_System.pasteListener != null) {
			var onPaste1 = e4.clipboardData.getData("text/plain");
			kha_System.pasteListener(onPaste1);
			e4.preventDefault();
		}
	};
	var document = window.document;
	document.addEventListener("copy",onCopy);
	document.addEventListener("cut",onCut);
	document.addEventListener("paste",onPaste);
	kha_CanvasImage.init();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished(defaultWidth,defaultHeight);
};
kha_SystemImpl.getMouse = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.mouse;
};
kha_SystemImpl.getKeyboard = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.keyboard;
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g = 0;
	var _g1 = pad.axes.length;
	while(_g < _g1) {
		var i = _g++;
		if(pad.axes[i] != null) {
			var axis = pad.axes[i];
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != axis) {
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g2 = 0;
	var _g3 = pad.buttons.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		if(pad.buttons[i1] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i1] != pad.buttons[i1].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i1] = pad.buttons[i1].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i1,pad.buttons[i1].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.getCanvasElement = function() {
	if(kha_SystemImpl.khanvas != null) {
		return kha_SystemImpl.khanvas;
	}
	return window.document.getElementById("khanvas");
};
kha_SystemImpl.loadFinished = function(defaultWidth,defaultHeight) {
	var canvas = kha_SystemImpl.getCanvasElement();
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("webgl2",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
		kha_SystemImpl.gl.pixelStorei(37441,1);
		kha_SystemImpl.halfFloat = { HALF_FLOAT_OES : 5131};
		kha_SystemImpl.depthTexture = { UNSIGNED_INT_24_8_WEBGL : 34042};
		kha_SystemImpl.drawBuffers = { COLOR_ATTACHMENT0_WEBGL : 36064};
		kha_SystemImpl.elementIndexUint = true;
		kha_SystemImpl.gl.getExtension("EXT_color_buffer_float");
		kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
		kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
		kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
		if(kha_SystemImpl.anisotropicFilter == null) {
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
		}
		gl = true;
		kha_SystemImpl.gl2 = true;
		kha_Shaders.init();
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		haxe_Log.trace("Could not initialize WebGL 2, falling back to WebGL.",{ fileName : "kha/SystemImpl.hx", lineNumber : 345, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	if(!kha_SystemImpl.gl2) {
		try {
			kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
			kha_SystemImpl.gl.pixelStorei(37441,1);
			kha_SystemImpl.gl.getExtension("OES_texture_float");
			kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
			kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
			kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
			kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
			kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
			kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
			if(kha_SystemImpl.anisotropicFilter == null) {
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			}
			kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
			kha_SystemImpl.elementIndexUint = kha_SystemImpl.gl.getExtension("OES_element_index_uint");
			gl = true;
			kha_Shaders.init();
		} catch( e2 ) {
			var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
			haxe_Log.trace("Could not initialize WebGL, falling back to <canvas>.",{ fileName : "kha/SystemImpl.hx", lineNumber : 367, className : "kha.SystemImpl", methodName : "loadFinished"});
		}
	}
	kha_SystemImpl.setCanvas(canvas);
	kha_SystemImpl.window = new kha_Window(defaultWidth,defaultHeight,canvas);
	if(gl) {
		var g4 = new kha_js_graphics4_Graphics();
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		kha_js_Font.Kravur = kha_Kravur; kha_Kravur = kha_js_Font;
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"));
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else if(kha_SystemImpl.mobile) {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_MobileWebAudio._init();
		kha_audio2_Audio1 = kha_js_MobileWebAudio;
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_vr_VrInterface.instance = new kha_js_vr_VrInterface();
	kha_Scheduler.start();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var animate = null;
	animate = function(timestamp) {
		var window1 = window;
		if(requestAnimationFrame == null) {
			window1.setTimeout(animate,16.666666666666668);
		} else {
			requestAnimationFrame(animate);
		}
		var sysGamepads = kha_SystemImpl.getGamepads();
		if(sysGamepads != null) {
			var _g = 0;
			var _g1 = sysGamepads.length;
			while(_g < _g1) {
				var i = _g++;
				var pad = sysGamepads[i];
				if(pad != null) {
					kha_SystemImpl.checkGamepad(pad);
				}
			}
		}
		kha_Scheduler.executeFrame();
		if(canvas.getContext != null) {
			var displayWidth = canvas.clientWidth;
			var displayHeight = canvas.clientHeight;
			if(canvas.width != displayWidth || canvas.height != displayHeight) {
				canvas.width = displayWidth;
				canvas.height = displayHeight;
			}
			kha_System.render([kha_SystemImpl.frame]);
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
	};
	if(requestAnimationFrame == null) {
		$window.setTimeout(animate,16.666666666666668);
	} else {
		requestAnimationFrame(animate);
	}
	canvas.focus();
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	if(kha_SystemImpl.keyboard != null) {
		canvas.onkeydown = kha_SystemImpl.keyDown;
		canvas.onkeyup = kha_SystemImpl.keyUp;
		canvas.onkeypress = kha_SystemImpl.keyPress;
	}
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmousewheel = canvas.onwheel = kha_SystemImpl.mouseWheel;
	canvas.onmouseleave = kha_SystemImpl.mouseLeave;
	canvas.addEventListener("wheel mousewheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	canvas.addEventListener("touchcancel",kha_SystemImpl.touchCancel,false);
	window.addEventListener("unload",function() {
		kha_System.shutdown();
	});
};
kha_SystemImpl.lockMouse = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestPointerLock))) {
		kha_SystemImpl.khanvas.requestPointerLock();
	} else if(kha_SystemImpl.khanvas.mozRequestPointerLock) {
		kha_SystemImpl.khanvas.mozRequestPointerLock();
	} else if(kha_SystemImpl.khanvas.webkitRequestPointerLock) {
		kha_SystemImpl.khanvas.webkitRequestPointerLock();
	}
};
kha_SystemImpl.unlockMouse = function() {
	if(document.exitPointerLock) {
		document.exitPointerLock();
	} else if(document.mozExitPointerLock) {
		document.mozExitPointerLock();
	} else if(document.webkitExitPointerLock) {
		document.webkitExitPointerLock();
	}
};
kha_SystemImpl.canLockMouse = function() {
	return 'pointerLockElement' in document ||
		'mozPointerLockElement' in document ||
		'webkitPointerLockElement' in document;
};
kha_SystemImpl.isMouseLocked = function() {
	return document.pointerLockElement === kha_SystemImpl.khanvas ||
			document.mozPointerLockElement === kha_SystemImpl.khanvas ||
			document.webkitPointerLockElement === kha_SystemImpl.khanvas;
};
kha_SystemImpl.notifyOfMouseLockChange = function(func,error) {
	window.document.addEventListener("pointerlockchange",func,false);
	window.document.addEventListener("mozpointerlockchange",func,false);
	window.document.addEventListener("webkitpointerlockchange",func,false);
	window.document.addEventListener("pointerlockerror",error,false);
	window.document.addEventListener("mozpointerlockerror",error,false);
	window.document.addEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.removeFromMouseLockChange = function(func,error) {
	window.document.removeEventListener("pointerlockchange",func,false);
	window.document.removeEventListener("mozpointerlockchange",func,false);
	window.document.removeEventListener("webkitpointerlockchange",func,false);
	window.document.removeEventListener("pointerlockerror",error,false);
	window.document.removeEventListener("mozpointerlockerror",error,false);
	window.document.removeEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.unlockiOSSound = function() {
	if(!kha_SystemImpl.ios || kha_SystemImpl.iosSoundEnabled) {
		return;
	}
	var buffer = kha_js_MobileWebAudio._context.createBuffer(1,1,22050);
	var source = kha_js_MobileWebAudio._context.createBufferSource();
	source.buffer = buffer;
	source.connect(kha_js_MobileWebAudio._context.destination);
	source.start();
	source.stop();
	kha_SystemImpl.iosSoundEnabled = true;
};
kha_SystemImpl.unlockSound = function() {
	if(!kha_SystemImpl.soundEnabled) {
		var context = kha_audio2_Audio._context;
		if(context == null) {
			context = kha_audio2_Audio1._context;
		}
		if(context != null) {
			context.resume().then(function(c) {
				kha_SystemImpl.soundEnabled = true;
			}).catch(function(err) {
				haxe_Log.trace(err,{ fileName : "kha/SystemImpl.hx", lineNumber : 607, className : "kha.SystemImpl", methodName : "unlockSound"});
			});
		}
		kha_audio2_Audio.wakeChannels();
	}
	kha_SystemImpl.unlockiOSSound();
};
kha_SystemImpl.mouseLeave = function() {
	kha_SystemImpl.mouse.sendLeaveEvent(0);
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.insideInputEvent = true;
	var _g = kha_input_Mouse.wheelEventBlockBehavior;
	switch(_g._hx_index) {
	case 0:
		event.preventDefault();
		break;
	case 1:
		break;
	case 2:
		var func = _g.func;
		if(func(event)) {
			event.preventDefault();
		}
		break;
	}
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return;
	}
	kha_SystemImpl.insideInputEvent = false;
	return;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		if(kha_SystemImpl.khanvas.setCapture != null) {
			kha_SystemImpl.khanvas.setCapture();
		} else {
			kha_SystemImpl.khanvas.ownerDocument.addEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
		}
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 1) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	if(kha_SystemImpl.khanvas.releaseCapture != null) {
		kha_SystemImpl.khanvas.ownerDocument.releaseCapture();
	} else {
		kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
	}
	kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 2) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 3) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.documentMouseMove = function(event) {
	event.stopPropagation();
	kha_SystemImpl.mouseMove(event);
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		movementX = event.mozMovementX != null ? event.mozMovementX : event.webkitMovementX != null ? event.webkitMovementX : kha_SystemImpl.mouseX - lastMouseX;
		movementY = event.mozMovementY != null ? event.mozMovementY : event.webkitMovementY != null ? event.webkitMovementY : kha_SystemImpl.mouseY - lastMouseY;
	}
	if(kha_SystemImpl.firefox) {
		movementX = movementX * window.devicePixelRatio | 0;
		movementY = movementY * window.devicePixelRatio | 0;
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.stopPropagation();
	var _g = kha_input_Surface.touchDownEventBlockBehavior;
	switch(_g._hx_index) {
	case 0:
		event.preventDefault();
		break;
	case 1:
		break;
	case 2:
		var func = _g.func;
		if(func(event)) {
			event.preventDefault();
		}
		break;
	}
	var index = 0;
	var _g2 = 0;
	var _g3 = event.changedTouches;
	while(_g2 < _g3.length) {
		var touch = _g3[_g2];
		++_g2;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(-1);
			if(id == -1) {
				id = kha_SystemImpl.iosTouchs.length;
			}
			kha_SystemImpl.iosTouchs[id] = touch.identifier;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		if(index == 0) {
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
		}
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
			kha_SystemImpl.iosTouchs[id] = -1;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.surface.sendMoveEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchCancel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.iosTouchs = [];
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keycodeToChar = function(key,keycode,shift) {
	if(key != null) {
		if(key.length == 1) {
			return key;
		}
		switch(key) {
		case "Add":
			return "+";
		case "Divide":
			return "/";
		case "Multiply":
			return "*";
		case "Subtract":
			return "-";
		}
	}
	switch(keycode) {
	case 48:
		if(shift) {
			return "=";
		} else {
			return "0";
		}
		break;
	case 49:
		if(shift) {
			return "!";
		} else {
			return "1";
		}
		break;
	case 50:
		if(shift) {
			return "\"";
		} else {
			return "2";
		}
		break;
	case 51:
		if(shift) {
			return "§";
		} else {
			return "3";
		}
		break;
	case 52:
		if(shift) {
			return "$";
		} else {
			return "4";
		}
		break;
	case 53:
		if(shift) {
			return "%";
		} else {
			return "5";
		}
		break;
	case 54:
		if(shift) {
			return "&";
		} else {
			return "6";
		}
		break;
	case 55:
		if(shift) {
			return "/";
		} else {
			return "7";
		}
		break;
	case 56:
		if(shift) {
			return "(";
		} else {
			return "8";
		}
		break;
	case 57:
		if(shift) {
			return ")";
		} else {
			return "9";
		}
		break;
	case 106:
		return "*";
	case 107:
		return "+";
	case 109:
		return "-";
	case 111:
		return "/";
	case 187:
		if(shift) {
			return "*";
		} else {
			return "+";
		}
		break;
	case 188:
		if(shift) {
			return ";";
		} else {
			return ",";
		}
		break;
	case 189:
		if(shift) {
			return "_";
		} else {
			return "-";
		}
		break;
	case 190:
		if(shift) {
			return ":";
		} else {
			return ".";
		}
		break;
	case 191:
		if(shift) {
			return "'";
		} else {
			return "#";
		}
		break;
	case 212:
		if(shift) {
			return "`";
		} else {
			return "´";
		}
		break;
	case 219:
		if(shift) {
			return "?";
		} else {
			return "ß";
		}
		break;
	case 226:
		if(shift) {
			return ">";
		} else {
			return "<";
		}
		break;
	}
	if(keycode >= 96 && keycode <= 105) {
		return String.fromCodePoint((-48 + keycode));
	}
	if(keycode >= 65 && keycode <= 90) {
		if(shift) {
			return String.fromCodePoint(keycode);
		} else {
			return String.fromCodePoint((keycode - 65 + 97));
		}
	}
	return String.fromCodePoint(keycode);
};
kha_SystemImpl.keyDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = kha_input_Keyboard.keyBehavior;
	switch(_g._hx_index) {
	case 0:
		kha_SystemImpl.defaultKeyBlock(event);
		break;
	case 1:
		event.preventDefault();
		break;
	case 2:
		break;
	case 3:
		var func = _g.func;
		if(func(event.keyCode)) {
			event.preventDefault();
		}
		break;
	}
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		if(kha_SystemImpl.pressedKeys[event.keyCode]) {
			event.preventDefault();
			return;
		}
		kha_SystemImpl.pressedKeys[event.keyCode] = true;
	} else if(event.repeat) {
		event.preventDefault();
		return;
	}
	var keyCode = kha_SystemImpl.fixedKeyCode(event);
	kha_SystemImpl.keyboard.sendDownEvent(keyCode);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.fixedKeyCode = function(event) {
	switch(event.keyCode) {
	case 91:case 93:
		return 224;
	case 186:
		return 59;
	case 187:
		return 61;
	case 189:
		return 173;
	default:
		return event.keyCode;
	}
};
kha_SystemImpl.defaultKeyBlock = function(e) {
	if(e.ctrlKey || e.metaKey) {
		if(e.keyCode == 67 || e.keyCode == 88 || e.keyCode == 86) {
			return;
		}
		if(e.metaKey && e.keyCode == 81) {
			return;
		}
		e.preventDefault();
		return;
	}
	if(e.keyCode >= 112 && e.keyCode <= 123) {
		return;
	}
	if(e.key == null || e.key.length == 1) {
		return;
	}
	e.preventDefault();
};
kha_SystemImpl.keyUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.preventDefault();
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys[event.keyCode] = false;
	}
	var keyCode = kha_SystemImpl.fixedKeyCode(event);
	kha_SystemImpl.keyboard.sendUpEvent(keyCode);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.keyPress = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	if(event.which == 0) {
		return;
	}
	event.preventDefault();
	event.stopPropagation();
	var code = event.which;
	kha_SystemImpl.keyboard.sendPressEvent(String.fromCodePoint(code));
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.canSwitchFullscreen = function() {
	return 'fullscreenElement ' in document ||
		'mozFullScreenElement' in document ||
		'webkitFullscreenElement' in document ||
		'msFullscreenElement' in document
		;
};
kha_SystemImpl.notifyOfFullscreenChange = function(func,error) {
	window.document.addEventListener("fullscreenchange",func,false);
	window.document.addEventListener("mozfullscreenchange",func,false);
	window.document.addEventListener("webkitfullscreenchange",func,false);
	window.document.addEventListener("MSFullscreenChange",func,false);
	window.document.addEventListener("fullscreenerror",error,false);
	window.document.addEventListener("mozfullscreenerror",error,false);
	window.document.addEventListener("webkitfullscreenerror",error,false);
	window.document.addEventListener("MSFullscreenError",error,false);
};
kha_SystemImpl.removeFromFullscreenChange = function(func,error) {
	window.document.removeEventListener("fullscreenchange",func,false);
	window.document.removeEventListener("mozfullscreenchange",func,false);
	window.document.removeEventListener("webkitfullscreenchange",func,false);
	window.document.removeEventListener("MSFullscreenChange",func,false);
	window.document.removeEventListener("fullscreenerror",error,false);
	window.document.removeEventListener("mozfullscreenerror",error,false);
	window.document.removeEventListener("webkitfullscreenerror",error,false);
	window.document.removeEventListener("MSFullscreenError",error,false);
};
kha_SystemImpl.setKeepScreenOn = function(on) {
};
kha_SystemImpl.loadUrl = function(url) {
	window.open(url,"_blank");
};
kha_SystemImpl.getGamepadId = function(index) {
	var sysGamepads = kha_SystemImpl.getGamepads();
	if(sysGamepads != null && sysGamepads[index]) {
		return sysGamepads[index].id;
	}
	return "unkown";
};
kha_SystemImpl.getGamepadVendor = function(index) {
	return "unknown";
};
kha_SystemImpl.getGamepads = function() {
	if(kha_SystemImpl.chrome && kha_vr_VrInterface.instance.IsVrEnabled()) {
		return null;
	}
	if(navigator.getGamepads) {
		return window.navigator.getGamepads();
	} else {
		return null;
	}
};
kha_SystemImpl.getPen = function(num) {
	return null;
};
kha_SystemImpl.safeZone = function() {
	return 1.0;
};
kha_SystemImpl.login = function() {
};
kha_SystemImpl.automaticSafeZone = function() {
	return true;
};
kha_SystemImpl.setSafeZone = function(value) {
};
kha_SystemImpl.unlockAchievement = function(id) {
};
kha_SystemImpl.waitingForLogin = function() {
	return false;
};
kha_SystemImpl.disallowUserChange = function() {
};
kha_SystemImpl.allowUserChange = function() {
};
var kha_Video = function() {
};
$hxClasses["kha.Video"] = kha_Video;
kha_Video.__name__ = true;
kha_Video.__interfaces__ = [kha_Resource];
kha_Video.prototype = {
	width: function() {
		return 100;
	}
	,height: function() {
		return 100;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
	}
	,pause: function() {
	}
	,stop: function() {
	}
	,getLength: function() {
		return 0;
	}
	,getCurrentPos: function() {
		return 0;
	}
	,get_position: function() {
		return 0;
	}
	,set_position: function(value) {
		return 0;
	}
	,getVolume: function() {
		return 1;
	}
	,setVolume: function(volume) {
	}
	,isFinished: function() {
		return this.getCurrentPos() >= this.getLength();
	}
	,unload: function() {
	}
	,__class__: kha_Video
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat,samples) {
	this.pixels = null;
	this.MSAAFrameBuffer = null;
	this.depthTexture = null;
	this.texture = null;
	this.renderBuffer = null;
	this.frameBuffer = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.samples = samples;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	kha_WebGLImage.init();
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = true;
kha_WebGLImage.init = function() {
	if(kha_WebGLImage.context == null) {
		kha_WebGLImage.canvas = window.document.createElement("canvas");
		if(kha_WebGLImage.canvas != null) {
			kha_WebGLImage.context = kha_WebGLImage.canvas.getContext("2d");
			kha_WebGLImage.canvas.width = 4096;
			kha_WebGLImage.canvas.height = 4096;
			kha_WebGLImage.context.globalCompositeOperation = "copy";
		}
	}
};
kha_WebGLImage.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_WebGLImage.formatByteSize = function(format) {
	switch(format) {
	case 0:
		return 4;
	case 1:
		return 1;
	case 2:
		return 16;
	case 3:
		return 2;
	case 4:
		return 8;
	case 5:
		return 4;
	case 6:
		return 2;
	default:
		return 4;
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,data: null
	,myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,samples: null
	,frameBuffer: null
	,renderBuffer: null
	,texture: null
	,depthTexture: null
	,MSAAFrameBuffer: null
	,MSAAColorBuffer: null
	,MSAADepthBuffer: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,depthStencilFormat: null
	,get_g1: function() {
		if(this.graphics1 == null) {
			this.graphics1 = new kha_graphics2_Graphics1(this);
		}
		return this.graphics1;
	}
	,get_g2: function() {
		if(this.graphics2 == null) {
			this.graphics2 = new kha_js_graphics4_Graphics2(this);
		}
		return this.graphics2;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,isOpaque: function(x,y) {
		if(this.data == null) {
			if(kha_WebGLImage.context == null) {
				return true;
			} else {
				this.createImageData();
			}
		}
		return this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3] != 0;
	}
	,at: function(x,y) {
		if(this.data == null) {
			if(kha_WebGLImage.context == null) {
				return -16777216;
			} else {
				this.createImageData();
			}
		}
		var r = this.data.data[y * this.get_width() * 4 + x * 4];
		var g = this.data.data[y * this.get_width() * 4 + x * 4 + 1];
		var b = this.data.data[y * this.get_width() * 4 + x * 4 + 2];
		var a = this.data.data[y * this.get_width() * 4 + x * 4 + 3];
		return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
	}
	,createImageData: function() {
		if(((this.image) instanceof Uint8Array)) {
			this.data = new ImageData(new Uint8ClampedArray(this.image.buffer),this.get_width(),this.get_height());
		} else {
			if(this.get_width() > kha_WebGLImage.canvas.width || this.get_height() > kha_WebGLImage.canvas.height) {
				var cw = kha_WebGLImage.canvas.width;
				var ch = kha_WebGLImage.canvas.height;
				while(this.get_width() > cw || this.get_height() > ch) {
					cw *= 2;
					ch *= 2;
				}
				kha_WebGLImage.canvas.width = cw;
				kha_WebGLImage.canvas.height = ch;
			}
			kha_WebGLImage.context.strokeStyle = "rgba(0,0,0,0)";
			kha_WebGLImage.context.fillStyle = "rgba(0,0,0,0)";
			kha_WebGLImage.context.fillRect(0,0,this.image.width,this.image.height);
			kha_WebGLImage.context.drawImage(this.image,0,0,this.image.width,this.image.height,0,0,this.image.width,this.image.height);
			this.data = kha_WebGLImage.context.getImageData(0,0,this.image.width,this.image.height);
		}
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.format == 3) {
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAAFrameBuffer = kha_SystemImpl.gl.createFramebuffer();
					this.MSAAColorBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAAColorBuffer);
					var MSAAFormat;
					switch(this.format) {
					case 0:
						MSAAFormat = kha_SystemImpl.gl.RGBA8;
						break;
					case 2:
						MSAAFormat = kha_SystemImpl.gl.RGBA32F;
						break;
					case 4:
						MSAAFormat = kha_SystemImpl.gl.RGBA16F;
						break;
					case 5:
						MSAAFormat = 33326;
						break;
					case 6:
						MSAAFormat = 33325;
						break;
					default:
						MSAAFormat = kha_SystemImpl.gl.RGBA8;
					}
					kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,MSAAFormat,this.get_realWidth(),this.get_realHeight());
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,36064,36161,this.MSAAColorBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
				kha_SystemImpl.gl.bindFramebuffer(36160,null);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			var e = kha_SystemImpl.gl.checkFramebufferStatus(36160);
			if(e != 36053) {
				haxe_Log.trace("checkframebufferStatus error " + e,{ fileName : "kha/WebGLImage.hx", lineNumber : 250, className : "kha.WebGLImage", methodName : "createTexture"});
			}
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			switch(this.format) {
			case 0:
				if(((this.image) instanceof Uint8Array)) {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5121,this.image);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				}
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.myWidth,this.myHeight,0,6409,5121,this.image);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				if(depthStencilFormat == 1) {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				}
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAADepthBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAADepthBuffer);
					if(depthStencilFormat == 1) {
						kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,33190,this.get_realWidth(),this.get_realHeight());
					} else {
						kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,33189,this.get_realWidth(),this.get_realHeight());
					}
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
				kha_SystemImpl.gl.bindFramebuffer(36160,null);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAADepthBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,35056,this.get_realWidth(),this.get_realHeight());
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
	}
	,setDepthStencilFrom: function(image) {
		this.depthTexture = (js_Boot.__cast(image , kha_WebGLImage)).depthTexture;
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
	}
	,bytesToArray: function(bytes) {
		switch(this.format) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,this.bytesToArray(this.bytes));
				if(kha_SystemImpl.gl.getError() == 1282) {
					var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
					var _g = 0;
					var _g1 = this.get_height();
					while(_g < _g1) {
						var y = _g++;
						var _g2 = 0;
						var _g11 = this.get_width();
						while(_g2 < _g11) {
							var x = _g2++;
							var _this = this.bytes;
							var pos = y * this.get_width() + x;
							var value = _this.b[pos];
							var pos1 = y * this.get_width() * 4 + x * 4;
							rgbaBytes.b[pos1] = value;
							var pos2 = y * this.get_width() * 4 + x * 4 + 1;
							rgbaBytes.b[pos2] = value;
							var pos3 = y * this.get_width() * 4 + x * 4 + 2;
							rgbaBytes.b[pos3] = value;
							var pos4 = y * this.get_width() * 4 + x * 4 + 3;
							rgbaBytes.b[pos4] = 255;
						}
					}
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(rgbaBytes));
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_width(),this.get_height(),0,6408,5126,this.bytesToArray(this.bytes));
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_width(),this.get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.bytesToArray(this.bytes));
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,pixels: null
	,getPixels: function() {
		if(this.frameBuffer == null) {
			return null;
		}
		if(this.pixels == null) {
			switch(this.format) {
			case 0:case 1:
				this.pixels = new Uint8Array(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height());
				break;
			case 2:case 5:
				this.pixels = new Float32Array((kha_WebGLImage.formatByteSize(this.format) / 4 | 0) * this.get_width() * this.get_height());
				break;
			case 4:case 6:
				this.pixels = new Uint16Array((kha_WebGLImage.formatByteSize(this.format) / 2 | 0) * this.get_width() * this.get_height());
				break;
			default:
				this.pixels = new Uint8Array(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height());
			}
		}
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		switch(this.format) {
		case 0:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,6408,5121,this.pixels);
			break;
		case 1:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,kha_SystemImpl.gl2 ? 6403 : 6406,5121,this.pixels);
			break;
		case 2:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,6408,5126,this.pixels);
			break;
		case 4:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.pixels);
			break;
		case 5:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.pixels);
			break;
		case 6:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.pixels);
			break;
		default:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,6408,5121,this.pixels);
		}
		return haxe_io_Bytes.ofData(this.pixels.buffer);
	}
	,unload: function() {
		if(this.texture != null) {
			kha_SystemImpl.gl.deleteTexture(this.texture);
		}
		if(this.depthTexture != null) {
			kha_SystemImpl.gl.deleteTexture(this.depthTexture);
		}
		if(this.frameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.frameBuffer);
		}
		if(this.renderBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.renderBuffer);
		}
		if(this.MSAAFrameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.MSAAFrameBuffer);
		}
		if(this.MSAAColorBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.MSAAColorBuffer);
		}
		if(this.MSAADepthBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.MSAADepthBuffer);
		}
	}
	,generateMipmaps: function(levels) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.generateMipmap(3553);
	}
	,setMipmaps: function(mipmaps) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.format == 2) {
			var _g = 0;
			var _g1 = mipmaps.length;
			while(_g < _g1) {
				var i = _g++;
				kha_SystemImpl.gl.texImage2D(3553,i + 1,kha_SystemImpl.gl2 ? 34836 : 6408,mipmaps[i].get_width(),mipmaps[i].get_height(),0,6408,5126,(js_Boot.__cast(mipmaps[i] , kha_WebGLImage)).image);
			}
		} else if(this.format == 4) {
			var _g2 = 0;
			var _g11 = mipmaps.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				kha_SystemImpl.gl.texImage2D(3553,i1 + 1,kha_SystemImpl.gl2 ? 34842 : 6408,mipmaps[i1].get_width(),mipmaps[i1].get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,(js_Boot.__cast(mipmaps[i1] , kha_WebGLImage)).image);
			}
		} else {
			var _g3 = 0;
			var _g12 = mipmaps.length;
			while(_g3 < _g12) {
				var i2 = _g3++;
				kha_SystemImpl.gl.texImage2D(3553,i2 + 1,6408,6408,5121,(js_Boot.__cast(mipmaps[i2] , kha_WebGLImage)).image);
			}
		}
	}
	,__class__: kha_WebGLImage
});
var kha_Window = function(defaultWidth,defaultHeight,canvas) {
	this.canvas = canvas;
	this.defaultWidth = defaultWidth;
	this.defaultHeight = defaultHeight;
	kha_Window.windows.push(this);
};
$hxClasses["kha.Window"] = kha_Window;
kha_Window.__name__ = true;
kha_Window.create = function(win,frame) {
	return null;
};
kha_Window.destroy = function($window) {
};
kha_Window.get = function(index) {
	return kha_Window.windows[index];
};
kha_Window.get_all = function() {
	return kha_Window.windows;
};
kha_Window.prototype = {
	canvas: null
	,defaultWidth: null
	,defaultHeight: null
	,resize: function(width,height) {
	}
	,move: function(x,y) {
	}
	,changeWindowFeatures: function(features) {
	}
	,changeFramebuffer: function(frame) {
	}
	,get_x: function() {
		return 0;
	}
	,set_x: function(value) {
		return 0;
	}
	,get_y: function() {
		return 0;
	}
	,set_y: function(value) {
		return 0;
	}
	,get_width: function() {
		if(this.canvas.clientWidth == 0) {
			return this.defaultWidth;
		} else {
			return this.canvas.clientWidth;
		}
	}
	,set_width: function(value) {
		return 800;
	}
	,get_height: function() {
		if(this.canvas.clientHeight == 0) {
			return this.defaultHeight;
		} else {
			return this.canvas.clientHeight;
		}
	}
	,set_height: function(value) {
		return 600;
	}
	,get_mode: function() {
		if(this.isFullscreen()) {
			return 1;
		} else {
			return 0;
		}
	}
	,set_mode: function(mode) {
		if(mode == 1 || mode == 2) {
			if(!this.isFullscreen()) {
				this.requestFullscreen();
			}
		} else if(this.isFullscreen()) {
			this.exitFullscreen();
		}
		return mode;
	}
	,isFullscreen: function() {
		return document.fullscreenElement === this.canvas ||
			document.mozFullScreenElement === this.canvas ||
			document.webkitFullscreenElement === this.canvas ||
			document.msFullscreenElement === this.canvas ;
	}
	,requestFullscreen: function() {
		if(($_=this.canvas,$bind($_,$_.requestFullscreen))) {
			var c = this.canvas;
			c.requestFullscreen({ navigationUI : "hide"});
		} else if(this.canvas.msRequestFullscreen) {
			this.canvas.msRequestFullscreen();
		} else if(this.canvas.mozRequestFullScreen) {
			this.canvas.mozRequestFullScreen();
		} else if(this.canvas.webkitRequestFullscreen) {
			this.canvas.webkitRequestFullscreen();
		}
	}
	,exitFullscreen: function() {
		if(document.exitFullscreen) {
			document.exitFullscreen();
		} else if(document.msExitFullscreen) {
			document.msExitFullscreen();
		} else if(document.mozCancelFullScreen) {
			document.mozCancelFullScreen();
		} else if(document.webkitExitFullscreen) {
			document.webkitExitFullscreen();
		}
	}
	,get_visible: function() {
		return true;
	}
	,set_visible: function(value) {
		return true;
	}
	,get_title: function() {
		return "Kha";
	}
	,set_title: function(value) {
		return "Kha";
	}
	,notifyOnResize: function(callback) {
	}
	,get_vSynced: function() {
		return true;
	}
	,__class__: kha_Window
};
var kha__$WindowOptions_WindowFeatures_$Impl_$ = {};
$hxClasses["kha._WindowOptions.WindowFeatures_Impl_"] = kha__$WindowOptions_WindowFeatures_$Impl_$;
kha__$WindowOptions_WindowFeatures_$Impl_$.__name__ = true;
kha__$WindowOptions_WindowFeatures_$Impl_$._new = function(value) {
	var this1 = value;
	return this1;
};
var kha_WindowOptions = function(title,x,y,width,height,display,visible,windowFeatures,mode) {
	if(mode == null) {
		mode = 0;
	}
	if(visible == null) {
		visible = true;
	}
	if(display == null) {
		display = -1;
	}
	if(height == null) {
		height = 600;
	}
	if(width == null) {
		width = 800;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	this.mode = 0;
	this.windowFeatures = 1 | 4 | 2;
	this.visible = true;
	this.display = -1;
	this.height = 600;
	this.width = 800;
	this.y = -1;
	this.x = -1;
	this.title = null;
	this.title = title;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.display = display;
	this.visible = visible;
	this.windowFeatures = windowFeatures == null ? 1 | 4 | 2 : windowFeatures;
	this.mode = mode;
};
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = true;
kha_WindowOptions.prototype = {
	title: null
	,x: null
	,y: null
	,width: null
	,height: null
	,display: null
	,visible: null
	,windowFeatures: null
	,mode: null
	,__class__: kha_WindowOptions
};
var kha_arrays__$Float32Array_Float32Array_$Impl_$ = {};
$hxClasses["kha.arrays._Float32Array.Float32Array_Impl_"] = kha_arrays__$Float32Array_Float32Array_$Impl_$;
kha_arrays__$Float32Array_Float32Array_$Impl_$.__name__ = true;
kha_arrays__$Float32Array_Float32Array_$Impl_$._new = function(elements) {
	var this1 = new Float32Array(elements);
	return this1;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.get_length = function(this1) {
	return this1.length;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.get = function(this1,index) {
	return this1[index];
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.data = function(this1) {
	return this1;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.subarray = function(this1,start,end) {
	return this1.subarray(start,end);
};
var kha_arrays__$Int16Array_Int16Array_$Impl_$ = {};
$hxClasses["kha.arrays._Int16Array.Int16Array_Impl_"] = kha_arrays__$Int16Array_Int16Array_$Impl_$;
kha_arrays__$Int16Array_Int16Array_$Impl_$.__name__ = true;
kha_arrays__$Int16Array_Int16Array_$Impl_$._new = function(elements) {
	var this1 = new Int16Array(elements);
	return this1;
};
kha_arrays__$Int16Array_Int16Array_$Impl_$.get_length = function(this1) {
	return this1.length;
};
kha_arrays__$Int16Array_Int16Array_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Int16Array_Int16Array_$Impl_$.get = function(this1,index) {
	return this1[index];
};
kha_arrays__$Int16Array_Int16Array_$Impl_$.data = function(this1) {
	return this1;
};
kha_arrays__$Int16Array_Int16Array_$Impl_$.arrayRead = function(this1,index) {
	return this1[index];
};
kha_arrays__$Int16Array_Int16Array_$Impl_$.arrayWrite = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Int16Array_Int16Array_$Impl_$.subarray = function(this1,start,end) {
	return this1.subarray(start,end);
};
var kha_arrays__$Int32Array_Int32Array_$Impl_$ = {};
$hxClasses["kha.arrays._Int32Array.Int32Array_Impl_"] = kha_arrays__$Int32Array_Int32Array_$Impl_$;
kha_arrays__$Int32Array_Int32Array_$Impl_$.__name__ = true;
kha_arrays__$Int32Array_Int32Array_$Impl_$._new = function(elements) {
	var this1 = new Int32Array(elements);
	return this1;
};
kha_arrays__$Int32Array_Int32Array_$Impl_$.get_length = function(this1) {
	return this1.length;
};
kha_arrays__$Int32Array_Int32Array_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Int32Array_Int32Array_$Impl_$.get = function(this1,index) {
	return this1[index];
};
kha_arrays__$Int32Array_Int32Array_$Impl_$.data = function(this1) {
	return this1;
};
kha_arrays__$Int32Array_Int32Array_$Impl_$.arrayRead = function(this1,index) {
	return this1[index];
};
kha_arrays__$Int32Array_Int32Array_$Impl_$.arrayWrite = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Int32Array_Int32Array_$Impl_$.subarray = function(this1,start,end) {
	return this1.subarray(start,end);
};
var kha_arrays__$Uint32Array_Uint32Array_$Impl_$ = {};
$hxClasses["kha.arrays._Uint32Array.Uint32Array_Impl_"] = kha_arrays__$Uint32Array_Uint32Array_$Impl_$;
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.__name__ = true;
kha_arrays__$Uint32Array_Uint32Array_$Impl_$._new = function(elements) {
	var this1 = new Uint32Array(elements);
	return this1;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.get_length = function(this1) {
	return this1.length;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.get = function(this1,index) {
	return this1[index];
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.data = function(this1) {
	return this1;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.arrayRead = function(this1,index) {
	return this1[index];
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.arrayWrite = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.subarray = function(this1,start,end) {
	return this1.subarray(start,end);
};
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = true;
kha_audio1_AudioChannel.__isInterface__ = true;
kha_audio1_AudioChannel.prototype = {
	play: null
	,pause: null
	,stop: null
	,length: null
	,get_length: null
	,get_position: null
	,set_position: null
	,get_volume: null
	,set_volume: null
	,finished: null
	,get_finished: null
	,__class__: kha_audio1_AudioChannel
};
var kha_internal_IntBox = function(value) {
	this.value = value;
};
$hxClasses["kha.internal.IntBox"] = kha_internal_IntBox;
kha_internal_IntBox.__name__ = true;
kha_internal_IntBox.prototype = {
	value: null
	,__class__: kha_internal_IntBox
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = true;
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	kha_audio2_Audio.samplesPerSecond = Math.round(kha_audio2_Audio._context.sampleRate);
	var bufferSize = 2048;
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(bufferSize * 4,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(bufferSize,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.intBox.value = e.outputBuffer.length * 2;
			kha_audio2_Audio.audioCallback(kha_audio2_Audio.intBox,kha_audio2_Audio.buffer);
			var _g = 0;
			var _g1 = e.outputBuffer.length;
			while(_g < _g1) {
				var i = _g++;
				output1[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g2 = 0;
			var _g11 = e.outputBuffer.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				output1[i1] = 0;
				output2[i1] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
kha_audio2_Audio.wakeChannels = function() {
	kha_SystemImpl.mobileAudioPlaying = true;
	var _g = 0;
	var _g1 = kha_audio2_Audio.virtualChannels;
	while(_g < _g1.length) {
		var channel = _g1[_g];
		++_g;
		channel.wake();
	}
};
kha_audio2_Audio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var element = window.document.createElement("audio");
	var blob = new Blob([sound.compressedData.b.bufferValue],{ type : "audio/mp4"});
	element.src = URL.createObjectURL(blob);
	element.loop = loop;
	var channel = new kha_js_AEAudioChannel(element,loop);
	if(kha_SystemImpl.mobileAudioPlaying) {
		channel.play();
		return channel;
	} else {
		var virtualChannel = new kha_audio2_VirtualStreamChannel(channel,loop);
		kha_audio2_Audio.virtualChannels.push(virtualChannel);
		return virtualChannel;
	}
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = true;
kha_audio2_Audio1._init = function() {
	var this1 = new Array(32);
	kha_audio2_Audio1.soundChannels = this1;
	var this2 = new Array(32);
	kha_audio2_Audio1.streamChannels = this2;
	var this3 = new Array(32);
	kha_audio2_Audio1.internalSoundChannels = this3;
	var this4 = new Array(32);
	kha_audio2_Audio1.internalStreamChannels = this4;
	var this5 = new Float32Array(512);
	kha_audio2_Audio1.sampleCache1 = this5;
	var this6 = new Float32Array(512);
	kha_audio2_Audio1.sampleCache2 = this6;
	kha_audio2_Audio1.lastAllocationCount = 0;
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1.mix;
};
kha_audio2_Audio1.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_Audio1.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_Audio1.mix = function(samplesBox,buffer) {
	var samples = samplesBox.value;
	if(kha_audio2_Audio1.sampleCache1.length < samples) {
		if(kha_audio2_Audio.disableGcInteractions) {
			haxe_Log.trace("Unexpected allocation request in audio thread.",{ fileName : "kha/audio2/Audio1.hx", lineNumber : 50, className : "kha.audio2.Audio1", methodName : "mix"});
			var _g = 0;
			var _g1 = samples;
			while(_g < _g1) {
				var i = _g++;
				buffer.data[buffer.writeLocation] = 0;
				buffer.writeLocation += 1;
				if(buffer.writeLocation >= buffer.size) {
					buffer.writeLocation = 0;
				}
			}
			kha_audio2_Audio1.lastAllocationCount = 0;
			kha_audio2_Audio.disableGcInteractions = false;
			return;
		}
		var this1 = new Float32Array(samples * 2);
		kha_audio2_Audio1.sampleCache1 = this1;
		var this2 = new Float32Array(samples * 2);
		kha_audio2_Audio1.sampleCache2 = this2;
		kha_audio2_Audio1.lastAllocationCount = 0;
	} else if(kha_audio2_Audio1.lastAllocationCount > 100) {
		kha_audio2_Audio.disableGcInteractions = true;
	} else {
		kha_audio2_Audio1.lastAllocationCount += 1;
	}
	var _g2 = 0;
	var _g11 = samples;
	while(_g2 < _g11) {
		var i1 = _g2++;
		kha_audio2_Audio1.sampleCache2[i1] = 0;
	}
	var _g21 = 0;
	while(_g21 < 32) {
		var i2 = _g21++;
		kha_audio2_Audio1.internalSoundChannels[i2] = kha_audio2_Audio1.soundChannels[i2];
	}
	var _g3 = 0;
	while(_g3 < 32) {
		var i3 = _g3++;
		kha_audio2_Audio1.internalStreamChannels[i3] = kha_audio2_Audio1.streamChannels[i3];
	}
	var _g4 = 0;
	var _g5 = kha_audio2_Audio1.internalSoundChannels;
	while(_g4 < _g5.length) {
		var channel = _g5[_g4];
		++_g4;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g51 = 0;
		var _g6 = samples;
		while(_g51 < _g6) {
			var i4 = _g51++;
			kha_audio2_Audio1.sampleCache2[i4] += kha_audio2_Audio1.sampleCache1[i4] * channel.get_volume();
		}
	}
	var _g61 = 0;
	var _g7 = kha_audio2_Audio1.internalStreamChannels;
	while(_g61 < _g7.length) {
		var channel1 = _g7[_g61];
		++_g61;
		if(channel1 == null || channel1.get_finished()) {
			continue;
		}
		channel1.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g71 = 0;
		var _g8 = samples;
		while(_g71 < _g8) {
			var i5 = _g71++;
			kha_audio2_Audio1.sampleCache2[i5] += kha_audio2_Audio1.sampleCache1[i5] * channel1.get_volume();
		}
	}
	var _g81 = 0;
	var _g9 = samples;
	while(_g81 < _g9) {
		var i6 = _g81++;
		var a = kha_audio2_Audio1.sampleCache2[i6];
		var a1 = a < 1.0 ? a : 1.0;
		buffer.data[buffer.writeLocation] = a1 > -1.0 ? a1 : -1.0;
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
kha_audio2_Audio1.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = null;
	if(kha_audio2_Audio.samplesPerSecond != sound.sampleRate) {
		channel = new kha_audio2_ResamplingAudioChannel(loop,sound.sampleRate);
	} else {
		channel = new kha_audio2_AudioChannel(loop);
	}
	channel.data = sound.uncompressedData;
	var foundChannel = false;
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished()) {
			kha_audio2_Audio1.soundChannels[i] = channel;
			foundChannel = true;
			break;
		}
	}
	if(foundChannel) {
		return channel;
	} else {
		return null;
	}
};
kha_audio2_Audio1._playAgain = function(channel) {
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == channel) {
			kha_audio2_Audio1.soundChannels[i] = null;
		}
	}
	var _g1 = 0;
	while(_g1 < 32) {
		var i1 = _g1++;
		if(kha_audio2_Audio1.soundChannels[i1] == null || kha_audio2_Audio1.soundChannels[i1].get_finished() || kha_audio2_Audio1.soundChannels[i1] == channel) {
			kha_audio2_Audio1.soundChannels[i1] = channel;
			break;
		}
	}
};
kha_audio2_Audio1.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var hardwareChannel = kha_audio2_Audio.stream(sound,loop);
	if(hardwareChannel != null) {
		return hardwareChannel;
	}
	var channel = new kha_audio2_StreamChannel(sound.compressedData,loop);
	var foundChannel = false;
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		if(kha_audio2_Audio1.streamChannels[i] == null || kha_audio2_Audio1.streamChannels[i].get_finished()) {
			kha_audio2_Audio1.streamChannels[i] = channel;
			foundChannel = true;
			break;
		}
	}
	if(foundChannel) {
		return channel;
	} else {
		return null;
	}
};
var kha_audio2_AudioChannel = function(looping) {
	this.looping = false;
	this.stopped = false;
	this.paused = false;
	this.myPosition = 0;
	this.myVolume = 1;
	this.data = null;
	this.looping = looping;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = true;
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_AudioChannel.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_AudioChannel.prototype = {
	data: null
	,myVolume: null
	,myPosition: null
	,paused: null
	,stopped: null
	,looping: null
	,nextSamples: function(requestedSamples,requestedLength,sampleRate) {
		if(this.paused || this.stopped) {
			var _g = 0;
			var _g1 = requestedLength;
			while(_g < _g1) {
				var i = _g++;
				requestedSamples[i] = 0;
			}
			return;
		}
		var requestedSamplesIndex = 0;
		while(requestedSamplesIndex < requestedLength) {
			var _g2 = 0;
			var a = this.data.length - this.myPosition;
			var b = requestedLength - requestedSamplesIndex;
			var _g11 = a < b ? a : b;
			while(_g2 < _g11) {
				var i1 = _g2++;
				requestedSamples[requestedSamplesIndex++] = this.data[this.myPosition++];
			}
			if(this.myPosition >= this.data.length) {
				this.myPosition = 0;
				if(!this.looping) {
					this.stopped = true;
					break;
				}
			}
		}
		while(requestedSamplesIndex < requestedLength) requestedSamples[requestedSamplesIndex++] = 0;
	}
	,play: function() {
		this.paused = false;
		this.stopped = false;
		kha_audio2_Audio1._playAgain(this);
	}
	,pause: function() {
		this.paused = true;
	}
	,stop: function() {
		this.myPosition = 0;
		this.stopped = true;
	}
	,length: null
	,get_length: function() {
		return this.data.length / kha_audio2_Audio.samplesPerSecond / 2;
	}
	,get_position: function() {
		return this.myPosition / kha_audio2_Audio.samplesPerSecond / 2;
	}
	,set_position: function(value) {
		this.myPosition = Math.round(value * kha_audio2_Audio.samplesPerSecond * 2);
		var a = this.myPosition;
		var b = this.data.length;
		var a1 = a < b ? a : b;
		this.myPosition = a1 > 0 ? a1 : 0;
		return value;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,finished: null
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_audio2_AudioChannel
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	var this1 = new Float32Array(size);
	this.data = this1;
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = true;
kha_audio2_Buffer.prototype = {
	channels: null
	,samplesPerSecond: null
	,data: null
	,size: null
	,readLocation: null
	,writeLocation: null
	,__class__: kha_audio2_Buffer
};
var kha_audio2_ResamplingAudioChannel = function(looping,sampleRate) {
	kha_audio2_AudioChannel.call(this,looping);
	this.sampleRate = sampleRate;
};
$hxClasses["kha.audio2.ResamplingAudioChannel"] = kha_audio2_ResamplingAudioChannel;
kha_audio2_ResamplingAudioChannel.__name__ = true;
kha_audio2_ResamplingAudioChannel.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_ResamplingAudioChannel.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_ResamplingAudioChannel.__super__ = kha_audio2_AudioChannel;
kha_audio2_ResamplingAudioChannel.prototype = $extend(kha_audio2_AudioChannel.prototype,{
	sampleRate: null
	,nextSamples: function(requestedSamples,requestedLength,sampleRate) {
		if(this.paused || this.stopped) {
			var _g = 0;
			var _g1 = requestedLength;
			while(_g < _g1) {
				var i = _g++;
				requestedSamples[i] = 0;
			}
			return;
		}
		var requestedSamplesIndex = 0;
		while(requestedSamplesIndex < requestedLength) {
			var _g2 = 0;
			var value = Math.ceil(this.data.length * (sampleRate / this.sampleRate));
			var a = (value % 2 == 0 ? value : value + 1) - this.myPosition;
			var b = requestedLength - requestedSamplesIndex;
			var _g11 = a < b ? a : b;
			while(_g2 < _g11) {
				var i1 = _g2++;
				var index = requestedSamplesIndex++;
				var position = this.myPosition++;
				var even = position % 2 == 0;
				var factor = this.sampleRate / sampleRate;
				var value1;
				if(even) {
					position = position / 2 | 0;
					var pos = factor * position;
					var pos1 = Math.floor(pos);
					var pos2 = Math.floor(pos + 1);
					pos1 *= 2;
					pos2 *= 2;
					var minimum = 0;
					var maximum = this.data.length - 1;
					if(maximum % 2 == 0) {
						maximum = maximum;
					} else {
						--maximum;
					}
					var a1 = pos1 < minimum || pos1 > maximum ? 0 : this.data[pos1];
					var b1 = pos2 < minimum || pos2 > maximum ? 0 : this.data[pos2];
					var t = pos - Math.floor(pos);
					value1 = (1 - t) * a1 + t * b1;
				} else {
					position = position / 2 | 0;
					var pos3 = factor * position;
					var pos11 = Math.floor(pos3);
					var pos21 = Math.floor(pos3 + 1);
					pos11 = pos11 * 2 + 1;
					pos21 = pos21 * 2 + 1;
					var minimum1 = 1;
					var maximum1 = this.data.length - 1;
					if(maximum1 % 2 != 0) {
						maximum1 = maximum1;
					} else {
						--maximum1;
					}
					var a2 = pos11 < minimum1 || pos11 > maximum1 ? 0 : this.data[pos11];
					var b2 = pos21 < minimum1 || pos21 > maximum1 ? 0 : this.data[pos21];
					var t1 = pos3 - Math.floor(pos3);
					value1 = (1 - t1) * a2 + t1 * b2;
				}
				requestedSamples[index] = value1;
			}
			var value2 = Math.ceil(this.data.length * (sampleRate / this.sampleRate));
			if(this.myPosition >= (value2 % 2 == 0 ? value2 : value2 + 1)) {
				this.myPosition = 0;
				if(!this.looping) {
					this.stopped = true;
					break;
				}
			}
		}
		while(requestedSamplesIndex < requestedLength) requestedSamples[requestedSamplesIndex++] = 0;
	}
	,sample: function(position,sampleRate) {
		var even = position % 2 == 0;
		var factor = this.sampleRate / sampleRate;
		if(even) {
			position = position / 2 | 0;
			var pos = factor * position;
			var pos1 = Math.floor(pos);
			var pos2 = Math.floor(pos + 1);
			pos1 *= 2;
			pos2 *= 2;
			var minimum = 0;
			var maximum = this.data.length - 1;
			if(maximum % 2 == 0) {
				maximum = maximum;
			} else {
				--maximum;
			}
			var a = pos1 < minimum || pos1 > maximum ? 0 : this.data[pos1];
			var b = pos2 < minimum || pos2 > maximum ? 0 : this.data[pos2];
			var t = pos - Math.floor(pos);
			return (1 - t) * a + t * b;
		} else {
			position = position / 2 | 0;
			var pos3 = factor * position;
			var pos11 = Math.floor(pos3);
			var pos21 = Math.floor(pos3 + 1);
			pos11 = pos11 * 2 + 1;
			pos21 = pos21 * 2 + 1;
			var minimum1 = 1;
			var maximum1 = this.data.length - 1;
			if(maximum1 % 2 != 0) {
				maximum1 = maximum1;
			} else {
				--maximum1;
			}
			var a1 = pos11 < minimum1 || pos11 > maximum1 ? 0 : this.data[pos11];
			var b1 = pos21 < minimum1 || pos21 > maximum1 ? 0 : this.data[pos21];
			var t1 = pos3 - Math.floor(pos3);
			return (1 - t1) * a1 + t1 * b1;
		}
	}
	,lerp: function(v0,v1,t) {
		return (1 - t) * v0 + t * v1;
	}
	,sampleLength: function(sampleRate) {
		var value = Math.ceil(this.data.length * (sampleRate / this.sampleRate));
		if(value % 2 == 0) {
			return value;
		} else {
			return value + 1;
		}
	}
	,play: function() {
		this.paused = false;
		this.stopped = false;
		kha_audio2_Audio1._playAgain(this);
	}
	,pause: function() {
		this.paused = true;
	}
	,stop: function() {
		this.myPosition = 0;
		this.stopped = true;
	}
	,get_length: function() {
		return this.data.length / this.sampleRate / 2;
	}
	,get_position: function() {
		return this.myPosition / kha_audio2_Audio.samplesPerSecond / 2;
	}
	,set_position: function(value) {
		var pos = Math.round(value * kha_audio2_Audio.samplesPerSecond * 2.0);
		if(pos % 2 == 0) {
			pos = pos;
		} else {
			++pos;
		}
		var value1 = Math.ceil(this.data.length * (kha_audio2_Audio.samplesPerSecond / this.sampleRate));
		var b = value1 % 2 == 0 ? value1 : value1 + 1;
		var a = pos < b ? pos : b;
		this.myPosition = a > 0 ? a : 0;
		return value;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_audio2_ResamplingAudioChannel
});
var kha_audio2_StreamChannel = function(data,loop) {
	this.paused = false;
	this.atend = false;
	this.myVolume = 1;
	this.loop = loop;
	this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = true;
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	reader: null
	,atend: null
	,loop: null
	,myVolume: null
	,paused: null
	,nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g = 0;
			var _g1 = length;
			while(_g < _g1) {
				var i = _g++;
				samples[i] = 0;
			}
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g2 = count;
			var _g11 = length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				samples[i1] = 0;
			}
		}
	}
	,play: function() {
		this.paused = false;
	}
	,pause: function() {
		this.paused = true;
	}
	,stop: function() {
		this.atend = true;
	}
	,length: null
	,get_length: function() {
		return this.reader.get_totalMillisecond() / 1000.0;
	}
	,get_position: function() {
		return this.reader.get_currentMillisecond() / 1000.0;
	}
	,set_position: function(value) {
		return value;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,finished: null
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
};
var kha_audio2_VirtualStreamChannel = function(aeChannel,looping) {
	this.mode = 2;
	this.aeChannel = aeChannel;
	this.looping = looping;
	this.lastTickTime = kha_Scheduler.realTime();
	this.lastPosition = 0;
};
$hxClasses["kha.audio2.VirtualStreamChannel"] = kha_audio2_VirtualStreamChannel;
kha_audio2_VirtualStreamChannel.__name__ = true;
kha_audio2_VirtualStreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_VirtualStreamChannel.prototype = {
	aeChannel: null
	,mode: null
	,lastTickTime: null
	,lastPosition: null
	,looping: null
	,wake: function() {
		this.updatePosition();
		this.aeChannel.set_position(this.lastPosition);
		this.aeChannel.play();
	}
	,updatePosition: function() {
		var now = kha_Scheduler.realTime();
		switch(this.mode) {
		case 0:
			this.lastPosition = 0;
			break;
		case 1:
			break;
		case 2:
			this.lastPosition += now - this.lastTickTime;
			while(this.lastPosition > this.get_length()) this.lastPosition -= this.get_length();
			break;
		}
		this.lastTickTime = now;
	}
	,play: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			this.aeChannel.play();
		} else {
			this.updatePosition();
			this.mode = 2;
		}
	}
	,pause: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			this.aeChannel.pause();
		} else {
			this.updatePosition();
			this.mode = 1;
		}
	}
	,stop: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			this.aeChannel.stop();
		} else {
			this.updatePosition();
			this.mode = 0;
		}
	}
	,length: null
	,get_length: function() {
		return this.aeChannel.get_length();
	}
	,get_position: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			return this.aeChannel.get_position();
		} else {
			this.updatePosition();
			return this.lastPosition;
		}
	}
	,set_position: function(value) {
		if(kha_SystemImpl.mobileAudioPlaying) {
			return this.aeChannel.set_position(value);
		} else {
			this.updatePosition();
			return this.lastPosition = value;
		}
	}
	,get_volume: function() {
		return this.aeChannel.get_volume();
	}
	,set_volume: function(value) {
		return this.aeChannel.set_volume(value);
	}
	,finished: null
	,get_finished: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			return this.aeChannel.get_finished();
		} else if(this.mode != 0) {
			if(!this.looping) {
				return this.get_position() >= this.get_length();
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: kha_audio2_VirtualStreamChannel
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = true;
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	var this1 = new Array(256);
	kha_audio2_ogg_tools_Crc32.table = this1;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
kha_audio2_ogg_tools_Crc32.update = function(crc,byte) {
	return crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
};
var kha_audio2_ogg_tools_MathTools = function() { };
$hxClasses["kha.audio2.ogg.tools.MathTools"] = kha_audio2_ogg_tools_MathTools;
kha_audio2_ogg_tools_MathTools.__name__ = true;
kha_audio2_ogg_tools_MathTools.ilog = function(n) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	if(n < 16384) {
		if(n < 16) {
			return log2_4[n];
		} else if(n < 512) {
			return 5 + log2_4[n >> 5];
		} else {
			return 10 + log2_4[n >> 10];
		}
	} else if(n < 16777216) {
		if(n < 524288) {
			return 15 + log2_4[n >> 15];
		} else {
			return 20 + log2_4[n >> 20];
		}
	} else if(n < 536870912) {
		return 25 + log2_4[n >> 25];
	} else if(n < -2147483648) {
		return 30 + log2_4[n >> 30];
	} else {
		return 0;
	}
};
var kha_audio2_ogg_tools_Mdct = function() { };
$hxClasses["kha.audio2.ogg.tools.Mdct"] = kha_audio2_ogg_tools_Mdct;
kha_audio2_ogg_tools_Mdct.__name__ = true;
kha_audio2_ogg_tools_Mdct.inverseTransform = function(buffer,n,a,b,c,bitReverse) {
	var n2 = n >> 1;
	var n4 = n >> 2;
	var n8 = n >> 3;
	var this1 = new Array(n2);
	var buf2 = this1;
	var dOffset = n2 - 2;
	var aaOffset = 0;
	var eOffset = 0;
	var eStopOffset = n2;
	while(eOffset != eStopOffset) {
		buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
		buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
		dOffset -= 2;
		aaOffset += 2;
		eOffset += 4;
	}
	eOffset = n2 - 3;
	while(dOffset >= 0) {
		buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
		buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
		dOffset -= 2;
		aaOffset += 2;
		eOffset -= 4;
	}
	var u = buffer;
	var v = buf2;
	var aaOffset1 = n2 - 8;
	var eOffset0 = n4;
	var eOffset1 = 0;
	var dOffset0 = n4;
	var dOffset1 = 0;
	while(aaOffset1 >= 0) {
		var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
		var v40_20 = v[eOffset0] - v[eOffset1];
		u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
		u[dOffset0] = v[eOffset0] + v[eOffset1];
		u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
		u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
		v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
		v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
		u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
		u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
		u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
		u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
		aaOffset1 -= 8;
		dOffset0 += 4;
		dOffset1 += 4;
		eOffset0 += 4;
		eOffset1 += 4;
	}
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var i_off = n2 - 1 - n4 * 0;
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + -(n >> 3);
	var aOffset = 0;
	var i = (n >> 4 >> 2) + 1;
	while(--i > 0) {
		var k00_20 = u[eeOffset0] - u[eeOffset2];
		var k01_21 = u[eeOffset0 + (-1)] - u[eeOffset2 + (-1)];
		var _g = eeOffset0;
		var _g1 = u;
		_g1[_g] = _g1[_g] + u[eeOffset2];
		var _g2 = eeOffset0 + (-1);
		var _g11 = u;
		_g11[_g2] = _g11[_g2] + u[eeOffset2 + (-1)];
		u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + (-2)] - u[eeOffset2 + (-2)];
		k01_21 = u[eeOffset0 + (-3)] - u[eeOffset2 + (-3)];
		var _g3 = eeOffset0 + (-2);
		var _g12 = u;
		_g12[_g3] = _g12[_g3] + u[eeOffset2 + (-2)];
		var _g4 = eeOffset0 + (-3);
		var _g13 = u;
		_g13[_g4] = _g13[_g4] + u[eeOffset2 + (-3)];
		u[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + (-4)] - u[eeOffset2 + (-4)];
		k01_21 = u[eeOffset0 + (-5)] - u[eeOffset2 + (-5)];
		var _g5 = eeOffset0 + (-4);
		var _g14 = u;
		_g14[_g5] = _g14[_g5] + u[eeOffset2 + (-4)];
		var _g6 = eeOffset0 + (-5);
		var _g15 = u;
		_g15[_g6] = _g15[_g6] + u[eeOffset2 + (-5)];
		u[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + (-6)] - u[eeOffset2 + (-6)];
		k01_21 = u[eeOffset0 + (-7)] - u[eeOffset2 + (-7)];
		var _g7 = eeOffset0 + (-6);
		var _g16 = u;
		_g16[_g7] = _g16[_g7] + u[eeOffset2 + (-6)];
		var _g8 = eeOffset0 + (-7);
		var _g17 = u;
		_g17[_g8] = _g17[_g8] + u[eeOffset2 + (-7)];
		u[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		eeOffset0 -= 8;
		eeOffset2 -= 8;
	}
	var i_off1 = n2 - 1 - n4;
	var eeOffset01 = i_off1;
	var eeOffset21 = i_off1 + -(n >> 3);
	var aOffset1 = 0;
	var i1 = (n >> 4 >> 2) + 1;
	while(--i1 > 0) {
		var k00_201 = u[eeOffset01] - u[eeOffset21];
		var k01_211 = u[eeOffset01 + (-1)] - u[eeOffset21 + (-1)];
		var _g9 = eeOffset01;
		var _g18 = u;
		_g18[_g9] = _g18[_g9] + u[eeOffset21];
		var _g10 = eeOffset01 + (-1);
		var _g19 = u;
		_g19[_g10] = _g19[_g10] + u[eeOffset21 + (-1)];
		u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + (-1)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + (-2)] - u[eeOffset21 + (-2)];
		k01_211 = u[eeOffset01 + (-3)] - u[eeOffset21 + (-3)];
		var _g20 = eeOffset01 + (-2);
		var _g110 = u;
		_g110[_g20] = _g110[_g20] + u[eeOffset21 + (-2)];
		var _g21 = eeOffset01 + (-3);
		var _g111 = u;
		_g111[_g21] = _g111[_g21] + u[eeOffset21 + (-3)];
		u[eeOffset21 + (-2)] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + (-3)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + (-4)] - u[eeOffset21 + (-4)];
		k01_211 = u[eeOffset01 + (-5)] - u[eeOffset21 + (-5)];
		var _g22 = eeOffset01 + (-4);
		var _g112 = u;
		_g112[_g22] = _g112[_g22] + u[eeOffset21 + (-4)];
		var _g23 = eeOffset01 + (-5);
		var _g113 = u;
		_g113[_g23] = _g113[_g23] + u[eeOffset21 + (-5)];
		u[eeOffset21 + (-4)] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + (-5)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + (-6)] - u[eeOffset21 + (-6)];
		k01_211 = u[eeOffset01 + (-7)] - u[eeOffset21 + (-7)];
		var _g24 = eeOffset01 + (-6);
		var _g114 = u;
		_g114[_g24] = _g114[_g24] + u[eeOffset21 + (-6)];
		var _g25 = eeOffset01 + (-7);
		var _g115 = u;
		_g115[_g25] = _g115[_g25] + u[eeOffset21 + (-7)];
		u[eeOffset21 + (-6)] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + (-7)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		eeOffset01 -= 8;
		eeOffset21 -= 8;
	}
	var d0 = n2 - 1 - n8 * 0;
	var aOffset2 = 0;
	var eOffset01 = d0;
	var eOffset2 = d0 + -(n >> 4);
	var i2 = (n >> 5 >> 2) + 1;
	while(--i2 > 0) {
		var k00_202 = u[eOffset01] - u[eOffset2];
		var k01_212 = u[eOffset01 + (-1)] - u[eOffset2 + (-1)];
		var _g26 = eOffset01;
		var _g116 = u;
		_g116[_g26] = _g116[_g26] + u[eOffset2];
		var _g27 = eOffset01 + (-1);
		var _g117 = u;
		_g117[_g27] = _g117[_g27] + u[eOffset2 + (-1)];
		u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + (-1)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + (-2)] - u[eOffset2 + (-2)];
		k01_212 = u[eOffset01 + (-3)] - u[eOffset2 + (-3)];
		var _g28 = eOffset01 + (-2);
		var _g118 = u;
		_g118[_g28] = _g118[_g28] + u[eOffset2 + (-2)];
		var _g29 = eOffset01 + (-3);
		var _g119 = u;
		_g119[_g29] = _g119[_g29] + u[eOffset2 + (-3)];
		u[eOffset2 + (-2)] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + (-3)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + (-4)] - u[eOffset2 + (-4)];
		k01_212 = u[eOffset01 + (-5)] - u[eOffset2 + (-5)];
		var _g30 = eOffset01 + (-4);
		var _g120 = u;
		_g120[_g30] = _g120[_g30] + u[eOffset2 + (-4)];
		var _g31 = eOffset01 + (-5);
		var _g121 = u;
		_g121[_g31] = _g121[_g31] + u[eOffset2 + (-5)];
		u[eOffset2 + (-4)] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + (-5)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + (-6)] - u[eOffset2 + (-6)];
		k01_212 = u[eOffset01 + (-7)] - u[eOffset2 + (-7)];
		var _g32 = eOffset01 + (-6);
		var _g122 = u;
		_g122[_g32] = _g122[_g32] + u[eOffset2 + (-6)];
		var _g33 = eOffset01 + (-7);
		var _g123 = u;
		_g123[_g33] = _g123[_g33] + u[eOffset2 + (-7)];
		u[eOffset2 + (-6)] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + (-7)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		eOffset01 -= 8;
		eOffset2 -= 8;
		aOffset2 += 16;
	}
	var d01 = n2 - 1 - n8;
	var aOffset3 = 0;
	var eOffset02 = d01;
	var eOffset21 = d01 + -(n >> 4);
	var i3 = (n >> 5 >> 2) + 1;
	while(--i3 > 0) {
		var k00_203 = u[eOffset02] - u[eOffset21];
		var k01_213 = u[eOffset02 + (-1)] - u[eOffset21 + (-1)];
		var _g34 = eOffset02;
		var _g124 = u;
		_g124[_g34] = _g124[_g34] + u[eOffset21];
		var _g35 = eOffset02 + (-1);
		var _g125 = u;
		_g125[_g35] = _g125[_g35] + u[eOffset21 + (-1)];
		u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + (-1)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + (-2)] - u[eOffset21 + (-2)];
		k01_213 = u[eOffset02 + (-3)] - u[eOffset21 + (-3)];
		var _g36 = eOffset02 + (-2);
		var _g126 = u;
		_g126[_g36] = _g126[_g36] + u[eOffset21 + (-2)];
		var _g37 = eOffset02 + (-3);
		var _g127 = u;
		_g127[_g37] = _g127[_g37] + u[eOffset21 + (-3)];
		u[eOffset21 + (-2)] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + (-3)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + (-4)] - u[eOffset21 + (-4)];
		k01_213 = u[eOffset02 + (-5)] - u[eOffset21 + (-5)];
		var _g38 = eOffset02 + (-4);
		var _g128 = u;
		_g128[_g38] = _g128[_g38] + u[eOffset21 + (-4)];
		var _g39 = eOffset02 + (-5);
		var _g129 = u;
		_g129[_g39] = _g129[_g39] + u[eOffset21 + (-5)];
		u[eOffset21 + (-4)] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + (-5)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + (-6)] - u[eOffset21 + (-6)];
		k01_213 = u[eOffset02 + (-7)] - u[eOffset21 + (-7)];
		var _g40 = eOffset02 + (-6);
		var _g130 = u;
		_g130[_g40] = _g130[_g40] + u[eOffset21 + (-6)];
		var _g41 = eOffset02 + (-7);
		var _g131 = u;
		_g131[_g41] = _g131[_g41] + u[eOffset21 + (-7)];
		u[eOffset21 + (-6)] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + (-7)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		eOffset02 -= 8;
		eOffset21 -= 8;
		aOffset3 += 16;
	}
	var d02 = n2 - 1 - n8 * 2;
	var aOffset4 = 0;
	var eOffset03 = d02;
	var eOffset22 = d02 + -(n >> 4);
	var i4 = (n >> 5 >> 2) + 1;
	while(--i4 > 0) {
		var k00_204 = u[eOffset03] - u[eOffset22];
		var k01_214 = u[eOffset03 + (-1)] - u[eOffset22 + (-1)];
		var _g42 = eOffset03;
		var _g132 = u;
		_g132[_g42] = _g132[_g42] + u[eOffset22];
		var _g43 = eOffset03 + (-1);
		var _g133 = u;
		_g133[_g43] = _g133[_g43] + u[eOffset22 + (-1)];
		u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + (-1)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + (-2)] - u[eOffset22 + (-2)];
		k01_214 = u[eOffset03 + (-3)] - u[eOffset22 + (-3)];
		var _g44 = eOffset03 + (-2);
		var _g134 = u;
		_g134[_g44] = _g134[_g44] + u[eOffset22 + (-2)];
		var _g45 = eOffset03 + (-3);
		var _g135 = u;
		_g135[_g45] = _g135[_g45] + u[eOffset22 + (-3)];
		u[eOffset22 + (-2)] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + (-3)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + (-4)] - u[eOffset22 + (-4)];
		k01_214 = u[eOffset03 + (-5)] - u[eOffset22 + (-5)];
		var _g46 = eOffset03 + (-4);
		var _g136 = u;
		_g136[_g46] = _g136[_g46] + u[eOffset22 + (-4)];
		var _g47 = eOffset03 + (-5);
		var _g137 = u;
		_g137[_g47] = _g137[_g47] + u[eOffset22 + (-5)];
		u[eOffset22 + (-4)] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + (-5)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + (-6)] - u[eOffset22 + (-6)];
		k01_214 = u[eOffset03 + (-7)] - u[eOffset22 + (-7)];
		var _g48 = eOffset03 + (-6);
		var _g138 = u;
		_g138[_g48] = _g138[_g48] + u[eOffset22 + (-6)];
		var _g49 = eOffset03 + (-7);
		var _g139 = u;
		_g139[_g49] = _g139[_g49] + u[eOffset22 + (-7)];
		u[eOffset22 + (-6)] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + (-7)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		eOffset03 -= 8;
		eOffset22 -= 8;
		aOffset4 += 16;
	}
	var d03 = n2 - 1 - n8 * 3;
	var aOffset5 = 0;
	var eOffset04 = d03;
	var eOffset23 = d03 + -(n >> 4);
	var i5 = (n >> 5 >> 2) + 1;
	while(--i5 > 0) {
		var k00_205 = u[eOffset04] - u[eOffset23];
		var k01_215 = u[eOffset04 + (-1)] - u[eOffset23 + (-1)];
		var _g50 = eOffset04;
		var _g140 = u;
		_g140[_g50] = _g140[_g50] + u[eOffset23];
		var _g51 = eOffset04 + (-1);
		var _g141 = u;
		_g141[_g51] = _g141[_g51] + u[eOffset23 + (-1)];
		u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + (-1)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + (-2)] - u[eOffset23 + (-2)];
		k01_215 = u[eOffset04 + (-3)] - u[eOffset23 + (-3)];
		var _g52 = eOffset04 + (-2);
		var _g142 = u;
		_g142[_g52] = _g142[_g52] + u[eOffset23 + (-2)];
		var _g53 = eOffset04 + (-3);
		var _g143 = u;
		_g143[_g53] = _g143[_g53] + u[eOffset23 + (-3)];
		u[eOffset23 + (-2)] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + (-3)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + (-4)] - u[eOffset23 + (-4)];
		k01_215 = u[eOffset04 + (-5)] - u[eOffset23 + (-5)];
		var _g54 = eOffset04 + (-4);
		var _g144 = u;
		_g144[_g54] = _g144[_g54] + u[eOffset23 + (-4)];
		var _g55 = eOffset04 + (-5);
		var _g145 = u;
		_g145[_g55] = _g145[_g55] + u[eOffset23 + (-5)];
		u[eOffset23 + (-4)] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + (-5)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + (-6)] - u[eOffset23 + (-6)];
		k01_215 = u[eOffset04 + (-7)] - u[eOffset23 + (-7)];
		var _g56 = eOffset04 + (-6);
		var _g146 = u;
		_g146[_g56] = _g146[_g56] + u[eOffset23 + (-6)];
		var _g57 = eOffset04 + (-7);
		var _g147 = u;
		_g147[_g57] = _g147[_g57] + u[eOffset23 + (-7)];
		u[eOffset23 + (-6)] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + (-7)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		eOffset04 -= 8;
		eOffset23 -= 8;
		aOffset5 += 16;
	}
	var _g58 = 2;
	var _g148 = ld - 3 >> 1;
	while(_g58 < _g148) {
		var l = _g58++;
		var k0 = n >> l + 2;
		var k0_2 = k0 >> 1;
		var lim = 1 << l + 1;
		var _g59 = 0;
		var _g149 = lim;
		while(_g59 < _g149) {
			var i6 = _g59++;
			var d04 = n2 - 1 - k0 * i6;
			var k1 = 1 << l + 3;
			var aOffset6 = 0;
			var eOffset05 = d04;
			var eOffset24 = d04 + -k0_2;
			var i7 = (n >> l + 4 >> 2) + 1;
			while(--i7 > 0) {
				var k00_206 = u[eOffset05] - u[eOffset24];
				var k01_216 = u[eOffset05 + (-1)] - u[eOffset24 + (-1)];
				var _g60 = eOffset05;
				var _g150 = u;
				_g150[_g60] = _g150[_g60] + u[eOffset24];
				var _g61 = eOffset05 + (-1);
				var _g151 = u;
				_g151[_g61] = _g151[_g61] + u[eOffset24 + (-1)];
				u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + (-1)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + (-2)] - u[eOffset24 + (-2)];
				k01_216 = u[eOffset05 + (-3)] - u[eOffset24 + (-3)];
				var _g62 = eOffset05 + (-2);
				var _g152 = u;
				_g152[_g62] = _g152[_g62] + u[eOffset24 + (-2)];
				var _g63 = eOffset05 + (-3);
				var _g153 = u;
				_g153[_g63] = _g153[_g63] + u[eOffset24 + (-3)];
				u[eOffset24 + (-2)] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + (-3)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + (-4)] - u[eOffset24 + (-4)];
				k01_216 = u[eOffset05 + (-5)] - u[eOffset24 + (-5)];
				var _g64 = eOffset05 + (-4);
				var _g154 = u;
				_g154[_g64] = _g154[_g64] + u[eOffset24 + (-4)];
				var _g65 = eOffset05 + (-5);
				var _g155 = u;
				_g155[_g65] = _g155[_g65] + u[eOffset24 + (-5)];
				u[eOffset24 + (-4)] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + (-5)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + (-6)] - u[eOffset24 + (-6)];
				k01_216 = u[eOffset05 + (-7)] - u[eOffset24 + (-7)];
				var _g66 = eOffset05 + (-6);
				var _g156 = u;
				_g156[_g66] = _g156[_g66] + u[eOffset24 + (-6)];
				var _g67 = eOffset05 + (-7);
				var _g157 = u;
				_g157[_g67] = _g157[_g67] + u[eOffset24 + (-7)];
				u[eOffset24 + (-6)] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + (-7)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				eOffset05 -= 8;
				eOffset24 -= 8;
				aOffset6 += k1;
			}
		}
	}
	var _g210 = ld - 3 >> 1;
	var _g310 = ld - 6;
	while(_g210 < _g310) {
		var l1 = _g210++;
		var k01 = n >> l1 + 2;
		var k11 = 1 << l1 + 3;
		var k0_21 = k01 >> 1;
		var rlim = n >> l1 + 6;
		var lim1 = 1 << l1 + 1;
		var aOffset7 = 0;
		var i_off2 = n2 - 1;
		var r = rlim + 1;
		while(--r > 0) {
			var A0 = a[aOffset7];
			var A1 = a[aOffset7 + 1];
			var A2 = a[aOffset7 + k11];
			var A3 = a[aOffset7 + k11 + 1];
			var A4 = a[aOffset7 + k11 * 2];
			var A5 = a[aOffset7 + k11 * 2 + 1];
			var A6 = a[aOffset7 + k11 * 3];
			var A7 = a[aOffset7 + k11 * 3 + 1];
			var eeOffset02 = i_off2;
			var eeOffset22 = i_off2 + -k0_21;
			var i8 = lim1 + 1;
			while(--i8 > 0) {
				var k00 = u[eeOffset02] - u[eeOffset22];
				var k111 = u[eeOffset02 + (-1)] - u[eeOffset22 + (-1)];
				u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
				u[eeOffset02 + (-1)] = u[eeOffset02 + (-1)] + u[eeOffset22 + (-1)];
				u[eeOffset22] = k00 * A0 - k111 * A1;
				u[eeOffset22 + (-1)] = k111 * A0 + k00 * A1;
				k00 = u[eeOffset02 + (-2)] - u[eeOffset22 + (-2)];
				k111 = u[eeOffset02 + (-3)] - u[eeOffset22 + (-3)];
				u[eeOffset02 + (-2)] = u[eeOffset02 + (-2)] + u[eeOffset22 + (-2)];
				u[eeOffset02 + (-3)] = u[eeOffset02 + (-3)] + u[eeOffset22 + (-3)];
				u[eeOffset22 + (-2)] = k00 * A2 - k111 * A3;
				u[eeOffset22 + (-3)] = k111 * A2 + k00 * A3;
				k00 = u[eeOffset02 + (-4)] - u[eeOffset22 + (-4)];
				k111 = u[eeOffset02 + (-5)] - u[eeOffset22 + (-5)];
				u[eeOffset02 + (-4)] = u[eeOffset02 + (-4)] + u[eeOffset22 + (-4)];
				u[eeOffset02 + (-5)] = u[eeOffset02 + (-5)] + u[eeOffset22 + (-5)];
				u[eeOffset22 + (-4)] = k00 * A4 - k111 * A5;
				u[eeOffset22 + (-5)] = k111 * A4 + k00 * A5;
				k00 = u[eeOffset02 + (-6)] - u[eeOffset22 + (-6)];
				k111 = u[eeOffset02 + (-7)] - u[eeOffset22 + (-7)];
				u[eeOffset02 + (-6)] = u[eeOffset02 + (-6)] + u[eeOffset22 + (-6)];
				u[eeOffset02 + (-7)] = u[eeOffset02 + (-7)] + u[eeOffset22 + (-7)];
				u[eeOffset22 + (-6)] = k00 * A6 - k111 * A7;
				u[eeOffset22 + (-7)] = k111 * A6 + k00 * A7;
				eeOffset02 -= k01;
				eeOffset22 -= k01;
			}
			aOffset7 += k11 * 4;
			i_off2 -= 8;
		}
	}
	var i_off3 = n2 - 1;
	var A21 = a[n >> 3];
	var zOffset = i_off3;
	var baseOffset = i_off3 - 16 * (n >> 5);
	while(zOffset > baseOffset) {
		var t0 = u[zOffset];
		var t1 = u[zOffset + (-8)];
		u[zOffset + (-8)] = t0 - t1;
		u[zOffset] = t0 + t1;
		t0 = u[zOffset + (-1)];
		t1 = u[zOffset + (-9)];
		u[zOffset + (-9)] = t0 - t1;
		u[zOffset + (-1)] = t0 + t1;
		t0 = u[zOffset + (-2)];
		t1 = u[zOffset + (-10)];
		var k001 = t0 - t1;
		u[zOffset + (-2)] = t0 + t1;
		t0 = u[zOffset + (-3)];
		t1 = u[zOffset + (-11)];
		var k112 = t0 - t1;
		u[zOffset + (-3)] = t0 + t1;
		u[zOffset + (-10)] = (k001 + k112) * A21;
		u[zOffset + (-11)] = (k112 - k001) * A21;
		t0 = u[zOffset + (-4)];
		t1 = u[zOffset + (-12)];
		k001 = t1 - t0;
		u[zOffset + (-4)] = t0 + t1;
		t0 = u[zOffset + (-5)];
		t1 = u[zOffset + (-13)];
		k112 = t0 - t1;
		u[zOffset + (-5)] = t0 + t1;
		u[zOffset + (-12)] = k112;
		u[zOffset + (-13)] = k001;
		t0 = u[zOffset + (-6)];
		t1 = u[zOffset + (-14)];
		k001 = t1 - t0;
		u[zOffset + (-6)] = t0 + t1;
		t0 = u[zOffset + (-7)];
		t1 = u[zOffset + (-15)];
		k112 = t0 - t1;
		u[zOffset + (-7)] = t0 + t1;
		u[zOffset + (-14)] = (k001 + k112) * A21;
		u[zOffset + (-15)] = (k001 - k112) * A21;
		var t01 = u[zOffset];
		var t11 = u[zOffset + (-4)];
		var k002 = t01 - t11;
		var y0 = t01 + t11;
		t01 = u[zOffset + (-2)];
		t11 = u[zOffset + (-6)];
		var y2 = t01 + t11;
		var k22 = t01 - t11;
		u[zOffset] = y0 + y2;
		u[zOffset + (-2)] = y0 - y2;
		var k33 = u[zOffset + (-3)] - u[zOffset + (-7)];
		u[zOffset + (-4)] = k002 + k33;
		u[zOffset + (-6)] = k002 - k33;
		t01 = u[zOffset + (-1)];
		t11 = u[zOffset + (-5)];
		var k113 = t01 - t11;
		var y1 = t01 + t11;
		var y3 = u[zOffset + (-3)] + u[zOffset + (-7)];
		u[zOffset + (-1)] = y1 + y3;
		u[zOffset + (-3)] = y1 - y3;
		u[zOffset + (-5)] = k113 - k22;
		u[zOffset + (-7)] = k113 + k22;
		var zOffset1 = zOffset - 8;
		var t02 = u[zOffset1];
		var t12 = u[zOffset1 + (-4)];
		var k003 = t02 - t12;
		var y01 = t02 + t12;
		t02 = u[zOffset1 + (-2)];
		t12 = u[zOffset1 + (-6)];
		var y21 = t02 + t12;
		var k221 = t02 - t12;
		u[zOffset1] = y01 + y21;
		u[zOffset1 + (-2)] = y01 - y21;
		var k331 = u[zOffset1 + (-3)] - u[zOffset1 + (-7)];
		u[zOffset1 + (-4)] = k003 + k331;
		u[zOffset1 + (-6)] = k003 - k331;
		t02 = u[zOffset1 + (-1)];
		t12 = u[zOffset1 + (-5)];
		var k114 = t02 - t12;
		var y11 = t02 + t12;
		var y31 = u[zOffset1 + (-3)] + u[zOffset1 + (-7)];
		u[zOffset1 + (-1)] = y11 + y31;
		u[zOffset1 + (-3)] = y11 - y31;
		u[zOffset1 + (-5)] = k114 - k221;
		u[zOffset1 + (-7)] = k114 + k221;
		zOffset -= 16;
	}
	var brOffset = 0;
	var dOffset01 = n4 - 4;
	var dOffset11 = n2 - 4;
	while(dOffset01 >= 0) {
		var k4 = bitReverse[brOffset];
		v[dOffset11 + 3] = u[k4];
		v[dOffset11 + 2] = u[k4 + 1];
		v[dOffset01 + 3] = u[k4 + 2];
		v[dOffset01 + 2] = u[k4 + 3];
		k4 = bitReverse[brOffset + 1];
		v[dOffset11 + 1] = u[k4];
		v[dOffset11] = u[k4 + 1];
		v[dOffset01 + 1] = u[k4 + 2];
		v[dOffset01] = u[k4 + 3];
		dOffset01 -= 4;
		dOffset11 -= 4;
		brOffset += 2;
	}
	var cOffset = 0;
	var dOffset2 = 0;
	var eOffset3 = n2 - 4;
	while(dOffset2 < eOffset3) {
		var a02 = v[dOffset2] - v[eOffset3 + 2];
		var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
		var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
		var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
		var b2 = v[dOffset2] + v[eOffset3 + 2];
		var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
		v[dOffset2] = b2 + b0;
		v[dOffset2 + 1] = b3 + b1;
		v[eOffset3 + 2] = b2 - b0;
		v[eOffset3 + 3] = b1 - b3;
		a02 = v[dOffset2 + 2] - v[eOffset3];
		a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
		b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
		b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
		b2 = v[dOffset2 + 2] + v[eOffset3];
		b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
		v[dOffset2 + 2] = b2 + b0;
		v[dOffset2 + 3] = b3 + b1;
		v[eOffset3] = b2 - b0;
		v[eOffset3 + 1] = b1 - b3;
		cOffset += 4;
		dOffset2 += 4;
		eOffset3 -= 4;
	}
	var bOffset = n2 - 8;
	var eOffset4 = n2 - 8;
	var dOffset02 = 0;
	var dOffset12 = n2 - 4;
	var dOffset21 = n2;
	var dOffset3 = n - 4;
	while(eOffset4 >= 0) {
		var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
		var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
		buffer[dOffset02] = p3;
		buffer[dOffset12 + 3] = -p3;
		buffer[dOffset21] = p2;
		buffer[dOffset3 + 3] = p2;
		var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
		var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
		buffer[dOffset02 + 1] = p1;
		buffer[dOffset12 + 2] = -p1;
		buffer[dOffset21 + 1] = p0;
		buffer[dOffset3 + 2] = p0;
		p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
		p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
		buffer[dOffset02 + 2] = p3;
		buffer[dOffset12 + 1] = -p3;
		buffer[dOffset21 + 2] = p2;
		buffer[dOffset3 + 1] = p2;
		p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
		p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
		buffer[dOffset02 + 3] = p1;
		buffer[dOffset12] = -p1;
		buffer[dOffset21 + 3] = p0;
		buffer[dOffset3] = p0;
		bOffset -= 8;
		eOffset4 -= 8;
		dOffset02 += 4;
		dOffset21 += 4;
		dOffset12 -= 4;
		dOffset3 -= 4;
	}
};
kha_audio2_ogg_tools_Mdct.step3Iter0Loop = function(n,e,i_off,k_off,a) {
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + k_off;
	var aOffset = 0;
	var i = (n >> 2) + 1;
	while(--i > 0) {
		var k00_20 = e[eeOffset0] - e[eeOffset2];
		var k01_21 = e[eeOffset0 + (-1)] - e[eeOffset2 + (-1)];
		var _g = eeOffset0;
		var _g1 = e;
		_g1[_g] = _g1[_g] + e[eeOffset2];
		var _g2 = eeOffset0 + (-1);
		var _g11 = e;
		_g11[_g2] = _g11[_g2] + e[eeOffset2 + (-1)];
		e[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + (-2)] - e[eeOffset2 + (-2)];
		k01_21 = e[eeOffset0 + (-3)] - e[eeOffset2 + (-3)];
		var _g3 = eeOffset0 + (-2);
		var _g12 = e;
		_g12[_g3] = _g12[_g3] + e[eeOffset2 + (-2)];
		var _g4 = eeOffset0 + (-3);
		var _g13 = e;
		_g13[_g4] = _g13[_g4] + e[eeOffset2 + (-3)];
		e[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + (-4)] - e[eeOffset2 + (-4)];
		k01_21 = e[eeOffset0 + (-5)] - e[eeOffset2 + (-5)];
		var _g5 = eeOffset0 + (-4);
		var _g14 = e;
		_g14[_g5] = _g14[_g5] + e[eeOffset2 + (-4)];
		var _g6 = eeOffset0 + (-5);
		var _g15 = e;
		_g15[_g6] = _g15[_g6] + e[eeOffset2 + (-5)];
		e[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + (-6)] - e[eeOffset2 + (-6)];
		k01_21 = e[eeOffset0 + (-7)] - e[eeOffset2 + (-7)];
		var _g7 = eeOffset0 + (-6);
		var _g16 = e;
		_g16[_g7] = _g16[_g7] + e[eeOffset2 + (-6)];
		var _g8 = eeOffset0 + (-7);
		var _g17 = e;
		_g17[_g8] = _g17[_g8] + e[eeOffset2 + (-7)];
		e[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		eeOffset0 -= 8;
		eeOffset2 -= 8;
	}
};
kha_audio2_ogg_tools_Mdct.step3InnerRLoop = function(lim,e,d0,k_off,a,k1) {
	var aOffset = 0;
	var eOffset0 = d0;
	var eOffset2 = d0 + k_off;
	var i = (lim >> 2) + 1;
	while(--i > 0) {
		var k00_20 = e[eOffset0] - e[eOffset2];
		var k01_21 = e[eOffset0 + (-1)] - e[eOffset2 + (-1)];
		var _g = eOffset0;
		var _g1 = e;
		_g1[_g] = _g1[_g] + e[eOffset2];
		var _g2 = eOffset0 + (-1);
		var _g11 = e;
		_g11[_g2] = _g11[_g2] + e[eOffset2 + (-1)];
		e[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + (-2)] - e[eOffset2 + (-2)];
		k01_21 = e[eOffset0 + (-3)] - e[eOffset2 + (-3)];
		var _g3 = eOffset0 + (-2);
		var _g12 = e;
		_g12[_g3] = _g12[_g3] + e[eOffset2 + (-2)];
		var _g4 = eOffset0 + (-3);
		var _g13 = e;
		_g13[_g4] = _g13[_g4] + e[eOffset2 + (-3)];
		e[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + (-4)] - e[eOffset2 + (-4)];
		k01_21 = e[eOffset0 + (-5)] - e[eOffset2 + (-5)];
		var _g5 = eOffset0 + (-4);
		var _g14 = e;
		_g14[_g5] = _g14[_g5] + e[eOffset2 + (-4)];
		var _g6 = eOffset0 + (-5);
		var _g15 = e;
		_g15[_g6] = _g15[_g6] + e[eOffset2 + (-5)];
		e[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + (-6)] - e[eOffset2 + (-6)];
		k01_21 = e[eOffset0 + (-7)] - e[eOffset2 + (-7)];
		var _g7 = eOffset0 + (-6);
		var _g16 = e;
		_g16[_g7] = _g16[_g7] + e[eOffset2 + (-6)];
		var _g8 = eOffset0 + (-7);
		var _g17 = e;
		_g17[_g8] = _g17[_g8] + e[eOffset2 + (-7)];
		e[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		eOffset0 -= 8;
		eOffset2 -= 8;
		aOffset += k1;
	}
};
kha_audio2_ogg_tools_Mdct.step3InnerSLoop = function(n,e,i_off,k_off,a,aOffset0,aOffset1,k0) {
	var A0 = a[aOffset0];
	var A1 = a[aOffset0 + 1];
	var A2 = a[aOffset0 + aOffset1];
	var A3 = a[aOffset0 + aOffset1 + 1];
	var A4 = a[aOffset0 + aOffset1 * 2];
	var A5 = a[aOffset0 + aOffset1 * 2 + 1];
	var A6 = a[aOffset0 + aOffset1 * 3];
	var A7 = a[aOffset0 + aOffset1 * 3 + 1];
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + k_off;
	var i = n + 1;
	while(--i > 0) {
		var k00 = e[eeOffset0] - e[eeOffset2];
		var k11 = e[eeOffset0 + (-1)] - e[eeOffset2 + (-1)];
		e[eeOffset0] = e[eeOffset0] + e[eeOffset2];
		e[eeOffset0 + (-1)] = e[eeOffset0 + (-1)] + e[eeOffset2 + (-1)];
		e[eeOffset2] = k00 * A0 - k11 * A1;
		e[eeOffset2 + (-1)] = k11 * A0 + k00 * A1;
		k00 = e[eeOffset0 + (-2)] - e[eeOffset2 + (-2)];
		k11 = e[eeOffset0 + (-3)] - e[eeOffset2 + (-3)];
		e[eeOffset0 + (-2)] = e[eeOffset0 + (-2)] + e[eeOffset2 + (-2)];
		e[eeOffset0 + (-3)] = e[eeOffset0 + (-3)] + e[eeOffset2 + (-3)];
		e[eeOffset2 + (-2)] = k00 * A2 - k11 * A3;
		e[eeOffset2 + (-3)] = k11 * A2 + k00 * A3;
		k00 = e[eeOffset0 + (-4)] - e[eeOffset2 + (-4)];
		k11 = e[eeOffset0 + (-5)] - e[eeOffset2 + (-5)];
		e[eeOffset0 + (-4)] = e[eeOffset0 + (-4)] + e[eeOffset2 + (-4)];
		e[eeOffset0 + (-5)] = e[eeOffset0 + (-5)] + e[eeOffset2 + (-5)];
		e[eeOffset2 + (-4)] = k00 * A4 - k11 * A5;
		e[eeOffset2 + (-5)] = k11 * A4 + k00 * A5;
		k00 = e[eeOffset0 + (-6)] - e[eeOffset2 + (-6)];
		k11 = e[eeOffset0 + (-7)] - e[eeOffset2 + (-7)];
		e[eeOffset0 + (-6)] = e[eeOffset0 + (-6)] + e[eeOffset2 + (-6)];
		e[eeOffset0 + (-7)] = e[eeOffset0 + (-7)] + e[eeOffset2 + (-7)];
		e[eeOffset2 + (-6)] = k00 * A6 - k11 * A7;
		e[eeOffset2 + (-7)] = k11 * A6 + k00 * A7;
		eeOffset0 -= k0;
		eeOffset2 -= k0;
	}
};
kha_audio2_ogg_tools_Mdct.iter54 = function(e,zOffset) {
	var t0 = e[zOffset];
	var t1 = e[zOffset + (-4)];
	var k00 = t0 - t1;
	var y0 = t0 + t1;
	t0 = e[zOffset + (-2)];
	t1 = e[zOffset + (-6)];
	var y2 = t0 + t1;
	var k22 = t0 - t1;
	e[zOffset] = y0 + y2;
	e[zOffset + (-2)] = y0 - y2;
	var k33 = e[zOffset + (-3)] - e[zOffset + (-7)];
	e[zOffset + (-4)] = k00 + k33;
	e[zOffset + (-6)] = k00 - k33;
	t0 = e[zOffset + (-1)];
	t1 = e[zOffset + (-5)];
	var k11 = t0 - t1;
	var y1 = t0 + t1;
	var y3 = e[zOffset + (-3)] + e[zOffset + (-7)];
	e[zOffset + (-1)] = y1 + y3;
	e[zOffset + (-3)] = y1 - y3;
	e[zOffset + (-5)] = k11 - k22;
	e[zOffset + (-7)] = k11 + k22;
};
kha_audio2_ogg_tools_Mdct.step3InnerSLoopLd654 = function(n,e,i_off,a,baseN) {
	var A2 = a[baseN >> 3];
	var zOffset = i_off;
	var baseOffset = i_off - 16 * n;
	while(zOffset > baseOffset) {
		var t0 = e[zOffset];
		var t1 = e[zOffset + (-8)];
		e[zOffset + (-8)] = t0 - t1;
		e[zOffset] = t0 + t1;
		t0 = e[zOffset + (-1)];
		t1 = e[zOffset + (-9)];
		e[zOffset + (-9)] = t0 - t1;
		e[zOffset + (-1)] = t0 + t1;
		t0 = e[zOffset + (-2)];
		t1 = e[zOffset + (-10)];
		var k00 = t0 - t1;
		e[zOffset + (-2)] = t0 + t1;
		t0 = e[zOffset + (-3)];
		t1 = e[zOffset + (-11)];
		var k11 = t0 - t1;
		e[zOffset + (-3)] = t0 + t1;
		e[zOffset + (-10)] = (k00 + k11) * A2;
		e[zOffset + (-11)] = (k11 - k00) * A2;
		t0 = e[zOffset + (-4)];
		t1 = e[zOffset + (-12)];
		k00 = t1 - t0;
		e[zOffset + (-4)] = t0 + t1;
		t0 = e[zOffset + (-5)];
		t1 = e[zOffset + (-13)];
		k11 = t0 - t1;
		e[zOffset + (-5)] = t0 + t1;
		e[zOffset + (-12)] = k11;
		e[zOffset + (-13)] = k00;
		t0 = e[zOffset + (-6)];
		t1 = e[zOffset + (-14)];
		k00 = t1 - t0;
		e[zOffset + (-6)] = t0 + t1;
		t0 = e[zOffset + (-7)];
		t1 = e[zOffset + (-15)];
		k11 = t0 - t1;
		e[zOffset + (-7)] = t0 + t1;
		e[zOffset + (-14)] = (k00 + k11) * A2;
		e[zOffset + (-15)] = (k00 - k11) * A2;
		var t01 = e[zOffset];
		var t11 = e[zOffset + (-4)];
		var k001 = t01 - t11;
		var y0 = t01 + t11;
		t01 = e[zOffset + (-2)];
		t11 = e[zOffset + (-6)];
		var y2 = t01 + t11;
		var k22 = t01 - t11;
		e[zOffset] = y0 + y2;
		e[zOffset + (-2)] = y0 - y2;
		var k33 = e[zOffset + (-3)] - e[zOffset + (-7)];
		e[zOffset + (-4)] = k001 + k33;
		e[zOffset + (-6)] = k001 - k33;
		t01 = e[zOffset + (-1)];
		t11 = e[zOffset + (-5)];
		var k111 = t01 - t11;
		var y1 = t01 + t11;
		var y3 = e[zOffset + (-3)] + e[zOffset + (-7)];
		e[zOffset + (-1)] = y1 + y3;
		e[zOffset + (-3)] = y1 - y3;
		e[zOffset + (-5)] = k111 - k22;
		e[zOffset + (-7)] = k111 + k22;
		var zOffset1 = zOffset - 8;
		var t02 = e[zOffset1];
		var t12 = e[zOffset1 + (-4)];
		var k002 = t02 - t12;
		var y01 = t02 + t12;
		t02 = e[zOffset1 + (-2)];
		t12 = e[zOffset1 + (-6)];
		var y21 = t02 + t12;
		var k221 = t02 - t12;
		e[zOffset1] = y01 + y21;
		e[zOffset1 + (-2)] = y01 - y21;
		var k331 = e[zOffset1 + (-3)] - e[zOffset1 + (-7)];
		e[zOffset1 + (-4)] = k002 + k331;
		e[zOffset1 + (-6)] = k002 - k331;
		t02 = e[zOffset1 + (-1)];
		t12 = e[zOffset1 + (-5)];
		var k112 = t02 - t12;
		var y11 = t02 + t12;
		var y31 = e[zOffset1 + (-3)] + e[zOffset1 + (-7)];
		e[zOffset1 + (-1)] = y11 + y31;
		e[zOffset1 + (-3)] = y11 - y31;
		e[zOffset1 + (-5)] = k112 - k221;
		e[zOffset1 + (-7)] = k112 + k221;
		zOffset -= 16;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = true;
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var bytes1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var bytes1 = input;
	decoder.setupSampleNumber(function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
	var header = decoder.header;
	var count = 0;
	var bufferSize = 4096;
	var this1 = new Float32Array(bufferSize * header.channel);
	var buffer = this1;
	while(true) {
		var n = decoder.read(buffer,bufferSize,header.channel,header.sampleRate,useFloat);
		var _g = 0;
		var _g1 = n * header.channel;
		while(_g < _g1) {
			var i = _g++;
			output.writeFloat(buffer[i]);
		}
		if(n == 0) {
			break;
		}
		count += n;
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	decoder: null
	,get_header: function() {
		return this.decoder.header;
	}
	,get_totalSample: function() {
		return this.decoder.totalSample;
	}
	,get_totalMillisecond: function() {
		var samples = this.decoder.totalSample;
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		var samples = this.get_currentSample();
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,set_currentMillisecond: function(value) {
		this.set_currentSample(Math.floor(_$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * (value / 1000)));
		return this.get_currentMillisecond();
	}
	,loopStart: null
	,loopLength: null
	,seekFunc: null
	,inputLength: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,clone: function() {
		var reader = Object.create(kha_audio2_ogg_vorbis_Reader.prototype);
		reader.seekFunc = this.seekFunc;
		reader.inputLength = this.inputLength;
		reader.decoder = this.decoder.clone(this.seekFunc);
		reader.loopStart = this.loopStart;
		reader.loopLength = this.loopLength;
		return reader;
	}
	,sampleToMillisecond: function(samples) {
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,millisecondToSample: function(millseconds) {
		return Math.floor(_$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * (millseconds / 1000));
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = true;
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	page: null
	,eof: null
	,pFirst: null
	,pLast: null
	,validBits: null
	,inputPosition: null
	,input: null
	,discardSamplesDeferred: null
	,segments: null
	,bytesInSeg: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,currentSample: null
	,previousWindow: null
	,previousLength: null
	,finalY: null
	,firstDecode: null
	,nextSeg: null
	,acc: null
	,lastSeg: null
	,lastSegWhich: null
	,endSegWithKnownLoc: null
	,knownLocForPacket: null
	,error: null
	,currentLoc: null
	,currentLocValid: null
	,firstAudioPageOffset: null
	,setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var this1 = new Array(segmentCount);
		var vec = this1;
		var _g = 0;
		var _g1 = segmentCount;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i1 = segmentCount - 1;
			while(i1 >= 0) {
				if(this.segments[i1] < 255) {
					break;
				}
				if(i1 >= 0) {
					this.endSegWithKnownLoc = i1;
					this.knownLocForPacket = loc0;
				}
				--i1;
			}
		}
		if(this.firstDecode) {
			var i2 = 0;
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g2 = 0;
			var _g11 = segmentCount;
			while(_g2 < _g11) {
				var i3 = _g2++;
				len += this.segments[i3];
			}
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Object.create(kha_audio2_ogg_vorbis_VorbisDecodeState.prototype);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( e ) {
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				if(((e1) instanceof kha_audio2_ogg_vorbis_data_ReaderError)) {
					this.lastSeg = true;
					this.error = e1;
					return 0;
				} else {
					throw e;
				}
			}
			if((this.page.flag & 1) == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( e ) {
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				if(((e1) instanceof haxe_io_Eof)) {
					var e2 = e1;
					eof = true;
					x = 0;
				} else {
					throw e;
				}
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z1 = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z1;
		}
	}
	,readPacketRaw: function() {
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			return -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			return this.input.readByte();
		}
	}
	,readPacket: function() {
		var x;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x = this.input.readByte();
		}
		this.validBits = 0;
		return x;
	}
	,flushPacket: function() {
		while(this.bytesInSeg != 0 || !this.lastSeg && this.next() != 0) {
			this.bytesInSeg--;
			this.inputPosition += 1;
			this.input.readByte();
		}
	}
	,vorbisValidate: function() {
		var header = new haxe_io_Bytes(new ArrayBuffer(6));
		var x;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x = this.input.readByte();
		}
		this.validBits = 0;
		header.b[0] = x;
		var x1;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x1 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x1 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[1] = x1;
		var x2;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x2 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x2 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[2] = x2;
		var x3;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x3 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x3 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[3] = x3;
		var x4;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x4 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x4 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[4] = x4;
		var x5;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x5 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x5 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[5] = x5;
		if(header.toString() != "vorbis") {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 308, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 311, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,capturePattern: function() {
		var tmp;
		var tmp1;
		var tmp2;
		this.inputPosition += 1;
		if(this.input.readByte() == 79) {
			this.inputPosition += 1;
			tmp2 = this.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			this.inputPosition += 1;
			tmp1 = this.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			this.inputPosition += 1;
			tmp = this.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
	}
	,skip: function(len) {
		this.inputPosition += len;
		var this1 = new Array(len);
		var vec = this1;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,decode: function(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		var i = c.fastHuffman[this.acc & 1023];
		var val;
		if(i >= 0) {
			var l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = this.decodeScalarRaw(c);
		}
		if(c.sparse) {
			val = c.sortedValues[val];
		}
		return val;
	}
	,decodeRaw: function(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		var i = c.fastHuffman[this.acc & 1023];
		if(i >= 0) {
			var l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				return -1;
			} else {
				return i;
			}
		} else {
			return this.decodeScalarRaw(c);
		}
	}
	,isLastByte: function() {
		if(this.bytesInSeg == 0) {
			return this.lastSeg;
		} else {
			return false;
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		} else {
			var tmp = previousLength == 0 && currentLocValid;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,readInt32: function() {
		this.inputPosition += 4;
		return this.input.readInt32();
	}
	,readByte: function() {
		this.inputPosition += 1;
		return this.input.readByte();
	}
	,read: function(n) {
		this.inputPosition += n;
		var this1 = new Array(n);
		var vec = this1;
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		return vec;
	}
	,readBytes: function(n) {
		this.inputPosition += n;
		return this.input.read(n);
	}
	,readString: function(n) {
		this.inputPosition += n;
		return this.input.readString(n);
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = _$UInt_UInt_$Impl_$.gte(inputLength,65536) && _$UInt_UInt_$Impl_$.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g._hx_index) {
		case 0:
			var l = _g.last;
			var e = _g.end;
			end = e;
			last = l;
			break;
		case 1:
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		var lastPageLoc = this.inputPosition;
		_hx_loop1: while(!last) {
			seekFunc(this.inputPosition = end);
			var _g3 = this.findPage(seekFunc,inputLength);
			switch(_g3._hx_index) {
			case 0:
				var l1 = _g3.last;
				var e1 = _g3.end;
				end = e1;
				last = l1;
				break;
			case 1:
				break _hx_loop1;
			}
			previousSafe = lastPageLoc + 1;
			lastPageLoc = this.inputPosition;
		}
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var this1 = new Array(6);
		var vec = this1;
		var _g1 = 0;
		var _g11 = 6;
		while(_g1 < _g11) {
			var i = _g1++;
			vec[i] = this.input.readByte();
		}
		var vorbisHeader = vec;
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 553, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,forcePageResync: function() {
		this.nextSeg = -1;
	}
	,setInputOffset: function(seekFunc,n) {
		seekFunc(this.inputPosition = n);
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				var n = this.input.readByte();
				if(n == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var this1 = new Array(27);
					var header = this1;
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					this.inputPosition += 1;
					header[4] = this.input.readByte();
					this.inputPosition += 1;
					header[5] = this.input.readByte();
					this.inputPosition += 1;
					header[6] = this.input.readByte();
					this.inputPosition += 1;
					header[7] = this.input.readByte();
					this.inputPosition += 1;
					header[8] = this.input.readByte();
					this.inputPosition += 1;
					header[9] = this.input.readByte();
					this.inputPosition += 1;
					header[10] = this.input.readByte();
					this.inputPosition += 1;
					header[11] = this.input.readByte();
					this.inputPosition += 1;
					header[12] = this.input.readByte();
					this.inputPosition += 1;
					header[13] = this.input.readByte();
					this.inputPosition += 1;
					header[14] = this.input.readByte();
					this.inputPosition += 1;
					header[15] = this.input.readByte();
					this.inputPosition += 1;
					header[16] = this.input.readByte();
					this.inputPosition += 1;
					header[17] = this.input.readByte();
					this.inputPosition += 1;
					header[18] = this.input.readByte();
					this.inputPosition += 1;
					header[19] = this.input.readByte();
					this.inputPosition += 1;
					header[20] = this.input.readByte();
					this.inputPosition += 1;
					header[21] = this.input.readByte();
					this.inputPosition += 1;
					header[22] = this.input.readByte();
					this.inputPosition += 1;
					header[23] = this.input.readByte();
					this.inputPosition += 1;
					header[24] = this.input.readByte();
					this.inputPosition += 1;
					header[25] = this.input.readByte();
					this.inputPosition += 1;
					header[26] = this.input.readByte();
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					header[22] = 0;
					header[23] = 0;
					header[24] = 0;
					header[25] = 0;
					var crc = 0;
					var _g = 0;
					while(_g < 27) {
						var i = _g++;
						crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[i] ^ crc >>> 24];
					}
					var len = 0;
					try {
						var _g1 = 0;
						var _g2 = header[26];
						while(_g1 < _g2) {
							var i1 = _g1++;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g3 = 0;
						var _g4 = len;
						while(_g3 < _g4) {
							var i2 = _g3++;
							this.inputPosition += 1;
							var byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
						}
					} catch( e ) {
						var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
						if(((e1) instanceof haxe_io_Eof)) {
							var e2 = e1;
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else {
							throw e;
						}
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( e3 ) {
			var e4 = ((e3) instanceof js__$Boot_HaxeError) ? e3.val : e3;
			if(((e4) instanceof haxe_io_Eof)) {
				var e5 = e4;
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else {
				throw e3;
			}
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var this1 = new Array(255);
		var packetType = this1;
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var this2 = new Array(27);
		var vec = this2;
		var _g = 0;
		var _g1 = 27;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		var pageHeader = vec;
		var n = pageHeader[26];
		this.inputPosition += n;
		var this3 = new Array(n);
		var vec1 = this3;
		var _g2 = 0;
		var _g11 = n;
		while(_g2 < _g11) {
			var i1 = _g2++;
			vec1[i1] = this.input.readByte();
		}
		var lacing = vec1;
		var len = 0;
		var _g3 = 0;
		var _g12 = pageHeader[26];
		while(_g3 < _g12) {
			var i2 = _g3++;
			len += lacing[i2];
		}
		z.pageEnd = z.pageStart + 27 + pageHeader[26] + len;
		z.lastDecodedSample = pageHeader[6] + (pageHeader[7] << 8) + (pageHeader[8] << 16) + (pageHeader[9] << 16);
		if((pageHeader[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (pageHeader[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g21 = 0;
		var _g31 = pageHeader[26];
		while(_g21 < _g31) {
			var i3 = _g21++;
			if(packetStart) {
				if(lacing[i3] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n1 = this.input.readByte();
				if((n1 & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n1 >>= 1;
				var n2 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				var b = n2 < 16384 ? n2 < 16 ? log2_4[n2] : n2 < 512 ? 5 + log2_4[n2 >> 5] : 10 + log2_4[n2 >> 10] : n2 < 16777216 ? n2 < 524288 ? 15 + log2_4[n2 >> 15] : 20 + log2_4[n2 >> 20] : n2 < 536870912 ? 25 + log2_4[n2 >> 25] : n2 < -2147483648 ? 30 + log2_4[n2 >> 30] : 0;
				n1 &= (1 << b) - 1;
				if(n1 >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n1].blockflag;
				var len1 = lacing[i3] - 1;
				this.inputPosition += len1;
				var this4 = new Array(len1);
				var vec2 = this4;
				var _g4 = 0;
				var _g13 = len1;
				while(_g4 < _g13) {
					var i4 = _g4++;
					vec2[i4] = this.input.readByte();
				}
			} else {
				var len2 = lacing[i3];
				this.inputPosition += len2;
				var this5 = new Array(len2);
				var vec3 = this5;
				var _g5 = 0;
				var _g14 = len2;
				while(_g5 < _g14) {
					var i5 = _g5++;
					vec3[i5] = this.input.readByte();
				}
			}
			packetStart = lacing[i3] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples += packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		var i6 = numPacket - 2;
		while(i6 >= 1) {
			--i6;
			if(packetType[i6]) {
				if(packetType[i6 + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i6;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n1 = c.sortedEntries;
			while(n1 > 1) {
				var m = x + (n1 >> 1);
				if(_$UInt_UInt_$Impl_$.gte(code,sortedCodewords[m])) {
					x = m;
					n1 -= n1 >> 1;
				} else {
					n1 >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var i = _g++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 847, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxEnums["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__ : true, __constructs__ : ["Found","NotFound"]
	,Found: ($_=function(end,last) { return {_hx_index:0,end:end,last:last,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}; },$_.__params__ = ["end","last"],$_)
	,NotFound: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}
};
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	var this1 = new Array(header.channel);
	this.channelBuffers = this1;
	var this2 = new Array(header.channel);
	this.previousWindow = this2;
	var this3 = new Array(header.channel);
	this.finalY = this3;
	var _g = 0;
	var _g1 = header.channel;
	while(_g < _g1) {
		var i = _g++;
		var this4 = this.channelBuffers;
		var this5 = new Array(header.blocksize1);
		var vec = this5;
		this4[i] = vec;
		var this6 = this.previousWindow;
		var this7 = new Array(header.blocksize1 / 2 | 0);
		var vec1 = this7;
		this6[i] = vec1;
		this.finalY[i] = [];
	}
	var this8 = new Array(2);
	this.a = this8;
	var this9 = new Array(2);
	this.b = this9;
	var this10 = new Array(2);
	this.c = this10;
	var this11 = new Array(2);
	this.window = this11;
	var this12 = new Array(2);
	this.bitReverseData = this12;
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = true;
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var header = kha_audio2_ogg_vorbis_data_Header.read(decodeState);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(header,decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	previousWindow: null
	,previousLength: null
	,finalY: null
	,a: null
	,b: null
	,c: null
	,window: null
	,bitReverseData: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,header: null
	,currentSample: null
	,totalSample: null
	,decodeState: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		var b = this.header.sampleRate;
		if((_$UInt_UInt_$Impl_$.toFloat(sampleRate) % _$UInt_UInt_$Impl_$.toFloat(b) | 0) != 0) {
			var this1 = this.header.sampleRate;
			throw new js__$Boot_HaxeError("Unsupported sampleRate : can't convert " + Std.string(this1 == null ? null : _$UInt_UInt_$Impl_$.toFloat(this1)) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw new js__$Boot_HaxeError("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var b1 = this.header.sampleRate;
		var sampleRepeat = _$UInt_UInt_$Impl_$.toFloat(sampleRate) / _$UInt_UInt_$Impl_$.toFloat(b1) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g = this.channelBufferStart;
			var _g1 = this.channelBufferStart + k;
			while(_g < _g1) {
				var j = _g++;
				var _g2 = 0;
				var _g11 = sampleRepeat;
				while(_g2 < _g11) {
					var sr = _g2++;
					var _g3 = 0;
					var _g12 = this.header.channel;
					while(_g3 < _g12) {
						var i = _g3++;
						var _g4 = 0;
						var _g13 = channelRepeat;
						while(_g4 < _g13) {
							var cr = _g4++;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output[index] = value;
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g5 = n;
		var _g14 = len;
		while(_g5 < _g14) {
			var j1 = _g5++;
			var _g6 = 0;
			var _g15 = sampleRepeat;
			while(_g6 < _g15) {
				var sr1 = _g6++;
				var _g7 = 0;
				var _g16 = this.header.channel;
				while(_g7 < _g16) {
					var i1 = _g7++;
					var _g8 = 0;
					var _g17 = channelRepeat;
					while(_g8 < _g17) {
						var cr1 = _g8++;
						if(useFloat) {
							output[index] = 0;
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(_$UInt_UInt_$Impl_$.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(_$UInt_UInt_$Impl_$.toFloat(endOffset - startOffset) / _$UInt_UInt_$Impl_$.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					probe = attempts >= 8 ? probe2 : _$UInt_UInt_$Impl_$.gt(probe2,probe) ? probe + (probe2 - probe >>> 1) : probe2 + (probe - probe2 >>> 1);
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				var _g = this.decodeState.findPage(seekFunc,inputLength);
				switch(_g._hx_index) {
				case 0:
					var _g2 = _g.last;
					var _g1 = _g.end;
					break;
				case 1:
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,clone: function(seekFunc) {
		var decoder = Object.create(kha_audio2_ogg_vorbis_VorbisDecoder.prototype);
		decoder.currentSample = this.currentSample;
		decoder.totalSample = this.totalSample;
		decoder.previousLength = this.previousLength;
		decoder.channelBufferStart = this.channelBufferStart;
		decoder.channelBufferEnd = this.channelBufferEnd;
		decoder.a = this.a;
		decoder.b = this.b;
		decoder.c = this.c;
		decoder.window = this.window;
		decoder.bitReverseData = this.bitReverseData;
		decoder.header = this.header;
		decoder.decodeState = this.decodeState.clone(seekFunc);
		var this1 = new Array(this.header.channel);
		decoder.channelBuffers = this1;
		var this2 = new Array(this.header.channel);
		decoder.previousWindow = this2;
		var this3 = new Array(this.header.channel);
		decoder.finalY = this3;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			decoder.channelBuffers[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.channelBuffers[i]);
			decoder.previousWindow[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.previousWindow[i]);
			decoder.finalY[i] = Lambda.array(this.finalY[i]);
		}
		return decoder;
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g = 0;
			var _g1 = this.header.channel;
			while(_g < _g1) {
				var i = _g++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g2 = 0;
				var _g11 = n;
				while(_g2 < _g11) {
					var j = _g2++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g3 = 0;
		var _g12 = this.header.channel;
		while(_g3 < _g12) {
			var i1 = _g3++;
			var pw1 = this.previousWindow[i1];
			var cb1 = this.channelBuffers[i1];
			var _g4 = 0;
			var _g13 = len - right;
			while(_g4 < _g13) {
				var j1 = _g4++;
				pw1[j1] = cb1[right + j1];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = this.a;
		var this2 = new Array(n2);
		this1[bs] = this2;
		var this3 = this.b;
		var this4 = new Array(n2);
		this3[bs] = this4;
		var this5 = this.c;
		var this6 = new Array(n4);
		this5[bs] = this6;
		var this7 = this.window;
		var this8 = new Array(n2);
		this7[bs] = this8;
		var this9 = this.bitReverseData;
		var this10 = new Array(n8);
		this9[bs] = this10;
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype ? 1 : 0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = new Array(n2);
		var buf2 = this1;
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		var eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var u = buffer;
		var v = buf2;
		var aaOffset1 = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset1 >= 0) {
			var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			var v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eeOffset0] - u[eeOffset2];
			var k01_21 = u[eeOffset0 + (-1)] - u[eeOffset2 + (-1)];
			var _g = eeOffset0;
			var _g1 = u;
			_g1[_g] = _g1[_g] + u[eeOffset2];
			var _g2 = eeOffset0 + (-1);
			var _g11 = u;
			_g11[_g2] = _g11[_g2] + u[eeOffset2 + (-1)];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-2)] - u[eeOffset2 + (-2)];
			k01_21 = u[eeOffset0 + (-3)] - u[eeOffset2 + (-3)];
			var _g3 = eeOffset0 + (-2);
			var _g12 = u;
			_g12[_g3] = _g12[_g3] + u[eeOffset2 + (-2)];
			var _g4 = eeOffset0 + (-3);
			var _g13 = u;
			_g13[_g4] = _g13[_g4] + u[eeOffset2 + (-3)];
			u[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-4)] - u[eeOffset2 + (-4)];
			k01_21 = u[eeOffset0 + (-5)] - u[eeOffset2 + (-5)];
			var _g5 = eeOffset0 + (-4);
			var _g14 = u;
			_g14[_g5] = _g14[_g5] + u[eeOffset2 + (-4)];
			var _g6 = eeOffset0 + (-5);
			var _g15 = u;
			_g15[_g6] = _g15[_g6] + u[eeOffset2 + (-5)];
			u[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-6)] - u[eeOffset2 + (-6)];
			k01_21 = u[eeOffset0 + (-7)] - u[eeOffset2 + (-7)];
			var _g7 = eeOffset0 + (-6);
			var _g16 = u;
			_g16[_g7] = _g16[_g7] + u[eeOffset2 + (-6)];
			var _g8 = eeOffset0 + (-7);
			var _g17 = u;
			_g17[_g8] = _g17[_g8] + u[eeOffset2 + (-7)];
			u[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off1 = n2 - 1 - n4;
		var eeOffset01 = i_off1;
		var eeOffset21 = i_off1 + -(n >> 3);
		var aOffset1 = 0;
		var i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			var k00_201 = u[eeOffset01] - u[eeOffset21];
			var k01_211 = u[eeOffset01 + (-1)] - u[eeOffset21 + (-1)];
			var _g9 = eeOffset01;
			var _g18 = u;
			_g18[_g9] = _g18[_g9] + u[eeOffset21];
			var _g10 = eeOffset01 + (-1);
			var _g19 = u;
			_g19[_g10] = _g19[_g10] + u[eeOffset21 + (-1)];
			u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + (-1)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + (-2)] - u[eeOffset21 + (-2)];
			k01_211 = u[eeOffset01 + (-3)] - u[eeOffset21 + (-3)];
			var _g20 = eeOffset01 + (-2);
			var _g110 = u;
			_g110[_g20] = _g110[_g20] + u[eeOffset21 + (-2)];
			var _g21 = eeOffset01 + (-3);
			var _g111 = u;
			_g111[_g21] = _g111[_g21] + u[eeOffset21 + (-3)];
			u[eeOffset21 + (-2)] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + (-3)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + (-4)] - u[eeOffset21 + (-4)];
			k01_211 = u[eeOffset01 + (-5)] - u[eeOffset21 + (-5)];
			var _g22 = eeOffset01 + (-4);
			var _g112 = u;
			_g112[_g22] = _g112[_g22] + u[eeOffset21 + (-4)];
			var _g23 = eeOffset01 + (-5);
			var _g113 = u;
			_g113[_g23] = _g113[_g23] + u[eeOffset21 + (-5)];
			u[eeOffset21 + (-4)] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + (-5)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + (-6)] - u[eeOffset21 + (-6)];
			k01_211 = u[eeOffset01 + (-7)] - u[eeOffset21 + (-7)];
			var _g24 = eeOffset01 + (-6);
			var _g114 = u;
			_g114[_g24] = _g114[_g24] + u[eeOffset21 + (-6)];
			var _g25 = eeOffset01 + (-7);
			var _g115 = u;
			_g115[_g25] = _g115[_g25] + u[eeOffset21 + (-7)];
			u[eeOffset21 + (-6)] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + (-7)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset2 = 0;
		var eOffset01 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			var k00_202 = u[eOffset01] - u[eOffset2];
			var k01_212 = u[eOffset01 + (-1)] - u[eOffset2 + (-1)];
			var _g26 = eOffset01;
			var _g116 = u;
			_g116[_g26] = _g116[_g26] + u[eOffset2];
			var _g27 = eOffset01 + (-1);
			var _g117 = u;
			_g117[_g27] = _g117[_g27] + u[eOffset2 + (-1)];
			u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + (-1)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + (-2)] - u[eOffset2 + (-2)];
			k01_212 = u[eOffset01 + (-3)] - u[eOffset2 + (-3)];
			var _g28 = eOffset01 + (-2);
			var _g118 = u;
			_g118[_g28] = _g118[_g28] + u[eOffset2 + (-2)];
			var _g29 = eOffset01 + (-3);
			var _g119 = u;
			_g119[_g29] = _g119[_g29] + u[eOffset2 + (-3)];
			u[eOffset2 + (-2)] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + (-3)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + (-4)] - u[eOffset2 + (-4)];
			k01_212 = u[eOffset01 + (-5)] - u[eOffset2 + (-5)];
			var _g30 = eOffset01 + (-4);
			var _g120 = u;
			_g120[_g30] = _g120[_g30] + u[eOffset2 + (-4)];
			var _g31 = eOffset01 + (-5);
			var _g121 = u;
			_g121[_g31] = _g121[_g31] + u[eOffset2 + (-5)];
			u[eOffset2 + (-4)] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + (-5)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + (-6)] - u[eOffset2 + (-6)];
			k01_212 = u[eOffset01 + (-7)] - u[eOffset2 + (-7)];
			var _g32 = eOffset01 + (-6);
			var _g122 = u;
			_g122[_g32] = _g122[_g32] + u[eOffset2 + (-6)];
			var _g33 = eOffset01 + (-7);
			var _g123 = u;
			_g123[_g33] = _g123[_g33] + u[eOffset2 + (-7)];
			u[eOffset2 + (-6)] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + (-7)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		var d01 = n2 - 1 - n8;
		var aOffset3 = 0;
		var eOffset02 = d01;
		var eOffset21 = d01 + -(n >> 4);
		var i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			var k00_203 = u[eOffset02] - u[eOffset21];
			var k01_213 = u[eOffset02 + (-1)] - u[eOffset21 + (-1)];
			var _g34 = eOffset02;
			var _g124 = u;
			_g124[_g34] = _g124[_g34] + u[eOffset21];
			var _g35 = eOffset02 + (-1);
			var _g125 = u;
			_g125[_g35] = _g125[_g35] + u[eOffset21 + (-1)];
			u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + (-1)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + (-2)] - u[eOffset21 + (-2)];
			k01_213 = u[eOffset02 + (-3)] - u[eOffset21 + (-3)];
			var _g36 = eOffset02 + (-2);
			var _g126 = u;
			_g126[_g36] = _g126[_g36] + u[eOffset21 + (-2)];
			var _g37 = eOffset02 + (-3);
			var _g127 = u;
			_g127[_g37] = _g127[_g37] + u[eOffset21 + (-3)];
			u[eOffset21 + (-2)] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + (-3)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + (-4)] - u[eOffset21 + (-4)];
			k01_213 = u[eOffset02 + (-5)] - u[eOffset21 + (-5)];
			var _g38 = eOffset02 + (-4);
			var _g128 = u;
			_g128[_g38] = _g128[_g38] + u[eOffset21 + (-4)];
			var _g39 = eOffset02 + (-5);
			var _g129 = u;
			_g129[_g39] = _g129[_g39] + u[eOffset21 + (-5)];
			u[eOffset21 + (-4)] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + (-5)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + (-6)] - u[eOffset21 + (-6)];
			k01_213 = u[eOffset02 + (-7)] - u[eOffset21 + (-7)];
			var _g40 = eOffset02 + (-6);
			var _g130 = u;
			_g130[_g40] = _g130[_g40] + u[eOffset21 + (-6)];
			var _g41 = eOffset02 + (-7);
			var _g131 = u;
			_g131[_g41] = _g131[_g41] + u[eOffset21 + (-7)];
			u[eOffset21 + (-6)] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + (-7)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		var d02 = n2 - 1 - n8 * 2;
		var aOffset4 = 0;
		var eOffset03 = d02;
		var eOffset22 = d02 + -(n >> 4);
		var i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			var k00_204 = u[eOffset03] - u[eOffset22];
			var k01_214 = u[eOffset03 + (-1)] - u[eOffset22 + (-1)];
			var _g42 = eOffset03;
			var _g132 = u;
			_g132[_g42] = _g132[_g42] + u[eOffset22];
			var _g43 = eOffset03 + (-1);
			var _g133 = u;
			_g133[_g43] = _g133[_g43] + u[eOffset22 + (-1)];
			u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + (-1)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + (-2)] - u[eOffset22 + (-2)];
			k01_214 = u[eOffset03 + (-3)] - u[eOffset22 + (-3)];
			var _g44 = eOffset03 + (-2);
			var _g134 = u;
			_g134[_g44] = _g134[_g44] + u[eOffset22 + (-2)];
			var _g45 = eOffset03 + (-3);
			var _g135 = u;
			_g135[_g45] = _g135[_g45] + u[eOffset22 + (-3)];
			u[eOffset22 + (-2)] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + (-3)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + (-4)] - u[eOffset22 + (-4)];
			k01_214 = u[eOffset03 + (-5)] - u[eOffset22 + (-5)];
			var _g46 = eOffset03 + (-4);
			var _g136 = u;
			_g136[_g46] = _g136[_g46] + u[eOffset22 + (-4)];
			var _g47 = eOffset03 + (-5);
			var _g137 = u;
			_g137[_g47] = _g137[_g47] + u[eOffset22 + (-5)];
			u[eOffset22 + (-4)] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + (-5)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + (-6)] - u[eOffset22 + (-6)];
			k01_214 = u[eOffset03 + (-7)] - u[eOffset22 + (-7)];
			var _g48 = eOffset03 + (-6);
			var _g138 = u;
			_g138[_g48] = _g138[_g48] + u[eOffset22 + (-6)];
			var _g49 = eOffset03 + (-7);
			var _g139 = u;
			_g139[_g49] = _g139[_g49] + u[eOffset22 + (-7)];
			u[eOffset22 + (-6)] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + (-7)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		var d03 = n2 - 1 - n8 * 3;
		var aOffset5 = 0;
		var eOffset04 = d03;
		var eOffset23 = d03 + -(n >> 4);
		var i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			var k00_205 = u[eOffset04] - u[eOffset23];
			var k01_215 = u[eOffset04 + (-1)] - u[eOffset23 + (-1)];
			var _g50 = eOffset04;
			var _g140 = u;
			_g140[_g50] = _g140[_g50] + u[eOffset23];
			var _g51 = eOffset04 + (-1);
			var _g141 = u;
			_g141[_g51] = _g141[_g51] + u[eOffset23 + (-1)];
			u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + (-1)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + (-2)] - u[eOffset23 + (-2)];
			k01_215 = u[eOffset04 + (-3)] - u[eOffset23 + (-3)];
			var _g52 = eOffset04 + (-2);
			var _g142 = u;
			_g142[_g52] = _g142[_g52] + u[eOffset23 + (-2)];
			var _g53 = eOffset04 + (-3);
			var _g143 = u;
			_g143[_g53] = _g143[_g53] + u[eOffset23 + (-3)];
			u[eOffset23 + (-2)] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + (-3)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + (-4)] - u[eOffset23 + (-4)];
			k01_215 = u[eOffset04 + (-5)] - u[eOffset23 + (-5)];
			var _g54 = eOffset04 + (-4);
			var _g144 = u;
			_g144[_g54] = _g144[_g54] + u[eOffset23 + (-4)];
			var _g55 = eOffset04 + (-5);
			var _g145 = u;
			_g145[_g55] = _g145[_g55] + u[eOffset23 + (-5)];
			u[eOffset23 + (-4)] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + (-5)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + (-6)] - u[eOffset23 + (-6)];
			k01_215 = u[eOffset04 + (-7)] - u[eOffset23 + (-7)];
			var _g56 = eOffset04 + (-6);
			var _g146 = u;
			_g146[_g56] = _g146[_g56] + u[eOffset23 + (-6)];
			var _g57 = eOffset04 + (-7);
			var _g147 = u;
			_g147[_g57] = _g147[_g57] + u[eOffset23 + (-7)];
			u[eOffset23 + (-6)] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + (-7)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		var _g58 = 2;
		var _g148 = ld - 3 >> 1;
		while(_g58 < _g148) {
			var l = _g58++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var _g59 = 0;
			var _g149 = lim;
			while(_g59 < _g149) {
				var i6 = _g59++;
				var d04 = n2 - 1 - k0 * i6;
				var k1 = 1 << l + 3;
				var aOffset6 = 0;
				var eOffset05 = d04;
				var eOffset24 = d04 + -k0_2;
				var i7 = (n >> l + 4 >> 2) + 1;
				while(--i7 > 0) {
					var k00_206 = u[eOffset05] - u[eOffset24];
					var k01_216 = u[eOffset05 + (-1)] - u[eOffset24 + (-1)];
					var _g60 = eOffset05;
					var _g150 = u;
					_g150[_g60] = _g150[_g60] + u[eOffset24];
					var _g61 = eOffset05 + (-1);
					var _g151 = u;
					_g151[_g61] = _g151[_g61] + u[eOffset24 + (-1)];
					u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + (-1)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + (-2)] - u[eOffset24 + (-2)];
					k01_216 = u[eOffset05 + (-3)] - u[eOffset24 + (-3)];
					var _g62 = eOffset05 + (-2);
					var _g152 = u;
					_g152[_g62] = _g152[_g62] + u[eOffset24 + (-2)];
					var _g63 = eOffset05 + (-3);
					var _g153 = u;
					_g153[_g63] = _g153[_g63] + u[eOffset24 + (-3)];
					u[eOffset24 + (-2)] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + (-3)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + (-4)] - u[eOffset24 + (-4)];
					k01_216 = u[eOffset05 + (-5)] - u[eOffset24 + (-5)];
					var _g64 = eOffset05 + (-4);
					var _g154 = u;
					_g154[_g64] = _g154[_g64] + u[eOffset24 + (-4)];
					var _g65 = eOffset05 + (-5);
					var _g155 = u;
					_g155[_g65] = _g155[_g65] + u[eOffset24 + (-5)];
					u[eOffset24 + (-4)] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + (-5)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + (-6)] - u[eOffset24 + (-6)];
					k01_216 = u[eOffset05 + (-7)] - u[eOffset24 + (-7)];
					var _g66 = eOffset05 + (-6);
					var _g156 = u;
					_g156[_g66] = _g156[_g66] + u[eOffset24 + (-6)];
					var _g67 = eOffset05 + (-7);
					var _g157 = u;
					_g157[_g67] = _g157[_g67] + u[eOffset24 + (-7)];
					u[eOffset24 + (-6)] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + (-7)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					eOffset05 -= 8;
					eOffset24 -= 8;
					aOffset6 += k1;
				}
			}
		}
		var _g210 = ld - 3 >> 1;
		var _g310 = ld - 6;
		while(_g210 < _g310) {
			var l1 = _g210++;
			var k01 = n >> l1 + 2;
			var k11 = 1 << l1 + 3;
			var k0_21 = k01 >> 1;
			var rlim = n >> l1 + 6;
			var lim1 = 1 << l1 + 1;
			var aOffset7 = 0;
			var i_off2 = n2 - 1;
			var r = rlim + 1;
			while(--r > 0) {
				var A0 = a[aOffset7];
				var A1 = a[aOffset7 + 1];
				var A2 = a[aOffset7 + k11];
				var A3 = a[aOffset7 + k11 + 1];
				var A4 = a[aOffset7 + k11 * 2];
				var A5 = a[aOffset7 + k11 * 2 + 1];
				var A6 = a[aOffset7 + k11 * 3];
				var A7 = a[aOffset7 + k11 * 3 + 1];
				var eeOffset02 = i_off2;
				var eeOffset22 = i_off2 + -k0_21;
				var i8 = lim1 + 1;
				while(--i8 > 0) {
					var k00 = u[eeOffset02] - u[eeOffset22];
					var k111 = u[eeOffset02 + (-1)] - u[eeOffset22 + (-1)];
					u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
					u[eeOffset02 + (-1)] = u[eeOffset02 + (-1)] + u[eeOffset22 + (-1)];
					u[eeOffset22] = k00 * A0 - k111 * A1;
					u[eeOffset22 + (-1)] = k111 * A0 + k00 * A1;
					k00 = u[eeOffset02 + (-2)] - u[eeOffset22 + (-2)];
					k111 = u[eeOffset02 + (-3)] - u[eeOffset22 + (-3)];
					u[eeOffset02 + (-2)] = u[eeOffset02 + (-2)] + u[eeOffset22 + (-2)];
					u[eeOffset02 + (-3)] = u[eeOffset02 + (-3)] + u[eeOffset22 + (-3)];
					u[eeOffset22 + (-2)] = k00 * A2 - k111 * A3;
					u[eeOffset22 + (-3)] = k111 * A2 + k00 * A3;
					k00 = u[eeOffset02 + (-4)] - u[eeOffset22 + (-4)];
					k111 = u[eeOffset02 + (-5)] - u[eeOffset22 + (-5)];
					u[eeOffset02 + (-4)] = u[eeOffset02 + (-4)] + u[eeOffset22 + (-4)];
					u[eeOffset02 + (-5)] = u[eeOffset02 + (-5)] + u[eeOffset22 + (-5)];
					u[eeOffset22 + (-4)] = k00 * A4 - k111 * A5;
					u[eeOffset22 + (-5)] = k111 * A4 + k00 * A5;
					k00 = u[eeOffset02 + (-6)] - u[eeOffset22 + (-6)];
					k111 = u[eeOffset02 + (-7)] - u[eeOffset22 + (-7)];
					u[eeOffset02 + (-6)] = u[eeOffset02 + (-6)] + u[eeOffset22 + (-6)];
					u[eeOffset02 + (-7)] = u[eeOffset02 + (-7)] + u[eeOffset22 + (-7)];
					u[eeOffset22 + (-6)] = k00 * A6 - k111 * A7;
					u[eeOffset22 + (-7)] = k111 * A6 + k00 * A7;
					eeOffset02 -= k01;
					eeOffset22 -= k01;
				}
				aOffset7 += k11 * 4;
				i_off2 -= 8;
			}
		}
		var i_off3 = n2 - 1;
		var A21 = a[n >> 3];
		var zOffset = i_off3;
		var baseOffset = i_off3 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = u[zOffset];
			var t1 = u[zOffset + (-8)];
			u[zOffset + (-8)] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + (-1)];
			t1 = u[zOffset + (-9)];
			u[zOffset + (-9)] = t0 - t1;
			u[zOffset + (-1)] = t0 + t1;
			t0 = u[zOffset + (-2)];
			t1 = u[zOffset + (-10)];
			var k001 = t0 - t1;
			u[zOffset + (-2)] = t0 + t1;
			t0 = u[zOffset + (-3)];
			t1 = u[zOffset + (-11)];
			var k112 = t0 - t1;
			u[zOffset + (-3)] = t0 + t1;
			u[zOffset + (-10)] = (k001 + k112) * A21;
			u[zOffset + (-11)] = (k112 - k001) * A21;
			t0 = u[zOffset + (-4)];
			t1 = u[zOffset + (-12)];
			k001 = t1 - t0;
			u[zOffset + (-4)] = t0 + t1;
			t0 = u[zOffset + (-5)];
			t1 = u[zOffset + (-13)];
			k112 = t0 - t1;
			u[zOffset + (-5)] = t0 + t1;
			u[zOffset + (-12)] = k112;
			u[zOffset + (-13)] = k001;
			t0 = u[zOffset + (-6)];
			t1 = u[zOffset + (-14)];
			k001 = t1 - t0;
			u[zOffset + (-6)] = t0 + t1;
			t0 = u[zOffset + (-7)];
			t1 = u[zOffset + (-15)];
			k112 = t0 - t1;
			u[zOffset + (-7)] = t0 + t1;
			u[zOffset + (-14)] = (k001 + k112) * A21;
			u[zOffset + (-15)] = (k001 - k112) * A21;
			var t01 = u[zOffset];
			var t11 = u[zOffset + (-4)];
			var k002 = t01 - t11;
			var y0 = t01 + t11;
			t01 = u[zOffset + (-2)];
			t11 = u[zOffset + (-6)];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + (-2)] = y0 - y2;
			var k33 = u[zOffset + (-3)] - u[zOffset + (-7)];
			u[zOffset + (-4)] = k002 + k33;
			u[zOffset + (-6)] = k002 - k33;
			t01 = u[zOffset + (-1)];
			t11 = u[zOffset + (-5)];
			var k113 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = u[zOffset + (-3)] + u[zOffset + (-7)];
			u[zOffset + (-1)] = y1 + y3;
			u[zOffset + (-3)] = y1 - y3;
			u[zOffset + (-5)] = k113 - k22;
			u[zOffset + (-7)] = k113 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = u[zOffset1];
			var t12 = u[zOffset1 + (-4)];
			var k003 = t02 - t12;
			var y01 = t02 + t12;
			t02 = u[zOffset1 + (-2)];
			t12 = u[zOffset1 + (-6)];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + (-2)] = y01 - y21;
			var k331 = u[zOffset1 + (-3)] - u[zOffset1 + (-7)];
			u[zOffset1 + (-4)] = k003 + k331;
			u[zOffset1 + (-6)] = k003 - k331;
			t02 = u[zOffset1 + (-1)];
			t12 = u[zOffset1 + (-5)];
			var k114 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = u[zOffset1 + (-3)] + u[zOffset1 + (-7)];
			u[zOffset1 + (-1)] = y11 + y31;
			u[zOffset1 + (-3)] = y11 - y31;
			u[zOffset1 + (-5)] = k114 - k221;
			u[zOffset1 + (-7)] = k114 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset01 = n4 - 4;
		var dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			var k4 = bitReverse[brOffset];
			v[dOffset11 + 3] = u[k4];
			v[dOffset11 + 2] = u[k4 + 1];
			v[dOffset01 + 3] = u[k4 + 2];
			v[dOffset01 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset11 + 1] = u[k4];
			v[dOffset11] = u[k4 + 1];
			v[dOffset01 + 1] = u[k4 + 2];
			v[dOffset01] = u[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset2 = 0;
		var eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			var a02 = v[dOffset2] - v[eOffset3 + 2];
			var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = v[dOffset2] + v[eOffset3 + 2];
			var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
			v[dOffset2] = b2 + b0;
			v[dOffset2 + 1] = b3 + b1;
			v[eOffset3 + 2] = b2 - b0;
			v[eOffset3 + 3] = b1 - b3;
			a02 = v[dOffset2 + 2] - v[eOffset3];
			a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset2 + 2] + v[eOffset3];
			b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
			v[dOffset2 + 2] = b2 + b0;
			v[dOffset2 + 3] = b3 + b1;
			v[eOffset3] = b2 - b0;
			v[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset4 = n2 - 8;
		var dOffset02 = 0;
		var dOffset12 = n2 - 4;
		var dOffset21 = n2;
		var dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		var rest = this.decodePacketRest(result);
		return rest;
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			if(this.decodeState.readBits(1) != 0) {
				while(true) {
					var _this = this.decodeState;
					var x;
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						x = -1;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						x = _this.input.readByte();
					}
					_this.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var i = this.decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
		if(i == -1 || i >= this.header.modes.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n1;
		var prev;
		var next;
		if(m.blockflag) {
			n1 = this.header.blocksize1;
			prev = this.decodeState.readBits(1);
			next = this.decodeState.readBits(1);
		} else {
			next = 0;
			prev = next;
			n1 = this.header.blocksize0;
		}
		var windowCenter = n1 >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n1 - this.header.blocksize0 >> 2, end : n1 + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n1 * 3 - this.header.blocksize0 >> 2, end : n1 * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n1}};
	}
	,decodePacketRest: function(r) {
		var len = 0;
		var m = this.header.modes[r.mode];
		var this1 = new Array(256);
		var zeroChannel = this1;
		var this2 = new Array(256);
		var reallyZeroChannel = this2;
		var n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				if(this.decodeState.readBits(1) != 0) {
					var fy = [];
					var this3 = new Array(256);
					var step2Flag = this3;
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[0] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1);
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[1] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1);
					var _g2 = 0;
					var _g11 = g.partitions;
					while(_g2 < _g11) {
						var j = _g2++;
						var pclass = g.partitionClassList[j];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this = this.decodeState;
							if(_this.validBits < 10) {
								_this.prepHuffman();
							}
							var i1 = c.fastHuffman[_this.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this.acc = _this.acc >>> l;
								_this.validBits -= l;
								if(_this.validBits < 0) {
									_this.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g3 = 0;
						var _g12 = cdim;
						while(_g3 < _g12) {
							var k = _g3++;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp = offset++;
							var tmp1;
							if(book >= 0) {
								var _this1 = this.decodeState;
								var c1 = codebooks[book];
								if(_this1.validBits < 10) {
									_this1.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this1.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this1.acc = _this1.acc >>> l1;
									_this1.validBits -= l1;
									if(_this1.validBits < 0) {
										_this1.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this1.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp1 = val1;
							} else {
								tmp1 = 0;
							}
							fy[tmp] = tmp1;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[0] = step2Flag[1] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g21 = 2;
					var _g31 = g.values;
					while(_g21 < _g31) {
						var j1 = _g21++;
						var low = naighbors[j1][0];
						var high = naighbors[j1][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var adx = xlist[high] - x0;
						var err = Math.abs(dy) * (xlist[j1] - x0);
						var off = err / adx | 0;
						var lowroom = dy < 0 ? y0 - off : y0 + off;
						var val2 = fy[j1];
						var highroom = range - lowroom;
						var room = highroom < lowroom ? highroom * 2 : lowroom * 2;
						if(val2 != 0) {
							step2Flag[low] = step2Flag[high] = true;
							step2Flag[j1] = true;
							if(val2 >= room) {
								if(highroom > lowroom) {
									fy[j1] = val2 - lowroom + lowroom;
								} else {
									fy[j1] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j1] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j1] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j1] = false;
							fy[j1] = lowroom;
						}
					}
					var _g4 = 0;
					var _g5 = g.values;
					while(_g4 < _g5) {
						var j2 = _g4++;
						if(!step2Flag[j2]) {
							fy[j2] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g22 = 0;
		var _g32 = this.header.channel;
		while(_g22 < _g32) {
			var i3 = _g22++;
			reallyZeroChannel[i3] = zeroChannel[i3];
		}
		var _g41 = 0;
		var _g51 = map.couplingSteps;
		while(_g41 < _g51) {
			var i4 = _g41++;
			if(!zeroChannel[map.chan[i4].magnitude] || !zeroChannel[map.chan[i4].angle]) {
				zeroChannel[map.chan[i4].magnitude] = zeroChannel[map.chan[i4].angle] = false;
			}
		}
		var _g6 = 0;
		var _g7 = map.submaps;
		while(_g6 < _g7) {
			var i5 = _g6++;
			var this4 = new Array(this.header.channel);
			var residueBuffers = this4;
			var this5 = new Array(256);
			var doNotDecode = this5;
			var ch = 0;
			var _g61 = 0;
			var _g71 = this.header.channel;
			while(_g61 < _g71) {
				var j3 = _g61++;
				if(map.chan[j3].mux == i5) {
					if(zeroChannel[j3]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j3];
					}
					++ch;
				}
			}
			var r1 = map.submapResidue[i5];
			var residue = this.header.residueConfig[r1];
			residue.decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i6 = map.couplingSteps;
		var n21 = n >> 1;
		while(--i6 >= 0) {
			var m1 = this.channelBuffers[map.chan[i6].magnitude];
			var a = this.channelBuffers[map.chan[i6].angle];
			var _g8 = 0;
			var _g9 = n21;
			while(_g8 < _g9) {
				var j4 = _g8++;
				var a2;
				var m2;
				if(m1[j4] > 0) {
					if(a[j4] > 0) {
						m2 = m1[j4];
						a2 = m1[j4] - a[j4];
					} else {
						a2 = m1[j4];
						m2 = m1[j4] + a[j4];
					}
				} else if(a[j4] > 0) {
					m2 = m1[j4];
					a2 = m1[j4] + a[j4];
				} else {
					a2 = m1[j4];
					m2 = m1[j4] - a[j4];
				}
				m1[j4] = m2;
				a[j4] = a2;
			}
		}
		var _g81 = 0;
		var _g91 = this.header.channel;
		while(_g81 < _g91) {
			var i7 = _g81++;
			if(reallyZeroChannel[i7]) {
				var _g82 = 0;
				var _g92 = n21;
				while(_g82 < _g92) {
					var j5 = _g82++;
					this.channelBuffers[i7][j5] = 0;
				}
			} else {
				map.doFloor(this.header.floorConfig,i7,n,this.channelBuffers[i7],this.finalY[i7],null);
			}
		}
		var _g10 = 0;
		var _g111 = this.header.channel;
		while(_g10 < _g111) {
			var i8 = _g10++;
			this.inverseMdct(this.channelBuffers[i8],n,m.blockflag);
		}
		var _this2 = this.decodeState;
		while(_this2.bytesInSeg != 0 || !_this2.lastSeg && _this2.next() != 0) {
			_this2.bytesInSeg--;
			_this2.inputPosition += 1;
			_this2.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = true;
kha_audio2_ogg_vorbis_VorbisTools.assert = function(b,p) {
};
kha_audio2_ogg_vorbis_VorbisTools.neighbors = function(x,n) {
	var low = -1;
	var high = 65536;
	var plow = 0;
	var phigh = 0;
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		if(x[i] > low && x[i] < x[n]) {
			plow = i;
			low = x[i];
		}
		if(x[i] < high && x[i] > x[n]) {
			phigh = i;
			high = x[i];
		}
	}
	return { low : plow, high : phigh};
};
kha_audio2_ogg_vorbis_VorbisTools.floatUnpack = function(x) {
	var mantissa = _$UInt_UInt_$Impl_$.toFloat(x & 2097151);
	var sign = x & -2147483648;
	var exp = (x & 2145386496) >>> 21;
	var res = sign != 0 ? -mantissa : mantissa;
	return res * Math.pow(2,exp - 788);
};
kha_audio2_ogg_vorbis_VorbisTools.bitReverse = function(n) {
	n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
	n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
	n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
	n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
	return n >>> 16 | n << 16;
};
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(_$UInt_UInt_$Impl_$.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,$window) {
	var n2 = n >> 1;
	var _g = 0;
	var _g1 = n2;
	while(_g < _g1) {
		var i = _g++;
		$window[i] = Math.sin(1.5707963267948966 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var n8 = n >> 3;
	var _g = 0;
	var _g1 = n8;
	while(_g < _g1) {
		var i = _g++;
		var n1 = i;
		n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
		n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
		n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
		n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
		rev[i] = (n1 >>> 16 | n1 << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g = 0;
	var _g1 = n4;
	while(_g < _g1) {
		var k = _g++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k21 = 0;
	var _g2 = 0;
	var _g3 = n8;
	while(_g2 < _g3) {
		var k1 = _g2++;
		cf[k21] = Math.cos(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		cf[k21 + 1] = -Math.sin(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		k21 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		var this1 = new Array(32);
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = this1;
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			var this2 = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable;
			var this3 = new Array(64);
			this2[i] = this3;
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0 ? -dy : dy;
	var base;
	var x = x0;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		sy = dy < 0 ? base - 1 : base + 1;
	}
	ady -= (base < 0 ? -base : base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	var _g2 = x;
	var _g11 = output;
	_g11[_g2] = _g11[_g2] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	var _g3 = x + 1;
	var _g12 = x1;
	while(_g3 < _g12) {
		var i1 = _g3++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		var _g4 = i1;
		var _g13 = output;
		_g13[_g4] = _g13[_g4] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
kha_audio2_ogg_vorbis_VorbisTools.predictPoint = function(x,x0,x1,y0,y1) {
	var dy = y1 - y0;
	var adx = x1 - x0;
	var err = Math.abs(dy) * (x - x0);
	var off = err / adx | 0;
	if(dy < 0) {
		return y0 - off;
	} else {
		return y0 + off;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.emptyFloatVector = function(len) {
	var this1 = new Array(len);
	var vec = this1;
	return vec;
};
kha_audio2_ogg_vorbis_VorbisTools.copyVector = function(source) {
	var this1 = new Array(source.length);
	var dest = this1;
	var _g = 0;
	var _g1 = source.length;
	while(_g < _g1) {
		var i = _g++;
		dest[i] = source[i];
	}
	return dest;
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = true;
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	if(decodeState.readBits(8) != 66 || decodeState.readBits(8) != 67 || decodeState.readBits(8) != 86) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x = decodeState.readBits(8);
	c.dimensions = (decodeState.readBits(8) << 8) + x;
	var x1 = decodeState.readBits(8);
	var y = decodeState.readBits(8);
	c.entries = (decodeState.readBits(8) << 16) + (y << 8) + x1;
	var ordered = decodeState.readBits(1);
	c.sparse = ordered != 0 ? false : decodeState.readBits(1) != 0;
	var this1 = new Array(c.entries);
	var lengths = this1;
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var currentLength = decodeState.readBits(5) + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = decodeState.readBits(limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0);
			if(currentEntry + n > c.entries) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				lengths[currentEntry + i] = currentLength;
			}
			currentEntry += n;
			++currentLength;
		}
	} else {
		var _g2 = 0;
		var _g11 = c.entries;
		while(_g2 < _g11) {
			var j = _g2++;
			var present = c.sparse ? decodeState.readBits(1) : 1;
			if(present != 0) {
				lengths[j] = decodeState.readBits(5) + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp;
	if(c.sparse) {
		tmp = total;
	} else {
		var sortedCount = 0;
		var _g3 = 0;
		var _g12 = c.entries;
		while(_g3 < _g12) {
			var j1 = _g3++;
			var l = lengths[j1];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp = sortedCount;
	}
	c.sortedEntries = tmp;
	var values = null;
	if(!c.sparse) {
		var this2 = new Array(c.entries);
		c.codewords = this2;
	} else {
		if(c.sortedEntries != 0) {
			var this3 = new Array(c.sortedEntries);
			c.codewordLengths = this3;
			var this4 = new Array(c.entries);
			c.codewords = this4;
			var this5 = new Array(c.entries);
			values = this5;
		}
		var size = c.entries + 64 * c.sortedEntries;
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		var this6 = new Array(c.sortedEntries);
		c.sortedValues = this6;
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		values = null;
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	c.lookupType = decodeState.readBits(4);
	if(c.lookupType > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x2 = decodeState.readBits(32);
		var mantissa = _$UInt_UInt_$Impl_$.toFloat(x2 & 2097151);
		var sign = x2 & -2147483648;
		var exp = (x2 & 2145386496) >>> 21;
		var res = sign != 0 ? -mantissa : mantissa;
		c.minimumValue = res * Math.pow(2,exp - 788);
		var x3 = decodeState.readBits(32);
		var mantissa1 = _$UInt_UInt_$Impl_$.toFloat(x3 & 2097151);
		var sign1 = x3 & -2147483648;
		var exp1 = (x3 & 2145386496) >>> 21;
		var res1 = sign1 != 0 ? -mantissa1 : mantissa1;
		c.deltaValue = res1 * Math.pow(2,exp1 - 788);
		c.valueBits = decodeState.readBits(4) + 1;
		c.sequenceP = decodeState.readBits(1) != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var this7 = new Array(c.lookupValues);
		var mults = this7;
		var _g4 = 0;
		var _g13 = c.lookupValues;
		while(_g4 < _g13) {
			var j2 = _g4++;
			var q = decodeState.readBits(c.valueBits);
			if(q == -1) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j2] = q;
		}
		var this8 = new Array(c.lookupValues);
		c.multiplicands = this8;
		var _g21 = 0;
		var _g31 = c.lookupValues;
		while(_g21 < _g31) {
			var j3 = _g21++;
			c.multiplicands[j3] = mults[j3] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g22 = 1;
			var _g32 = c.lookupValues;
			while(_g22 < _g32) {
				var j4 = _g22++;
				c.multiplicands[j4] = c.multiplicands[j4 - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	dimensions: null
	,entries: null
	,codewordLengths: null
	,minimumValue: null
	,deltaValue: null
	,valueBits: null
	,lookupType: null
	,sequenceP: null
	,sparse: null
	,lookupValues: null
	,multiplicands: null
	,codewords: null
	,fastHuffman: null
	,sortedCodewords: null
	,sortedValues: null
	,sortedEntries: null
	,addEntry: function(huffCode,symbol,count,len,values) {
		if(!this.sparse) {
			this.codewords[symbol] = huffCode;
		} else {
			this.codewords[count] = huffCode;
			this.codewordLengths[count] = len;
			values[count] = symbol;
		}
	}
	,includeInSort: function(len) {
		if(this.sparse) {
			return true;
		} else if(len == 255) {
			return false;
		} else if(len > 10) {
			return true;
		} else {
			return false;
		}
	}
	,computeCodewords: function(len,n,values) {
		var this1 = new Array(32);
		var available = this1;
		available[0] = 0;
		available[1] = 0;
		available[2] = 0;
		available[3] = 0;
		available[4] = 0;
		available[5] = 0;
		available[6] = 0;
		available[7] = 0;
		available[8] = 0;
		available[9] = 0;
		available[10] = 0;
		available[11] = 0;
		available[12] = 0;
		available[13] = 0;
		available[14] = 0;
		available[15] = 0;
		available[16] = 0;
		available[17] = 0;
		available[18] = 0;
		available[19] = 0;
		available[20] = 0;
		available[21] = 0;
		available[22] = 0;
		available[23] = 0;
		available[24] = 0;
		available[25] = 0;
		available[26] = 0;
		available[27] = 0;
		available[28] = 0;
		available[29] = 0;
		available[30] = 0;
		available[31] = 0;
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			return true;
		}
		var m = 0;
		var count = m++;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[count] = 0;
			this.codewordLengths[count] = len[k];
			values[count] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count1 = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count1] = huffCode;
				this.codewordLengths[count1] = len[i];
				values[count1] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g = 0;
			var _g1 = this.entries;
			while(_g < _g1) {
				var i = _g++;
				var len = lengths[i];
				if(this.sparse ? true : len == 255 ? false : len > 10) {
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
		} else {
			var _g2 = 0;
			var _g11 = this.sortedEntries;
			while(_g2 < _g11) {
				var i1 = _g2++;
				var n1 = this.codewords[i1];
				n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
				n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
				n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
				n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
				this.sortedCodewords[i1] = n1 >>> 16 | n1 << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var len1 = this.sparse ? this.sortedEntries : this.entries;
		var _g3 = 0;
		var _g12 = len1;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var huffLen = this.sparse ? lengths[values[i2]] : lengths[i2];
			if(this.sparse ? true : huffLen == 255 ? false : huffLen > 10) {
				var n2 = this.codewords[i2];
				n2 = (n2 & -1431655766) >>> 1 | (n2 & 1431655765) << 1;
				n2 = (n2 & -858993460) >>> 2 | (n2 & 858993459) << 2;
				n2 = (n2 & -252645136) >>> 4 | (n2 & 252645135) << 4;
				n2 = (n2 & -16711936) >>> 8 | (n2 & 16711935) << 8;
				var code = n2 >>> 16 | n2 << 16;
				var x = 0;
				var n3 = this.sortedEntries;
				while(n3 > 1) {
					var m = x + (n3 >> 1);
					if(_$UInt_UInt_$Impl_$.gte(code,this.sortedCodewords[m])) {
						x = m;
						n3 -= n3 >> 1;
					} else {
						n3 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i2];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i2;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		var this1 = new Array(1024);
		this.fastHuffman = this1;
		this.fastHuffman[0] = -1;
		var _g = 0;
		var _g1 = 1024;
		while(_g < _g1) {
			var i = _g++;
			this.fastHuffman[i] = -1;
		}
		var len = this.sparse ? this.sortedEntries : this.entries;
		var _g2 = 0;
		var _g3 = len;
		while(_g2 < _g3) {
			var i1 = _g2++;
			if(this.codewordLengths[i1] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i1];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i1];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i1;
					z += 1 << this.codewordLengths[i1];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i1 = _g++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1;
				var _g11 = output;
				_g11[_g2] = _g11[_g2] + val1;
				if(sequenceP) {
					last = val1 + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last1 = 0.0;
			var _g3 = 0;
			var _g12 = len;
			while(_g3 < _g12) {
				var i2 = _g3++;
				var val2 = multiplicands[z + i2] + last1;
				var _g4 = offset + i2;
				var _g13 = output;
				_g13[_g4] = _g13[_g4] + val2;
				last1 = val2 + minimumValue;
			}
		} else {
			var last2 = 0.0;
			var _g5 = 0;
			var _g14 = len;
			while(_g5 < _g14) {
				var i3 = _g5++;
				var _g6 = offset + i3;
				var _g15 = output;
				_g15[_g6] = _g15[_g6] + (multiplicands[z + i3] + last2);
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i1 = _g++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1 * step;
				var _g11 = output;
				_g11[_g2] = _g11[_g2] + val1;
				if(sequenceP) {
					last = val1;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g3 = 0;
		var _g12 = len;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var val2 = multiplicands[z + i2] + last;
			var _g4 = offset + i2 * step;
			var _g13 = output;
			_g13[_g4] = _g13[_g4] + val2;
			if(sequenceP) {
				last = val2;
			}
		}
		return true;
	}
	,decodeStart: function(decodeState) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		return val;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g = 0;
					var _g1 = effective;
					while(_g < _g1) {
						var i1 = _g++;
						var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val1 = multiplicands[off] + last;
						var _g2 = pInter;
						var _g11 = residueBuffers[cInter];
						_g11[_g2] = _g11[_g2] + val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g3 = 0;
					var _g12 = effective;
					while(_g3 < _g12) {
						var i2 = _g3++;
						var off1 = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val2 = multiplicands[off1] + last;
						var _g4 = pInter;
						var _g13 = residueBuffers[cInter];
						_g13[_g4] = _g13[_g4] + val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g5 = 0;
					var _g14 = effective;
					while(_g5 < _g14) {
						var i3 = _g5++;
						var val3 = multiplicands[z + i3] + last;
						var _g6 = pInter;
						var _g15 = residueBuffers[cInter];
						_g15[_g6] = _g15[_g6] + val3;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val3;
					}
				} else {
					var _g7 = 0;
					var _g16 = effective;
					while(_g7 < _g16) {
						var i4 = _g7++;
						var val4 = multiplicands[z + i4] + last;
						var _g8 = pInter;
						var _g17 = residueBuffers[cInter];
						_g17[_g8] = _g17[_g8] + val4;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g = 0;
			var _g1 = step;
			while(_g < _g1) {
				var k = _g++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k1 = 0;
			while(k1 < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k1)) {
					return false;
				}
				k1 += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = true;
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	data: null
	,get_title: function() {
		return this.getString("title");
	}
	,get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,get_version: function() {
		return this.getString("version");
	}
	,get_album: function() {
		return this.getString("album");
	}
	,get_organization: function() {
		return this.getString("organization");
	}
	,get_tracknumber: function() {
		return this.getString("tracknumber");
	}
	,get_performer: function() {
		return this.getString("performer");
	}
	,get_copyright: function() {
		return this.getString("copyright");
	}
	,get_license: function() {
		return this.getString("license");
	}
	,get_artist: function() {
		return this.getString("artist");
	}
	,get_description: function() {
		return this.getString("description");
	}
	,get_genre: function() {
		return this.getString("genre");
	}
	,get_date: function() {
		return this.getString("date");
	}
	,get_location: function() {
		return this.getString("location");
	}
	,get_contact: function() {
		return this.getString("contact");
	}
	,get_isrc: function() {
		return this.getString("isrc");
	}
	,get_artists: function() {
		return this.getArray("artist");
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			(__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).push(value);
		} else {
			var v = [value];
			var _this2 = this.data;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,v);
			} else {
				_this2.h[key] = v;
			}
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			return (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key])[0];
		} else {
			return null;
		}
	}
	,getArray: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			if(__map_reserved[key] != null) {
				return _this1.getReserved(key);
			} else {
				return _this1.h[key];
			}
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = true;
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	floor.type = decodeState.readBits(16);
	if(floor.type > 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		g.order = decodeState.readBits(8);
		g.rate = decodeState.readBits(16);
		g.barkMapSize = decodeState.readBits(16);
		g.amplitudeBits = decodeState.readBits(6);
		g.amplitudeOffset = decodeState.readBits(8);
		g.numberOfBooks = decodeState.readBits(4) + 1;
		var _g = 0;
		var _g1 = g.numberOfBooks;
		while(_g < _g1) {
			var j = _g++;
			g.bookList[j] = decodeState.readBits(8);
		}
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g1 = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		g1.partitions = decodeState.readBits(5);
		var this1 = new Array(g1.partitions);
		g1.partitionClassList = this1;
		var _g2 = 0;
		var _g11 = g1.partitions;
		while(_g2 < _g11) {
			var j1 = _g2++;
			g1.partitionClassList[j1] = decodeState.readBits(4);
			if(g1.partitionClassList[j1] > maxClass) {
				maxClass = g1.partitionClassList[j1];
			}
		}
		var this2 = new Array(maxClass + 1);
		g1.classDimensions = this2;
		var this3 = new Array(maxClass + 1);
		g1.classMasterbooks = this3;
		var this4 = new Array(maxClass + 1);
		g1.classSubclasses = this4;
		var this5 = new Array(maxClass + 1);
		g1.subclassBooks = this5;
		var _g21 = 0;
		var _g3 = maxClass + 1;
		while(_g21 < _g3) {
			var j2 = _g21++;
			g1.classDimensions[j2] = decodeState.readBits(3) + 1;
			g1.classSubclasses[j2] = decodeState.readBits(2);
			if(g1.classSubclasses[j2] != 0) {
				g1.classMasterbooks[j2] = decodeState.readBits(8);
				if(g1.classMasterbooks[j2] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g1.classSubclasses[j2];
			var this6 = g1.subclassBooks;
			var this7 = new Array(kl);
			this6[j2] = this7;
			var _g22 = 0;
			var _g31 = kl;
			while(_g22 < _g31) {
				var k = _g22++;
				g1.subclassBooks[j2][k] = decodeState.readBits(8) - 1;
				if(g1.subclassBooks[j2][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		g1.floor1Multiplier = decodeState.readBits(2) + 1;
		g1.rangebits = decodeState.readBits(4);
		var this8 = new Array(250);
		g1.xlist = this8;
		g1.xlist[0] = 0;
		g1.xlist[1] = 1 << g1.rangebits;
		g1.values = 2;
		var _g4 = 0;
		var _g5 = g1.partitions;
		while(_g4 < _g5) {
			var j3 = _g4++;
			var c = g1.partitionClassList[j3];
			var _g41 = 0;
			var _g51 = g1.classDimensions[c];
			while(_g41 < _g51) {
				var k1 = _g41++;
				g1.xlist[g1.values] = decodeState.readBits(g1.rangebits);
				g1.values++;
			}
		}
		var _g6 = 0;
		var _g7 = g1.values;
		while(_g6 < _g7) {
			var j4 = _g6++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j4].x = g1.xlist[j4];
			p[j4].y = j4;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		var this9 = new Array(g1.values);
		g1.sortedOrder = this9;
		var _g8 = 0;
		var _g9 = g1.values;
		while(_g8 < _g9) {
			var j5 = _g8++;
			g1.sortedOrder[j5] = p[j5].y;
		}
		var this10 = new Array(g1.values);
		g1.neighbors = this10;
		var _g10 = 2;
		var _g111 = g1.values;
		while(_g10 < _g111) {
			var j6 = _g10++;
			var x = g1.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g12 = 0;
			var _g13 = j6;
			while(_g12 < _g13) {
				var i = _g12++;
				if(x[i] > low && x[i] < x[j6]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j6]) {
					phigh = i;
					high = x[i];
				}
			}
			var ne_low = plow;
			var ne_high = phigh;
			var this11 = g1.neighbors;
			var this12 = new Array(g1.values);
			this11[j6] = this12;
			g1.neighbors[j6][0] = ne_low;
			g1.neighbors[j6][1] = ne_high;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	floor0: null
	,floor1: null
	,type: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = true;
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	order: null
	,rate: null
	,barkMapSize: null
	,amplitudeBits: null
	,amplitudeOffset: null
	,numberOfBooks: null
	,bookList: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = true;
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	partitions: null
	,partitionClassList: null
	,classDimensions: null
	,classSubclasses: null
	,classMasterbooks: null
	,subclassBooks: null
	,xlist: null
	,sortedOrder: null
	,neighbors: null
	,floor1Multiplier: null
	,rangebits: null
	,values: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = true;
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[0] = x;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[1] = x1;
	var x2;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x2 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x2 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[2] = x2;
	var x3;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x3 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x3 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[3] = x3;
	var x4;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x4 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x4 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[4] = x4;
	var x5;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x5 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x5 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[5] = x5;
	if(header.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header1.channel = decodeState.input.readByte();
	if(header1.channel == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header1.channel > 16) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.sampleRate = decodeState.input.readInt32();
	if(header1.sampleRate == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x6 = decodeState.input.readByte();
	var log0 = x6 & 15;
	var log1 = x6 >> 4;
	header1.blocksize0 = 1 << log0;
	header1.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x7 = decodeState.input.readByte();
	if((x7 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	var vendorLength = packetInput.readInt32();
	header1.vendor = packetInput.readString(vendorLength);
	header1.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var commentCount = packetInput.readInt32();
	var _g = 0;
	var _g1 = commentCount;
	while(_g < _g1) {
		var i = _g++;
		var n = packetInput.readInt32();
		var str = packetInput.readString(n);
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header1.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	var x8 = packetInput.readByte();
	if((x8 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x9;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x9 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x9 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x9 != 5) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header2 = new haxe_io_Bytes(new ArrayBuffer(6));
	var x10;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x10 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x10 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[0] = x10;
	var x11;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x11 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x11 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[1] = x11;
	var x12;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x12 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x12 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[2] = x12;
	var x13;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x13 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x13 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[3] = x13;
	var x14;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x14 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x14 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[4] = x14;
	var x15;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x15 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x15 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[5] = x15;
	if(header2.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var codebookCount = decodeState.readBits(8) + 1;
	var this1 = new Array(codebookCount);
	header1.codebooks = this1;
	var _g2 = 0;
	var _g11 = codebookCount;
	while(_g2 < _g11) {
		var i1 = _g2++;
		header1.codebooks[i1] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	}
	x7 = decodeState.readBits(6) + 1;
	var _g21 = 0;
	var _g3 = x7;
	while(_g21 < _g3) {
		var i2 = _g21++;
		if(decodeState.readBits(16) != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var floorCount = decodeState.readBits(6) + 1;
	var this2 = new Array(floorCount);
	header1.floorConfig = this2;
	var _g4 = 0;
	var _g5 = floorCount;
	while(_g4 < _g5) {
		var i3 = _g4++;
		header1.floorConfig[i3] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header1.codebooks);
	}
	var residueCount = decodeState.readBits(6) + 1;
	var this3 = new Array(residueCount);
	header1.residueConfig = this3;
	var _g6 = 0;
	var _g7 = residueCount;
	while(_g6 < _g7) {
		var i4 = _g6++;
		header1.residueConfig[i4] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header1.codebooks);
	}
	var mappingCount = decodeState.readBits(6) + 1;
	var this4 = new Array(mappingCount);
	header1.mapping = this4;
	var _g8 = 0;
	var _g9 = mappingCount;
	while(_g8 < _g9) {
		var i5 = _g8++;
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header1.channel);
		header1.mapping[i5] = map;
		var _g81 = 0;
		var _g91 = map.submaps;
		while(_g81 < _g91) {
			var j = _g81++;
			if(map.submapFloor[j] >= header1.floorConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header1.residueConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var modeCount = decodeState.readBits(6) + 1;
	var this5 = new Array(modeCount);
	header1.modes = this5;
	var _g10 = 0;
	var _g111 = modeCount;
	while(_g10 < _g111) {
		var i6 = _g10++;
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header1.modes[i6] = mode;
		if(mode.mapping >= header1.mapping.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header1;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	maximumBitRate: null
	,nominalBitRate: null
	,minimumBitRate: null
	,sampleRate: null
	,channel: null
	,blocksize0: null
	,blocksize1: null
	,codebooks: null
	,floorConfig: null
	,residueConfig: null
	,mapping: null
	,modes: null
	,comment: null
	,vendor: null
	,__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = true;
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	x: null
	,y: null
	,__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = true;
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType = decodeState.readBits(16);
	if(mappingType != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	var this1 = new Array(channels);
	m.chan = this1;
	var _g = 0;
	var _g1 = channels;
	while(_g < _g1) {
		var j = _g++;
		m.chan[j] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	}
	if(decodeState.readBits(1) != 0) {
		m.submaps = decodeState.readBits(4) + 1;
	} else {
		m.submaps = 1;
	}
	if(decodeState.readBits(1) != 0) {
		m.couplingSteps = decodeState.readBits(8) + 1;
		var _g2 = 0;
		var _g3 = m.couplingSteps;
		while(_g2 < _g3) {
			var k = _g2++;
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].magnitude = decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
			var n1 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].angle = decodeState.readBits(n1 < 16384 ? n1 < 16 ? log2_41[n1] : n1 < 512 ? 5 + log2_41[n1 >> 5] : 10 + log2_41[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_41[n1 >> 15] : 20 + log2_41[n1 >> 20] : n1 < 536870912 ? 25 + log2_41[n1 >> 25] : n1 < -2147483648 ? 30 + log2_41[n1 >> 30] : 0);
			if(m.chan[k].magnitude >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	if(decodeState.readBits(2) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g21 = 0;
		var _g31 = channels;
		while(_g21 < _g31) {
			var j1 = _g21++;
			m.chan[j1].mux = decodeState.readBits(4);
			if(m.chan[j1].mux >= m.submaps) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g22 = 0;
		var _g32 = channels;
		while(_g22 < _g32) {
			var j2 = _g22++;
			m.chan[j2].mux = 0;
		}
	}
	var this2 = new Array(m.submaps);
	m.submapFloor = this2;
	var this3 = new Array(m.submaps);
	m.submapResidue = this3;
	var _g23 = 0;
	var _g33 = m.submaps;
	while(_g23 < _g33) {
		var j3 = _g23++;
		decodeState.readBits(8);
		m.submapFloor[j3] = decodeState.readBits(8);
		m.submapResidue[j3] = decodeState.readBits(8);
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	couplingSteps: null
	,chan: null
	,submaps: null
	,submapFloor: null
	,submapResidue: null
	,doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var s = this.chan[i].mux;
		var floor;
		var floor1 = floors[this.submapFloor[s]];
		if(floor1.type == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor1.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g = 1;
			var _g1 = g.values;
			while(_g < _g1) {
				var q = _g++;
				var j = g.sortedOrder[q];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g2 = lx;
				var _g3 = n2;
				while(_g2 < _g3) {
					var j1 = _g2++;
					var _g21 = j1;
					var _g31 = target;
					_g31[_g21] = _g31[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = true;
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	magnitude: null
	,angle: null
	,mux: null
	,__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = true;
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	m.blockflag = decodeState.readBits(1) != 0;
	m.windowtype = decodeState.readBits(16);
	m.transformtype = decodeState.readBits(16);
	m.mapping = decodeState.readBits(8);
	if(m.windowtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	blockflag: null
	,mapping: null
	,windowtype: null
	,transformtype: null
	,__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = true;
kha_audio2_ogg_vorbis_data_Page.prototype = {
	flag: null
	,clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "kha/audio2/ogg/vorbis/data/Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_PageFlag = function() { };
$hxClasses["kha.audio2.ogg.vorbis.data.PageFlag"] = kha_audio2_ogg_vorbis_data_PageFlag;
kha_audio2_ogg_vorbis_data_PageFlag.__name__ = true;
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = true;
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	pageStart: null
	,pageEnd: null
	,afterPreviousPageStart: null
	,firstDecodedSample: null
	,lastDecodedSample: null
	,__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = true;
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	type: null
	,message: null
	,posInfos: null
	,__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxEnums["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__ : true, __constructs__ : ["NEED_MORE_DATA","INVALID_API_MIXING","OUTOFMEM","FEATURE_NOT_SUPPORTED","TOO_MANY_CHANNELS","FILE_OPEN_FAILURE","SEEK_WITHOUT_LENGTH","UNEXPECTED_EOF","SEEK_INVALID","INVALID_SETUP","INVALID_STREAM","MISSING_CAPTURE_PATTERN","INVALID_STREAM_STRUCTURE_VERSION","CONTINUED_PACKET_FLAG_INVALID","INCORRECT_STREAM_SERIAL_NUMBER","INVALID_FIRST_PAGE","BAD_PACKET_TYPE","CANT_FIND_LAST_PAGE","SEEK_FAILED","OTHER"]
	,NEED_MORE_DATA: {_hx_index:0,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_API_MIXING: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OUTOFMEM: {_hx_index:2,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FEATURE_NOT_SUPPORTED: {_hx_index:3,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,TOO_MANY_CHANNELS: {_hx_index:4,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FILE_OPEN_FAILURE: {_hx_index:5,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_WITHOUT_LENGTH: {_hx_index:6,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,UNEXPECTED_EOF: {_hx_index:7,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_INVALID: {_hx_index:8,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_SETUP: {_hx_index:9,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM: {_hx_index:10,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,MISSING_CAPTURE_PATTERN: {_hx_index:11,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM_STRUCTURE_VERSION: {_hx_index:12,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CONTINUED_PACKET_FLAG_INVALID: {_hx_index:13,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INCORRECT_STREAM_SERIAL_NUMBER: {_hx_index:14,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_FIRST_PAGE: {_hx_index:15,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,BAD_PACKET_TYPE: {_hx_index:16,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CANT_FIND_LAST_PAGE: {_hx_index:17,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_FAILED: {_hx_index:18,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OTHER: {_hx_index:19,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
};
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = true;
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	r.type = decodeState.readBits(16);
	if(r.type > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var this1 = new Array(64);
	var residueCascade = this1;
	r.begin = decodeState.readBits(24);
	r.end = decodeState.readBits(24);
	r.partSize = decodeState.readBits(24) + 1;
	var classifications = r.classifications = decodeState.readBits(6) + 1;
	r.classbook = decodeState.readBits(8);
	var _g = 0;
	var _g1 = r.classifications;
	while(_g < _g1) {
		var j = _g++;
		var highBits = 0;
		var lowBits = decodeState.readBits(3);
		if(decodeState.readBits(1) != 0) {
			highBits = decodeState.readBits(5);
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	var this2 = new Array(r.classifications);
	r.residueBooks = this2;
	var _g2 = 0;
	var _g3 = r.classifications;
	while(_g2 < _g3) {
		var j1 = _g2++;
		var this3 = r.residueBooks;
		var this4 = new Array(8);
		this3[j1] = this4;
		var _g21 = 0;
		while(_g21 < 8) {
			var k = _g21++;
			if((residueCascade[j1] & 1 << k) != 0) {
				r.residueBooks[j1][k] = decodeState.readBits(8);
				if(r.residueBooks[j1][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j1][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	var this5 = new Array(el);
	r.classdata = this5;
	var _g4 = 0;
	var _g5 = el;
	while(_g4 < _g5) {
		var j2 = _g4++;
		var temp = j2;
		var k1 = classwords;
		var this6 = r.classdata;
		var this7 = new Array(classwords);
		var cd = this6[j2] = this7;
		while(--k1 >= 0) {
			cd[k1] = temp % classifications;
			temp = temp / classifications | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	begin: null
	,end: null
	,partSize: null
	,classifications: null
	,classbook: null
	,classdata: null
	,residueBooks: null
	,type: null
	,decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var nRead = this.end - this.begin;
		var partSize = this.partSize;
		var partRead = _$UInt_UInt_$Impl_$.toFloat(nRead) / _$UInt_UInt_$Impl_$.toFloat(partSize) | 0;
		var this1 = new Array(header.channel * partRead + 1);
		var classifications = this1;
		var _g = 0;
		var _g1 = ch;
		while(_g < _g1) {
			var i = _g++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g2 = 0;
				var _g11 = buffer.length;
				while(_g2 < _g11) {
					var j = _g2++;
					buffer[j] = 0;
				}
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g21 = 0;
			var _g3 = ch;
			while(_g21 < _g3) {
				var j1 = _g21++;
				if(!doNotDecode[j1]) {
					break;
				} else if(j1 == ch - 1) {
					return;
				}
			}
			var _g4 = 0;
			while(_g4 < 8) {
				var pass = _g4++;
				var pcount = 0;
				var classSet = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i1 = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i2 = classwords;
							while(--i2 >= 0) {
								classifications[i2 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g41 = 0;
						var _g5 = classwords;
						while(_g41 < _g5) {
							var i3 = _g41++;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var c1 = classifications[pcount];
							var b = this.residueBooks[c1][pass];
							if(b >= 0) {
								var book = codebooks[b];
								var result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var z2 = this.begin + pcount * partSize;
						var cInter1 = 0;
						var pInter1 = z2;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i4 = c2.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i4 >= 0) {
								var l1 = c2.codewordLengths[i4];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i4;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val1 = c2.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i5 = classwords;
							while(--i5 >= 0) {
								classifications[i5 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g42 = 0;
						var _g51 = classwords;
						while(_g42 < _g51) {
							var i6 = _g42++;
							if(pcount >= partRead) {
								break;
							}
							var z3 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var book1 = codebooks[b1];
								var result1 = book1.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z3 = z3 + partSize;
								cInter1 = 0;
								pInter1 = z3;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z4 = this.begin + pcount * partSize;
						var cInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						var pInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						if(pass == 0) {
							var c3 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i7 = c3.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i7 >= 0) {
								var l2 = c3.codewordLengths[i7];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i7;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c3);
							}
							if(c3.sparse) {
								val2 = c3.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i8 = classwords;
							while(--i8 >= 0) {
								classifications[i8 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g43 = 0;
						var _g52 = classwords;
						while(_g43 < _g52) {
							var i9 = _g43++;
							if(pcount >= partRead) {
								break;
							}
							var z5 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var book2 = codebooks[b2];
								var result2 = book2.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z5 = z5 + partSize;
								cInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
								pInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g22 = 0;
		while(_g22 < 8) {
			var pass1 = _g22++;
			var pcount1 = 0;
			var classSet1 = 0;
			while(pcount1 < partRead) {
				if(pass1 == 0) {
					var _g23 = 0;
					var _g31 = ch;
					while(_g23 < _g31) {
						var j2 = _g23++;
						if(!doNotDecode[j2]) {
							var c4 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i10 = c4.fastHuffman[decodeState.acc & 1023];
							var val3;
							if(i10 >= 0) {
								var l3 = c4.codewordLengths[i10];
								decodeState.acc = decodeState.acc >>> l3;
								decodeState.validBits -= l3;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val3 = -1;
								} else {
									val3 = i10;
								}
							} else {
								val3 = decodeState.decodeScalarRaw(c4);
							}
							if(c4.sparse) {
								val3 = c4.sortedValues[val3];
							}
							var temp = val3;
							if(temp == -1) {
								return;
							}
							var i11 = classwords;
							while(--i11 >= 0) {
								classifications[j2 * partRead + i11 + pcount1] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g24 = 0;
				var _g32 = classwords;
				while(_g24 < _g32) {
					var i12 = _g24++;
					if(pcount1 >= partRead) {
						break;
					}
					var _g25 = 0;
					var _g33 = ch;
					while(_g25 < _g33) {
						var j3 = _g25++;
						if(!doNotDecode[j3]) {
							var c5 = classifications[j3 * partRead + pcount1];
							var b3 = this.residueBooks[c5][pass1];
							if(b3 >= 0) {
								var target = residueBuffers[j3];
								var offset = this.begin + pcount1 * partSize;
								var n1 = partSize;
								var book3 = codebooks[b3];
								if(!book3.residueDecode(decodeState,target,offset,n1,this.type)) {
									return;
								}
							}
						}
					}
					++pcount1;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_audio2_ogg_vorbis_data_Setting = function() { };
$hxClasses["kha.audio2.ogg.vorbis.data.Setting"] = kha_audio2_ogg_vorbis_data_Setting;
kha_audio2_ogg_vorbis_data_Setting.__name__ = true;
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = true;
kha_graphics1_Graphics.__isInterface__ = true;
kha_graphics1_Graphics.prototype = {
	begin: null
	,end: null
	,setPixel: null
	,__class__: kha_graphics1_Graphics
};
var kha_graphics2_Graphics = function() {
	this.transformations = [new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1)];
	this.transformationIndex = 0;
	this.opacities = [1];
	this.myFontSize = 12;
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = true;
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,flush: function() {
	}
	,clear: function(color) {
	}
	,drawImage: function(img,x,y) {
		this.drawSubImage(img,x,y,0,0,img.get_width(),img.get_height());
	}
	,drawSubImage: function(img,x,y,sx,sy,sw,sh) {
		this.drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
	}
	,drawScaledImage: function(img,dx,dy,dw,dh) {
		this.drawScaledSubImage(img,0,0,img.get_width(),img.get_height(),dx,dy,dw,dh);
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,fillRect: function(x,y,width,height) {
	}
	,drawString: function(text,x,y) {
	}
	,drawCharacters: function(text,start,length,x,y) {
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,drawVideo: function(video,x,y,width,height) {
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
	}
	,get_imageScaleQuality: function() {
		return 0;
	}
	,set_imageScaleQuality: function(value) {
		return 1;
	}
	,get_mipmapScaleQuality: function() {
		return 0;
	}
	,set_mipmapScaleQuality: function(value) {
		return 1;
	}
	,get_color: function() {
		return -16777216;
	}
	,set_color: function(color) {
		return -16777216;
	}
	,get_font: function() {
		return null;
	}
	,set_font: function(font) {
		return null;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,set_fontSize: function(value) {
		return this.myFontSize = value;
	}
	,get_transformation: function() {
		return this.transformations[this.transformationIndex];
	}
	,set_transformation: function(transformation) {
		this.setTransformation(transformation);
		var _this = this.transformations[this.transformationIndex];
		_this._00 = transformation._00;
		_this._10 = transformation._10;
		_this._20 = transformation._20;
		_this._01 = transformation._01;
		_this._11 = transformation._11;
		_this._21 = transformation._21;
		_this._02 = transformation._02;
		_this._12 = transformation._12;
		_this._22 = transformation._22;
		return transformation;
	}
	,pushTransformation: function(trans) {
		this.transformationIndex++;
		if(this.transformationIndex == this.transformations.length) {
			this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		var _this = this.transformations[this.transformationIndex];
		_this._00 = trans._00;
		_this._10 = trans._10;
		_this._20 = trans._20;
		_this._01 = trans._01;
		_this._11 = trans._11;
		_this._21 = trans._21;
		_this._02 = trans._02;
		_this._12 = trans._12;
		_this._22 = trans._22;
		this.setTransformation(this.transformations[this.transformationIndex]);
	}
	,popTransformation: function() {
		this.transformationIndex--;
		this.setTransformation(this.transformations[this.transformationIndex]);
		return this.transformations[this.transformationIndex + 1];
	}
	,scale: function(x,y) {
		var _this = this.transformations[this.transformationIndex];
		var _this__00 = x;
		var _this__10 = 0;
		var _this__20 = 0;
		var _this__01 = 0;
		var _this__11 = y;
		var _this__21 = 0;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformationIndex];
		var m__00 = _this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02;
		var m__10 = _this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12;
		var m__20 = _this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22;
		var m__01 = _this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02;
		var m__11 = _this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12;
		var m__21 = _this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22;
		var m__02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		var m__12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		var m__22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		_this._00 = m__00;
		_this._10 = m__10;
		_this._20 = m__20;
		_this._01 = m__01;
		_this._11 = m__11;
		_this._21 = m__21;
		_this._02 = m__02;
		_this._12 = m__12;
		_this._22 = m__22;
	}
	,translation: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = tx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = ty;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformationIndex];
		return new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22);
	}
	,translate: function(tx,ty) {
		var _this = this.transformations[this.transformationIndex];
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = tx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = ty;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformationIndex];
		var m__00 = _this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02;
		var m__10 = _this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12;
		var m__20 = _this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22;
		var m__01 = _this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02;
		var m__11 = _this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12;
		var m__21 = _this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22;
		var m__02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		var m__12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		var m__22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		_this._00 = m__00;
		_this._10 = m__10;
		_this._20 = m__20;
		_this._01 = m__01;
		_this._11 = m__11;
		_this._21 = m__21;
		_this._02 = m__02;
		_this._12 = m__12;
		_this._22 = m__22;
	}
	,pushTranslation: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = tx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = ty;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformationIndex];
		var trans__00 = _this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02;
		var trans__10 = _this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12;
		var trans__20 = _this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22;
		var trans__01 = _this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02;
		var trans__11 = _this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12;
		var trans__21 = _this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22;
		var trans__02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		var trans__12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		var trans__22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		this.transformationIndex++;
		if(this.transformationIndex == this.transformations.length) {
			this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		var _this = this.transformations[this.transformationIndex];
		_this._00 = trans__00;
		_this._10 = trans__10;
		_this._20 = trans__20;
		_this._01 = trans__01;
		_this._11 = trans__11;
		_this._21 = trans__21;
		_this._02 = trans__02;
		_this._12 = trans__12;
		_this._22 = trans__22;
		this.setTransformation(this.transformations[this.transformationIndex]);
	}
	,rotation: function(angle,centerx,centery) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = centerx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = centery;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m__00 = Math.cos(angle);
		var m__10 = -Math.sin(angle);
		var m__20 = 0;
		var m__01 = Math.sin(angle);
		var m__11 = Math.cos(angle);
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__001 = 1;
		var m__101 = 0;
		var m__201 = -centerx;
		var m__011 = 0;
		var m__111 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		var _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		var _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		var _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		var _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		var _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		var _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		var _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		var _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformationIndex];
		return new kha_math_FastMatrix3(_this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02,_this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12,_this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22,_this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02,_this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12,_this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22,_this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02,_this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12,_this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22);
	}
	,rotate: function(angle,centerx,centery) {
		var _this = this.transformations[this.transformationIndex];
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = centerx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = centery;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m__00 = Math.cos(angle);
		var m__10 = -Math.sin(angle);
		var m__20 = 0;
		var m__01 = Math.sin(angle);
		var m__11 = Math.cos(angle);
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__001 = 1;
		var m__101 = 0;
		var m__201 = -centerx;
		var m__011 = 0;
		var m__111 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		var _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		var _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		var _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		var _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		var _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		var _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		var _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		var _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformationIndex];
		var m__002 = _this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02;
		var m__102 = _this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12;
		var m__202 = _this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22;
		var m__012 = _this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02;
		var m__112 = _this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12;
		var m__212 = _this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22;
		var m__022 = _this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02;
		var m__122 = _this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12;
		var m__222 = _this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22;
		_this._00 = m__002;
		_this._10 = m__102;
		_this._20 = m__202;
		_this._01 = m__012;
		_this._11 = m__112;
		_this._21 = m__212;
		_this._02 = m__022;
		_this._12 = m__122;
		_this._22 = m__222;
	}
	,pushRotation: function(angle,centerx,centery) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = centerx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = centery;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m__00 = Math.cos(angle);
		var m__10 = -Math.sin(angle);
		var m__20 = 0;
		var m__01 = Math.sin(angle);
		var m__11 = Math.cos(angle);
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__001 = 1;
		var m__101 = 0;
		var m__201 = -centerx;
		var m__011 = 0;
		var m__111 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		var _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		var _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		var _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		var _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		var _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		var _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		var _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		var _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformationIndex];
		var trans__00 = _this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02;
		var trans__10 = _this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12;
		var trans__20 = _this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22;
		var trans__01 = _this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02;
		var trans__11 = _this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12;
		var trans__21 = _this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22;
		var trans__02 = _this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02;
		var trans__12 = _this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12;
		var trans__22 = _this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22;
		this.transformationIndex++;
		if(this.transformationIndex == this.transformations.length) {
			this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		var _this = this.transformations[this.transformationIndex];
		_this._00 = trans__00;
		_this._10 = trans__10;
		_this._20 = trans__20;
		_this._01 = trans__01;
		_this._11 = trans__11;
		_this._21 = trans__21;
		_this._02 = trans__02;
		_this._12 = trans__12;
		_this._22 = trans__22;
		this.setTransformation(this.transformations[this.transformationIndex]);
	}
	,pushOpacity: function(opacity) {
		this.setOpacity(opacity);
		this.opacities.push(opacity);
	}
	,popOpacity: function() {
		var ret = this.opacities.pop();
		this.setOpacity(this.get_opacity());
		return ret;
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,set_opacity: function(opacity) {
		this.setOpacity(opacity);
		return this.opacities[this.opacities.length - 1] = opacity;
	}
	,scissor: function(x,y,width,height) {
	}
	,disableScissor: function() {
	}
	,pipe: null
	,get_pipeline: function() {
		return this.pipe;
	}
	,set_pipeline: function(pipeline) {
		this.setPipeline(pipeline);
		return this.pipe = pipeline;
	}
	,transformations: null
	,transformationIndex: null
	,opacities: null
	,myFontSize: null
	,setTransformation: function(transformation) {
	}
	,setOpacity: function(opacity) {
	}
	,setPipeline: function(pipeline) {
	}
	,__class__: kha_graphics2_Graphics
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = true;
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	canvas: null
	,texture: null
	,pixels: null
	,begin: function() {
		if(this.texture == null || (this.texture.get_realWidth() != this.canvas.get_width() || this.texture.get_realHeight() != this.canvas.get_height())) {
			this.texture = kha_Image.create(this.canvas.get_width(),this.canvas.get_height(),0,2);
		}
		this.pixels = this.texture.lock();
	}
	,end: function() {
		this.texture.unlock();
		this.canvas.get_g2().begin(false);
		this.canvas.get_g2().drawImage(this.texture,0,0);
		this.canvas.get_g2().end();
	}
	,setPixel: function(x,y,color) {
		this.pixels.setInt32(y * this.texture.get_realWidth() * 4 + x * 4,kha__$Color_Color_$Impl_$.fromBytes(color & 255,(color & 65280) >>> 8,(color & 16711680) >>> 16,color >>> 24));
	}
	,__class__: kha_graphics2_Graphics1
};
var kha_graphics2_GraphicsExtension = function() { };
$hxClasses["kha.graphics2.GraphicsExtension"] = kha_graphics2_GraphicsExtension;
kha_graphics2_GraphicsExtension.__name__ = true;
kha_graphics2_GraphicsExtension.drawArc = function(g2,cx,cy,radius,sAngle,eAngle,strength,ccw,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(ccw == null) {
		ccw = false;
	}
	if(strength == null) {
		strength = 1;
	}
	if(kha_SystemImpl.gl == null) {
		var g = g2;
		radius -= strength / 2;
		g.drawArc(cx,cy,radius,sAngle,eAngle,strength,ccw);
		return;
	}
	sAngle %= Math.PI * 2;
	eAngle %= Math.PI * 2;
	if(ccw) {
		if(eAngle > sAngle) {
			eAngle -= Math.PI * 2;
		}
	} else if(eAngle < sAngle) {
		eAngle += Math.PI * 2;
	}
	radius += strength / 2;
	if(segments <= 0) {
		segments = Math.floor(10 * Math.sqrt(radius));
	}
	var theta = (eAngle - sAngle) / segments;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var x = Math.cos(sAngle) * radius;
	var y = Math.sin(sAngle) * radius;
	var _g = 0;
	var _g1 = segments;
	while(_g < _g1) {
		var n = _g++;
		var px = x + cx;
		var py = y + cy;
		var t = x;
		x = c * x - s * y;
		y = c * y + s * t;
		kha_graphics2_GraphicsExtension.drawInnerLine(g2,x + cx,y + cy,px,py,strength);
	}
};
kha_graphics2_GraphicsExtension.fillArc = function(g2,cx,cy,radius,sAngle,eAngle,ccw,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(ccw == null) {
		ccw = false;
	}
	if(kha_SystemImpl.gl == null) {
		var g = g2;
		g.fillArc(cx,cy,radius,sAngle,eAngle,ccw);
		return;
	}
	sAngle %= Math.PI * 2;
	eAngle %= Math.PI * 2;
	if(ccw) {
		if(eAngle > sAngle) {
			eAngle -= Math.PI * 2;
		}
	} else if(eAngle < sAngle) {
		eAngle += Math.PI * 2;
	}
	if(segments <= 0) {
		segments = Math.floor(10 * Math.sqrt(radius));
	}
	var theta = (eAngle - sAngle) / segments;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var x = Math.cos(sAngle) * radius;
	var y = Math.sin(sAngle) * radius;
	var sx = x + cx;
	var sy = y + cy;
	var _g = 0;
	var _g1 = segments;
	while(_g < _g1) {
		var n = _g++;
		var px = x + cx;
		var py = y + cy;
		var t = x;
		x = c * x - s * y;
		y = c * y + s * t;
		g2.fillTriangle(px,py,x + cx,y + cy,sx,sy);
	}
};
kha_graphics2_GraphicsExtension.drawCircle = function(g2,cx,cy,radius,strength,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(strength == null) {
		strength = 1;
	}
	if(kha_SystemImpl.gl == null) {
		var g = g2;
		radius -= strength / 2;
		g.drawCircle(cx,cy,radius,strength);
		return;
	}
	radius += strength / 2;
	if(segments <= 0) {
		segments = Math.floor(10 * Math.sqrt(radius));
	}
	var theta = 2 * Math.PI / segments;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var x = radius;
	var y = 0.0;
	var _g = 0;
	var _g1 = segments;
	while(_g < _g1) {
		var n = _g++;
		var px = x + cx;
		var py = y + cy;
		var t = x;
		x = c * x - s * y;
		y = c * y + s * t;
		kha_graphics2_GraphicsExtension.drawInnerLine(g2,x + cx,y + cy,px,py,strength);
	}
};
kha_graphics2_GraphicsExtension.drawInnerLine = function(g2,x1,y1,x2,y2,strength) {
	var side = y2 > y1 ? 1 : 0;
	if(y2 == y1) {
		side = x2 - x1 > 0 ? 1 : 0;
	}
	var vec_x = 0;
	var vec_y = 0;
	if(y2 == y1) {
		var x = 0;
		var y = -1;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var v_x = x;
		var v_y = y;
		vec_x = v_x;
		vec_y = v_y;
	} else {
		var x3 = 1;
		var y3 = -(x2 - x1) / (y2 - y1);
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		var v_x1 = x3;
		var v_y1 = y3;
		vec_x = v_x1;
		vec_y = v_y1;
	}
	var currentLength = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
	if(currentLength != 0) {
		var mul = strength / currentLength;
		vec_x *= mul;
		vec_y *= mul;
	}
	var x4 = x1 + side * vec_x;
	var y4 = y1 + side * vec_y;
	if(y4 == null) {
		y4 = 0;
	}
	if(x4 == null) {
		x4 = 0;
	}
	var p1_x = x4;
	var p1_y = y4;
	var x5 = x2 + side * vec_x;
	var y5 = y2 + side * vec_y;
	if(y5 == null) {
		y5 = 0;
	}
	if(x5 == null) {
		x5 = 0;
	}
	var p2_x = x5;
	var p2_y = y5;
	var x6 = p1_x - vec_x;
	var y6 = p1_y - vec_y;
	if(y6 == null) {
		y6 = 0;
	}
	if(x6 == null) {
		x6 = 0;
	}
	var p3_x = x6;
	var p3_y = y6;
	var x7 = p2_x - vec_x;
	var y7 = p2_y - vec_y;
	if(y7 == null) {
		y7 = 0;
	}
	if(x7 == null) {
		x7 = 0;
	}
	var p4_x = x7;
	var p4_y = y7;
	g2.fillTriangle(p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
	g2.fillTriangle(p3_x,p3_y,p2_x,p2_y,p4_x,p4_y);
};
kha_graphics2_GraphicsExtension.fillCircle = function(g2,cx,cy,radius,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(kha_SystemImpl.gl == null) {
		var g = g2;
		g.fillCircle(cx,cy,radius);
		return;
	}
	if(segments <= 0) {
		segments = Math.floor(10 * Math.sqrt(radius));
	}
	var theta = 2 * Math.PI / segments;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var x = radius;
	var y = 0.0;
	var _g = 0;
	var _g1 = segments;
	while(_g < _g1) {
		var n = _g++;
		var px = x + cx;
		var py = y + cy;
		var t = x;
		x = c * x - s * y;
		y = c * y + s * t;
		g2.fillTriangle(px,py,x + cx,y + cy,cx,cy);
	}
};
kha_graphics2_GraphicsExtension.drawPolygon = function(g2,x,y,vertices,strength) {
	if(strength == null) {
		strength = 1;
	}
	var iterator = HxOverrides.iter(vertices);
	var v0 = iterator.next();
	var v1 = v0;
	while(iterator.hasNext()) {
		var v2 = iterator.next();
		g2.drawLine(v1.x + x,v1.y + y,v2.x + x,v2.y + y,strength);
		v1 = v2;
	}
	g2.drawLine(v1.x + x,v1.y + y,v0.x + x,v0.y + y,strength);
};
kha_graphics2_GraphicsExtension.fillPolygon = function(g2,x,y,vertices) {
	var iterator = HxOverrides.iter(vertices);
	if(!iterator.hasNext()) {
		return;
	}
	var v0 = iterator.next();
	if(!iterator.hasNext()) {
		return;
	}
	var v1 = iterator.next();
	while(iterator.hasNext()) {
		var v2 = iterator.next();
		g2.fillTriangle(v0.x + x,v0.y + y,v1.x + x,v1.y + y,v2.x + x,v2.y + y);
		v1 = v2;
	}
};
kha_graphics2_GraphicsExtension.drawCubicBezier = function(g2,x,y,segments,strength) {
	if(strength == null) {
		strength = 1.0;
	}
	if(segments == null) {
		segments = 20;
	}
	var t;
	var q0 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(0,x,y);
	var q1;
	var _g = 1;
	var _g1 = segments + 1;
	while(_g < _g1) {
		var i = _g++;
		t = i / segments;
		q1 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(t,x,y);
		g2.drawLine(q0[0],q0[1],q1[0],q1[1],strength);
		q0 = q1;
	}
};
kha_graphics2_GraphicsExtension.drawCubicBezierPath = function(g2,x,y,segments,strength) {
	if(strength == null) {
		strength = 1.0;
	}
	if(segments == null) {
		segments = 20;
	}
	var i = 0;
	var t;
	var q0 = null;
	var q1 = null;
	while(i < x.length - 3) {
		if(i == 0) {
			q0 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(0,[x[i],x[i + 1],x[i + 2],x[i + 3]],[y[i],y[i + 1],y[i + 2],y[i + 3]]);
		}
		var _g = 1;
		var _g1 = segments + 1;
		while(_g < _g1) {
			var j = _g++;
			t = j / segments;
			q1 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(t,[x[i],x[i + 1],x[i + 2],x[i + 3]],[y[i],y[i + 1],y[i + 2],y[i + 3]]);
			g2.drawLine(q0[0],q0[1],q1[0],q1[1],strength);
			q0 = q1;
		}
		i += 3;
	}
};
kha_graphics2_GraphicsExtension.calculateCubicBezierPoint = function(t,x,y) {
	var u = 1 - t;
	var tt = t * t;
	var uu = u * u;
	var uuu = uu * u;
	var ttt = tt * t;
	var p = [uuu * x[0],uuu * y[0]];
	p[0] += 3 * uu * t * x[1];
	p[1] += 3 * uu * t * y[1];
	p[0] += 3 * u * tt * x[2];
	p[1] += 3 * u * tt * y[2];
	p[0] += ttt * x[3];
	p[1] += ttt * y[3];
	return p;
};
kha_graphics2_GraphicsExtension.drawAlignedString = function(g2,text,x,y,horAlign,verAlign) {
	var xoffset = 0.0;
	if(horAlign == 1 || horAlign == 2) {
		var width = g2.get_font().width(g2.get_fontSize(),text);
		if(horAlign == 1) {
			xoffset = -width * 0.5;
		} else {
			xoffset = -width;
		}
	}
	var yoffset = 0.0;
	if(verAlign == 1 || verAlign == 2) {
		var height = g2.get_font().height(g2.get_fontSize());
		if(verAlign == 1) {
			yoffset = -height * 0.5;
		} else {
			yoffset = -height;
		}
	}
	g2.drawString(text,x + xoffset,y + yoffset);
};
kha_graphics2_GraphicsExtension.drawAlignedCharacters = function(g2,text,start,length,x,y,horAlign,verAlign) {
	var xoffset = 0.0;
	if(horAlign == 1 || horAlign == 2) {
		var width = g2.get_font().widthOfCharacters(g2.get_fontSize(),text,start,length);
		if(horAlign == 1) {
			xoffset = -width * 0.5;
		} else {
			xoffset = -width;
		}
	}
	var yoffset = 0.0;
	if(verAlign == 1 || verAlign == 2) {
		var height = g2.get_font().height(g2.get_fontSize());
		if(verAlign == 1) {
			yoffset = -height * 0.5;
		} else {
			yoffset = -height;
		}
	}
	g2.drawCharacters(text,start,length,x + xoffset,y + yoffset);
};
var kha_graphics2_truetype_VectorOfIntPointer = function() {
};
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = true;
kha_graphics2_truetype_VectorOfIntPointer.prototype = {
	value: null
	,__class__: kha_graphics2_truetype_VectorOfIntPointer
};
var kha_graphics2_truetype_Stbtt_$temp_$rect = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = true;
kha_graphics2_truetype_Stbtt_$temp_$rect.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
};
var kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = true;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype = {
	advanceWidth: null
	,leftSideBearing: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = true;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype = {
	ascent: null
	,descent: null
	,lineGap: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$region = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_region"] = kha_graphics2_truetype_Stbtt_$temp_$region;
kha_graphics2_truetype_Stbtt_$temp_$region.__name__ = true;
kha_graphics2_truetype_Stbtt_$temp_$region.prototype = {
	width: null
	,height: null
	,xoff: null
	,yoff: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$region
};
var kha_graphics2_truetype_Stbtt_$bakedchar = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = true;
kha_graphics2_truetype_Stbtt_$bakedchar.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
	,__class__: kha_graphics2_truetype_Stbtt_$bakedchar
};
var kha_graphics2_truetype_Stbtt_$aligned_$quad = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_aligned_quad"] = kha_graphics2_truetype_Stbtt_$aligned_$quad;
kha_graphics2_truetype_Stbtt_$aligned_$quad.__name__ = true;
kha_graphics2_truetype_Stbtt_$aligned_$quad.prototype = {
	x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
	,__class__: kha_graphics2_truetype_Stbtt_$aligned_$quad
};
var kha_graphics2_truetype_Stbtt_$packedchar = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_packedchar"] = kha_graphics2_truetype_Stbtt_$packedchar;
kha_graphics2_truetype_Stbtt_$packedchar.__name__ = true;
kha_graphics2_truetype_Stbtt_$packedchar.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
	,xoff2: null
	,yoff2: null
	,__class__: kha_graphics2_truetype_Stbtt_$packedchar
};
var kha_graphics2_truetype_Stbtt_$pack_$range = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_pack_range"] = kha_graphics2_truetype_Stbtt_$pack_$range;
kha_graphics2_truetype_Stbtt_$pack_$range.__name__ = true;
kha_graphics2_truetype_Stbtt_$pack_$range.prototype = {
	font_size: null
	,first_unicode_codepoint_in_range: null
	,array_of_unicode_codepoints: null
	,num_chars: null
	,chardata_for_range: null
	,h_oversample: null
	,v_oversample: null
	,__class__: kha_graphics2_truetype_Stbtt_$pack_$range
};
var kha_graphics2_truetype_Stbtt_$pack_$context = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_pack_context"] = kha_graphics2_truetype_Stbtt_$pack_$context;
kha_graphics2_truetype_Stbtt_$pack_$context.__name__ = true;
kha_graphics2_truetype_Stbtt_$pack_$context.prototype = {
	width: null
	,height: null
	,stride_in_bytes: null
	,padding: null
	,h_oversample: null
	,v_oversample: null
	,pixels: null
	,__class__: kha_graphics2_truetype_Stbtt_$pack_$context
};
var kha_graphics2_truetype_Stbtt_$fontinfo = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = true;
kha_graphics2_truetype_Stbtt_$fontinfo.prototype = {
	data: null
	,fontstart: null
	,numGlyphs: null
	,loca: null
	,head: null
	,glyf: null
	,hhea: null
	,hmtx: null
	,kern: null
	,index_map: null
	,indexToLocFormat: null
	,__class__: kha_graphics2_truetype_Stbtt_$fontinfo
};
var kha_graphics2_truetype_Stbtt_$vertex = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = true;
kha_graphics2_truetype_Stbtt_$vertex.prototype = {
	x: null
	,y: null
	,cx: null
	,cy: null
	,type: null
	,padding: null
	,__class__: kha_graphics2_truetype_Stbtt_$vertex
};
var kha_graphics2_truetype_Stbtt_$_$bitmap = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = true;
kha_graphics2_truetype_Stbtt_$_$bitmap.prototype = {
	w: null
	,h: null
	,stride: null
	,pixels: null
	,pixels_offset: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
};
var kha_graphics2_truetype_Stbtt_$_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = true;
kha_graphics2_truetype_Stbtt_$_$edge.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,invert: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$edge
};
var kha_graphics2_truetype_Stbtt_$_$active_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = true;
kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype = {
	next: null
	,fx: null
	,fdx: null
	,fdy: null
	,direction: null
	,sy: null
	,ey: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
};
var kha_graphics2_truetype_Stbtt_$_$point = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = true;
kha_graphics2_truetype_Stbtt_$_$point.prototype = {
	x: null
	,y: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$point
};
var kha_graphics2_truetype_StbTruetype = function() { };
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = true;
kha_graphics2_truetype_StbTruetype.STBTT_assert = function(value) {
	if(!value) {
		throw new js__$Boot_HaxeError("Error");
	}
};
kha_graphics2_truetype_StbTruetype.STBTT_POINT_SIZE = function(x) {
	return -x;
};
kha_graphics2_truetype_StbTruetype.ttBYTE = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	return p.readU8(pos);
};
kha_graphics2_truetype_StbTruetype.ttCHAR = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var n = p.readU8(pos);
	if(n >= 128) {
		return n - 256;
	}
	return n;
};
kha_graphics2_truetype_StbTruetype.ttUSHORT = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	return ch2 | ch1 << 8;
};
kha_graphics2_truetype_StbTruetype.ttSHORT = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	if((n & 32768) != 0) {
		return n - 65536;
	}
	return n;
};
kha_graphics2_truetype_StbTruetype.ttULONG = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var pos1 = pos;
	if(pos1 == null) {
		pos1 = 0;
	}
	var ch1 = p.readU8(pos1);
	var ch2 = p.readU8(pos1 + 1);
	var ch3 = p.readU8(pos1 + 2);
	var ch4 = p.readU8(pos1 + 3);
	return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.ttLONG = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	var ch4 = p.readU8(pos + 3);
	return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.to_stbtt_uint16 = function(value) {
	return value & 65535;
};
kha_graphics2_truetype_StbTruetype.ttFixed = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var pos1 = pos;
	if(pos1 == null) {
		pos1 = 0;
	}
	var ch1 = p.readU8(pos1);
	var ch2 = p.readU8(pos1 + 1);
	var ch3 = p.readU8(pos1 + 2);
	var ch4 = p.readU8(pos1 + 3);
	return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.stbtt_tag4 = function(p,pos,c0,c1,c2,c3) {
	if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
		return p.readU8(pos + 3) == c3;
	} else {
		return false;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_tag = function(p,pos,str) {
	var c0 = HxOverrides.cca(str,0);
	var c1 = HxOverrides.cca(str,1);
	var c2 = HxOverrides.cca(str,2);
	var c3 = HxOverrides.cca(str,3);
	if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
		return p.readU8(pos + 3) == c3;
	} else {
		return false;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__isfont = function(font) {
	var c0 = HxOverrides.cca("1",0);
	if(font.readU8(0) == c0 && font.readU8(1) == 0 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	var c01 = HxOverrides.cca("typ1",0);
	var c1 = HxOverrides.cca("typ1",1);
	var c2 = HxOverrides.cca("typ1",2);
	var c3 = HxOverrides.cca("typ1",3);
	if(font.readU8(0) == c01 && font.readU8(1) == c1 && font.readU8(2) == c2 && font.readU8(3) == c3) {
		return true;
	}
	var c02 = HxOverrides.cca("OTTO",0);
	var c11 = HxOverrides.cca("OTTO",1);
	var c21 = HxOverrides.cca("OTTO",2);
	var c31 = HxOverrides.cca("OTTO",3);
	if(font.readU8(0) == c02 && font.readU8(1) == c11 && font.readU8(2) == c21 && font.readU8(3) == c31) {
		return true;
	}
	if(font.readU8(0) == 0 && font.readU8(1) == 1 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	return false;
};
kha_graphics2_truetype_StbTruetype.stbtt__find_table = function(data,fontstart,tag) {
	var pos = fontstart + 4;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = data.readU8(pos);
	var ch2 = data.readU8(pos + 1);
	var num_tables = ch2 | ch1 << 8;
	var tabledir = fontstart + 12;
	var _g = 0;
	var _g1 = num_tables;
	while(_g < _g1) {
		var i = _g++;
		var loc = tabledir + 16 * i;
		var c0 = HxOverrides.cca(tag,0);
		var c1 = HxOverrides.cca(tag,1);
		var c2 = HxOverrides.cca(tag,2);
		var c3 = HxOverrides.cca(tag,3);
		if(data.readU8(loc) == c0 && data.readU8(loc + 1) == c1 && data.readU8(loc + 2) == c2 && data.readU8(loc + 3) == c3) {
			var pos1 = loc + 8;
			if(pos1 == null) {
				pos1 = 0;
			}
			var pos2 = pos1;
			if(pos2 == null) {
				pos2 = 0;
			}
			var ch11 = data.readU8(pos2);
			var ch21 = data.readU8(pos2 + 1);
			var ch3 = data.readU8(pos2 + 2);
			var ch4 = data.readU8(pos2 + 3);
			return ch4 | ch3 << 8 | ch21 << 16 | ch11 << 24;
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontOffsetForIndex = function(font_collection,index) {
	if(kha_graphics2_truetype_StbTruetype.stbtt__isfont(font_collection)) {
		if(index == 0) {
			return 0;
		} else {
			return -1;
		}
	}
	var c0 = HxOverrides.cca("ttcf",0);
	var c1 = HxOverrides.cca("ttcf",1);
	var c2 = HxOverrides.cca("ttcf",2);
	var c3 = HxOverrides.cca("ttcf",3);
	if(font_collection.readU8(0) == c0 && font_collection.readU8(1) == c1 && font_collection.readU8(2) == c2 && font_collection.readU8(3) == c3) {
		var tmp;
		var pos = 4;
		if(pos == null) {
			pos = 0;
		}
		var pos1 = pos;
		if(pos1 == null) {
			pos1 = 0;
		}
		var ch1 = font_collection.readU8(pos1);
		var ch2 = font_collection.readU8(pos1 + 1);
		var ch3 = font_collection.readU8(pos1 + 2);
		var ch4 = font_collection.readU8(pos1 + 3);
		if((ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24) != 65536) {
			var pos2 = 4;
			if(pos2 == null) {
				pos2 = 0;
			}
			var pos3 = pos2;
			if(pos3 == null) {
				pos3 = 0;
			}
			var ch11 = font_collection.readU8(pos3);
			var ch21 = font_collection.readU8(pos3 + 1);
			var ch31 = font_collection.readU8(pos3 + 2);
			var ch41 = font_collection.readU8(pos3 + 3);
			tmp = (ch41 | ch31 << 8 | ch21 << 16 | ch11 << 24) == 131072;
		} else {
			tmp = true;
		}
		if(tmp) {
			var pos4 = 8;
			if(pos4 == null) {
				pos4 = 0;
			}
			var ch12 = font_collection.readU8(pos4);
			var ch22 = font_collection.readU8(pos4 + 1);
			var ch32 = font_collection.readU8(pos4 + 2);
			var ch42 = font_collection.readU8(pos4 + 3);
			var n = ch42 | ch32 << 8 | ch22 << 16 | ch12 << 24;
			if(index >= n) {
				return -1;
			}
			var pos5 = 12 + index * 4;
			if(pos5 == null) {
				pos5 = 0;
			}
			var pos6 = pos5;
			if(pos6 == null) {
				pos6 = 0;
			}
			var ch13 = font_collection.readU8(pos6);
			var ch23 = font_collection.readU8(pos6 + 1);
			var ch33 = font_collection.readU8(pos6 + 2);
			var ch43 = font_collection.readU8(pos6 + 3);
			return ch43 | ch33 << 8 | ch23 << 16 | ch13 << 24;
		}
	}
	return -1;
};
kha_graphics2_truetype_StbTruetype.stbtt_InitFont = function(info,data,fontstart) {
	info.data = data;
	info.fontstart = fontstart;
	var cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
	info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
	info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
	info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
	info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
	info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
	info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
	if(cmap == 0 || info.loca == 0 || info.head == 0 || info.glyf == 0 || info.hhea == 0 || info.hmtx == 0) {
		return false;
	}
	var t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
	if(t != 0) {
		var pos = t + 4;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var ch2 = data.readU8(pos + 1);
		info.numGlyphs = ch2 | ch1 << 8;
	} else {
		info.numGlyphs = 65535;
	}
	var pos1 = cmap + 2;
	if(pos1 == null) {
		pos1 = 0;
	}
	var ch11 = data.readU8(pos1);
	var ch21 = data.readU8(pos1 + 1);
	var numTables = ch21 | ch11 << 8;
	info.index_map = 0;
	var _g = 0;
	var _g1 = numTables;
	while(_g < _g1) {
		var i = _g++;
		var encoding_record = cmap + 4 + 8 * i;
		var pos2 = encoding_record;
		if(pos2 == null) {
			pos2 = 0;
		}
		var ch12 = data.readU8(pos2);
		var ch22 = data.readU8(pos2 + 1);
		switch(ch22 | ch12 << 8) {
		case 0:
			var pos3 = encoding_record + 4;
			if(pos3 == null) {
				pos3 = 0;
			}
			var pos4 = pos3;
			if(pos4 == null) {
				pos4 = 0;
			}
			var ch13 = data.readU8(pos4);
			var ch23 = data.readU8(pos4 + 1);
			var ch3 = data.readU8(pos4 + 2);
			var ch4 = data.readU8(pos4 + 3);
			info.index_map = cmap + (ch4 | ch3 << 8 | ch23 << 16 | ch13 << 24);
			break;
		case 3:
			var pos5 = encoding_record + 2;
			if(pos5 == null) {
				pos5 = 0;
			}
			var ch14 = data.readU8(pos5);
			var ch24 = data.readU8(pos5 + 1);
			switch(ch24 | ch14 << 8) {
			case 1:case 10:
				var pos6 = encoding_record + 4;
				if(pos6 == null) {
					pos6 = 0;
				}
				var pos7 = pos6;
				if(pos7 == null) {
					pos7 = 0;
				}
				var ch15 = data.readU8(pos7);
				var ch25 = data.readU8(pos7 + 1);
				var ch31 = data.readU8(pos7 + 2);
				var ch41 = data.readU8(pos7 + 3);
				info.index_map = cmap + (ch41 | ch31 << 8 | ch25 << 16 | ch15 << 24);
				break;
			}
			break;
		}
	}
	if(info.index_map == 0) {
		return false;
	}
	var pos8 = info.head + 50;
	if(pos8 == null) {
		pos8 = 0;
	}
	var ch16 = data.readU8(pos8);
	var ch26 = data.readU8(pos8 + 1);
	info.indexToLocFormat = ch26 | ch16 << 8;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex = function(info,unicode_codepoint) {
	var data = info.data;
	var index_map = info.index_map;
	var pos = index_map;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = data.readU8(pos);
	var ch2 = data.readU8(pos + 1);
	var format = ch2 | ch1 << 8;
	if(format == 0) {
		var pos1 = index_map + 2;
		if(pos1 == null) {
			pos1 = 0;
		}
		var ch11 = data.readU8(pos1);
		var ch21 = data.readU8(pos1 + 1);
		var bytes = ch21 | ch11 << 8;
		if(unicode_codepoint < bytes - 6) {
			var pos2 = index_map + 6 + unicode_codepoint;
			if(pos2 == null) {
				pos2 = 0;
			}
			return data.readU8(pos2);
		}
		return 0;
	} else if(format == 6) {
		var pos3 = index_map + 6;
		if(pos3 == null) {
			pos3 = 0;
		}
		var ch12 = data.readU8(pos3);
		var ch22 = data.readU8(pos3 + 1);
		var first = ch22 | ch12 << 8;
		var pos4 = index_map + 8;
		if(pos4 == null) {
			pos4 = 0;
		}
		var ch13 = data.readU8(pos4);
		var ch23 = data.readU8(pos4 + 1);
		var count = ch23 | ch13 << 8;
		if(unicode_codepoint >= first && unicode_codepoint < first + count) {
			var pos5 = index_map + 10 + (unicode_codepoint - first) * 2;
			if(pos5 == null) {
				pos5 = 0;
			}
			var ch14 = data.readU8(pos5);
			var ch24 = data.readU8(pos5 + 1);
			return ch24 | ch14 << 8;
		}
		return 0;
	} else if(format == 2) {
		throw new js__$Boot_HaxeError("Error");
	} else if(format == 4) {
		var pos6 = index_map + 6;
		if(pos6 == null) {
			pos6 = 0;
		}
		var ch15 = data.readU8(pos6);
		var ch25 = data.readU8(pos6 + 1);
		var segcount = (ch25 | ch15 << 8) >> 1;
		var pos7 = index_map + 8;
		if(pos7 == null) {
			pos7 = 0;
		}
		var ch16 = data.readU8(pos7);
		var ch26 = data.readU8(pos7 + 1);
		var searchRange = (ch26 | ch16 << 8) >> 1;
		var pos8 = index_map + 10;
		if(pos8 == null) {
			pos8 = 0;
		}
		var ch17 = data.readU8(pos8);
		var ch27 = data.readU8(pos8 + 1);
		var entrySelector = ch27 | ch17 << 8;
		var pos9 = index_map + 12;
		if(pos9 == null) {
			pos9 = 0;
		}
		var ch18 = data.readU8(pos9);
		var ch28 = data.readU8(pos9 + 1);
		var rangeShift = (ch28 | ch18 << 8) >> 1;
		var endCount = index_map + 14;
		var search = endCount;
		if(unicode_codepoint > 65535) {
			return 0;
		}
		var pos10 = search + rangeShift * 2;
		if(pos10 == null) {
			pos10 = 0;
		}
		var ch19 = data.readU8(pos10);
		var ch29 = data.readU8(pos10 + 1);
		if(unicode_codepoint >= (ch29 | ch19 << 8)) {
			search += rangeShift * 2;
		}
		search -= 2;
		while(entrySelector != 0) {
			searchRange >>= 1;
			var pos11 = search + searchRange * 2;
			if(pos11 == null) {
				pos11 = 0;
			}
			var ch110 = data.readU8(pos11);
			var ch210 = data.readU8(pos11 + 1);
			var end = ch210 | ch110 << 8;
			if(unicode_codepoint > end) {
				search += searchRange * 2;
			}
			--entrySelector;
		}
		search += 2;
		var item = search - endCount >> 1 & 65535;
		var pos12 = endCount + 2 * item;
		if(pos12 == null) {
			pos12 = 0;
		}
		var ch111 = data.readU8(pos12);
		var ch211 = data.readU8(pos12 + 1);
		if(unicode_codepoint > (ch211 | ch111 << 8)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var pos13 = index_map + 14 + segcount * 2 + 2 + 2 * item;
		if(pos13 == null) {
			pos13 = 0;
		}
		var ch112 = data.readU8(pos13);
		var ch212 = data.readU8(pos13 + 1);
		var start = ch212 | ch112 << 8;
		if(unicode_codepoint < start) {
			return 0;
		}
		var pos14 = index_map + 14 + segcount * 6 + 2 + 2 * item;
		if(pos14 == null) {
			pos14 = 0;
		}
		var ch113 = data.readU8(pos14);
		var ch213 = data.readU8(pos14 + 1);
		var offset = ch213 | ch113 << 8;
		if(offset == 0) {
			var pos15 = index_map + 14 + segcount * 4 + 2 + 2 * item;
			if(pos15 == null) {
				pos15 = 0;
			}
			var ch114 = data.readU8(pos15);
			var ch214 = data.readU8(pos15 + 1);
			var n = ch214 | ch114 << 8;
			return unicode_codepoint + ((n & 32768) != 0 ? n - 65536 : n) & 65535;
		}
		var pos16 = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
		if(pos16 == null) {
			pos16 = 0;
		}
		var ch115 = data.readU8(pos16);
		var ch215 = data.readU8(pos16 + 1);
		return ch215 | ch115 << 8;
	} else if(format == 12 || format == 13) {
		var pos17 = index_map + 12;
		if(pos17 == null) {
			pos17 = 0;
		}
		var pos18 = pos17;
		if(pos18 == null) {
			pos18 = 0;
		}
		var ch116 = data.readU8(pos18);
		var ch216 = data.readU8(pos18 + 1);
		var ch3 = data.readU8(pos18 + 2);
		var ch4 = data.readU8(pos18 + 3);
		var ngroups = ch4 | ch3 << 8 | ch216 << 16 | ch116 << 24;
		var low = 0;
		var high = ngroups;
		while(low < high) {
			var mid = low + (high - low >> 1);
			var pos19 = index_map + 16 + mid * 12;
			if(pos19 == null) {
				pos19 = 0;
			}
			var pos20 = pos19;
			if(pos20 == null) {
				pos20 = 0;
			}
			var ch117 = data.readU8(pos20);
			var ch217 = data.readU8(pos20 + 1);
			var ch31 = data.readU8(pos20 + 2);
			var ch41 = data.readU8(pos20 + 3);
			var start_char = ch41 | ch31 << 8 | ch217 << 16 | ch117 << 24;
			var pos21 = index_map + 16 + mid * 12 + 4;
			if(pos21 == null) {
				pos21 = 0;
			}
			var pos22 = pos21;
			if(pos22 == null) {
				pos22 = 0;
			}
			var ch118 = data.readU8(pos22);
			var ch218 = data.readU8(pos22 + 1);
			var ch32 = data.readU8(pos22 + 2);
			var ch42 = data.readU8(pos22 + 3);
			var end_char = ch42 | ch32 << 8 | ch218 << 16 | ch118 << 24;
			if(unicode_codepoint < start_char) {
				high = mid;
			} else if(unicode_codepoint > end_char) {
				low = mid + 1;
			} else {
				var pos23 = index_map + 16 + mid * 12 + 8;
				if(pos23 == null) {
					pos23 = 0;
				}
				var pos24 = pos23;
				if(pos24 == null) {
					pos24 = 0;
				}
				var ch119 = data.readU8(pos24);
				var ch219 = data.readU8(pos24 + 1);
				var ch33 = data.readU8(pos24 + 2);
				var ch43 = data.readU8(pos24 + 3);
				var start_glyph = ch43 | ch33 << 8 | ch219 << 16 | ch119 << 24;
				if(format == 12) {
					return start_glyph + unicode_codepoint - start_char;
				} else {
					return start_glyph;
				}
			}
		}
		return 0;
	}
	throw new js__$Boot_HaxeError("Error");
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointShape = function(info,unicode_codepoint) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,unicode_codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_setvertex = function(v,type,x,y,cx,cy) {
	v.type = type;
	v.x = x;
	v.y = y;
	v.cx = cx;
	v.cy = cy;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset = function(info,glyph_index) {
	var g1;
	var g2;
	if(glyph_index >= info.numGlyphs) {
		return -1;
	}
	if(info.indexToLocFormat >= 2) {
		return -1;
	}
	if(info.indexToLocFormat == 0) {
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 2;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		var ch2 = p.readU8(pos + 1);
		g1 = info1 + (ch2 | ch1 << 8) * 2;
		var info2 = info.glyf;
		var p1 = info.data;
		var pos1 = info.loca + glyph_index * 2 + 2;
		if(pos1 == null) {
			pos1 = 0;
		}
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		g2 = info2 + (ch21 | ch11 << 8) * 2;
	} else {
		var info3 = info.glyf;
		var p2 = info.data;
		var pos2 = info.loca + glyph_index * 4;
		if(pos2 == null) {
			pos2 = 0;
		}
		var pos3 = pos2;
		if(pos3 == null) {
			pos3 = 0;
		}
		var ch12 = p2.readU8(pos3);
		var ch22 = p2.readU8(pos3 + 1);
		var ch3 = p2.readU8(pos3 + 2);
		var ch4 = p2.readU8(pos3 + 3);
		g1 = info3 + (ch4 | ch3 << 8 | ch22 << 16 | ch12 << 24);
		var info4 = info.glyf;
		var p3 = info.data;
		var pos4 = info.loca + glyph_index * 4 + 4;
		if(pos4 == null) {
			pos4 = 0;
		}
		var pos5 = pos4;
		if(pos5 == null) {
			pos5 = 0;
		}
		var ch13 = p3.readU8(pos5);
		var ch23 = p3.readU8(pos5 + 1);
		var ch31 = p3.readU8(pos5 + 2);
		var ch41 = p3.readU8(pos5 + 3);
		g2 = info4 + (ch41 | ch31 << 8 | ch23 << 16 | ch13 << 24);
	}
	if(g1 == g2) {
		return -1;
	} else {
		return g1;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox = function(info,glyph_index,rect) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return false;
	}
	var p = info.data;
	var pos = g + 2;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = g + 4;
	if(pos1 == null) {
		pos1 = 0;
	}
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = g + 6;
	if(pos2 == null) {
		pos2 = 0;
	}
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = g + 8;
	if(pos3 == null) {
		pos3 = 0;
	}
	var ch13 = p3.readU8(pos3);
	var ch23 = p3.readU8(pos3 + 1);
	var n3 = ch23 | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBox = function(info,codepoint,rect) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),rect);
};
kha_graphics2_truetype_StbTruetype.stbtt_IsGlyphEmpty = function(info,glyph_index) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return true;
	}
	var p = info.data;
	var pos = g;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	var numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
	return numberOfContours == 0;
};
kha_graphics2_truetype_StbTruetype.stbtt__close_shape = function(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
	if(start_off) {
		if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
		}
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
	} else if(was_off) {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
	}
	return num_vertices;
};
kha_graphics2_truetype_StbTruetype.copyVertices = function(from,to,offset,count) {
	var _g = 0;
	var _g1 = count;
	while(_g < _g1) {
		var i = _g++;
		to[offset + i] = from[i];
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape = function(info,glyph_index) {
	var data = info.data;
	var vertices = null;
	var num_vertices = 0;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return null;
	}
	var pos = g;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = data.readU8(pos);
	var ch2 = data.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	var numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
	if(numberOfContours > 0) {
		var flags = 0;
		var j = 0;
		var next_move = 0;
		var off = 0;
		var was_off = false;
		var start_off = false;
		var endPtsOfContoursOffset = g + 10;
		var pos1 = endPtsOfContoursOffset + numberOfContours * 2;
		if(pos1 == null) {
			pos1 = 0;
		}
		var ch11 = data.readU8(pos1);
		var ch21 = data.readU8(pos1 + 1);
		var ins = ch21 | ch11 << 8;
		var pointsIndex = endPtsOfContoursOffset + numberOfContours * 2 + 2 + ins;
		var pos2 = endPtsOfContoursOffset + numberOfContours * 2 - 2;
		if(pos2 == null) {
			pos2 = 0;
		}
		var ch12 = data.readU8(pos2);
		var ch22 = data.readU8(pos2 + 1);
		var n1 = 1 + (ch22 | ch12 << 8);
		var m = n1 + 2 * numberOfContours;
		var this1 = new Array(m);
		vertices = this1;
		if(vertices == null) {
			return null;
		} else {
			var _g = 0;
			var _g1 = vertices.length;
			while(_g < _g1) {
				var i = _g++;
				vertices[i] = new kha_graphics2_truetype_Stbtt_$vertex();
			}
		}
		next_move = 0;
		var flagcount = 0;
		off = m - n1;
		var _g2 = 0;
		var _g11 = n1;
		while(_g2 < _g11) {
			var i1 = _g2++;
			if(flagcount == 0) {
				flags = data.readU8(pointsIndex++);
				if((flags & 8) != 0) {
					flagcount = data.readU8(pointsIndex++);
				}
			} else {
				--flagcount;
			}
			vertices[off + i1].type = flags;
		}
		var x = 0;
		var _g21 = 0;
		var _g3 = n1;
		while(_g21 < _g3) {
			var i2 = _g21++;
			flags = vertices[off + i2].type;
			if((flags & 2) != 0) {
				var dx = data.readU8(pointsIndex++);
				x += (flags & 16) != 0 ? dx : -dx;
			} else if((flags & 16) == 0) {
				var value;
				var ch13 = data.readU8(pointsIndex);
				var ch23 = data.readU8(pointsIndex + 1);
				var n2 = ch23 | ch13 << 8;
				if((n2 & 32768) != 0) {
					value = n2 - 65536;
				} else {
					value = n2;
				}
				x += value;
				pointsIndex += 2;
			}
			vertices[off + i2].x = x;
		}
		var y = 0;
		var _g4 = 0;
		var _g5 = n1;
		while(_g4 < _g5) {
			var i3 = _g4++;
			flags = vertices[off + i3].type;
			if((flags & 4) != 0) {
				var dy = data.readU8(pointsIndex++);
				y += (flags & 32) != 0 ? dy : -dy;
			} else if((flags & 32) == 0) {
				var value1;
				var ch14 = data.readU8(pointsIndex);
				var ch24 = data.readU8(pointsIndex + 1);
				var n3 = ch24 | ch14 << 8;
				if((n3 & 32768) != 0) {
					value1 = n3 - 65536;
				} else {
					value1 = n3;
				}
				y += value1;
				pointsIndex += 2;
			}
			vertices[off + i3].y = y;
		}
		num_vertices = 0;
		var scy = 0;
		var scx = scy;
		var cy = scx;
		var cx = cy;
		var sy = cx;
		var sx = sy;
		var i4 = 0;
		while(i4 < n1) {
			flags = vertices[off + i4].type;
			x = vertices[off + i4].x;
			y = vertices[off + i4].y;
			if(next_move == i4) {
				if(i4 != 0) {
					num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
				}
				start_off = (flags & 1) == 0;
				if(start_off) {
					scx = x;
					scy = y;
					if((vertices[off + i4 + 1].type & 1) == 0) {
						sx = x + vertices[off + i4 + 1].x >> 1;
						sy = y + vertices[off + i4 + 1].y >> 1;
					} else {
						sx = vertices[off + i4 + 1].x;
						sy = vertices[off + i4 + 1].y;
						++i4;
					}
				} else {
					sx = x;
					sy = y;
				}
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
				was_off = false;
				var pos3 = endPtsOfContoursOffset + j * 2;
				if(pos3 == null) {
					pos3 = 0;
				}
				var ch15 = data.readU8(pos3);
				var ch25 = data.readU8(pos3 + 1);
				next_move = 1 + (ch25 | ch15 << 8);
				++j;
			} else if((flags & 1) == 0) {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
				}
				cx = x;
				cy = y;
				was_off = true;
			} else {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
				}
				was_off = false;
			}
			++i4;
		}
		num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
	} else if(numberOfContours == -1) {
		var more = 1;
		var compIndex = g + 10;
		num_vertices = 0;
		vertices = null;
		while(more != 0) {
			var comp_num_verts = 0;
			var i5;
			var comp_verts = null;
			var tmp = null;
			var mtx0 = 1;
			var mtx1 = 0;
			var mtx2 = 0;
			var mtx3 = 1;
			var mtx4 = 0;
			var mtx5 = 0;
			var pos4 = compIndex;
			if(pos4 == null) {
				pos4 = 0;
			}
			var ch16 = data.readU8(pos4);
			var ch26 = data.readU8(pos4 + 1);
			var n4 = ch26 | ch16 << 8;
			var flags1 = (n4 & 32768) != 0 ? n4 - 65536 : n4;
			var pos5 = compIndex += 2;
			if(pos5 == null) {
				pos5 = 0;
			}
			var ch17 = data.readU8(pos5);
			var ch27 = data.readU8(pos5 + 1);
			var n5 = ch27 | ch17 << 8;
			var gidx = (n5 & 32768) != 0 ? n5 - 65536 : n5;
			compIndex += 2;
			if((flags1 & 2) != 0) {
				if((flags1 & 1) != 0) {
					var pos6 = compIndex;
					if(pos6 == null) {
						pos6 = 0;
					}
					var ch18 = data.readU8(pos6);
					var ch28 = data.readU8(pos6 + 1);
					var n6 = ch28 | ch18 << 8;
					mtx4 = (n6 & 32768) != 0 ? n6 - 65536 : n6;
					var pos7 = compIndex += 2;
					if(pos7 == null) {
						pos7 = 0;
					}
					var ch19 = data.readU8(pos7);
					var ch29 = data.readU8(pos7 + 1);
					var n7 = ch29 | ch19 << 8;
					mtx5 = (n7 & 32768) != 0 ? n7 - 65536 : n7;
					compIndex += 2;
				} else {
					var pos8 = compIndex;
					if(pos8 == null) {
						pos8 = 0;
					}
					var n8 = data.readU8(pos8);
					mtx4 = n8 >= 128 ? n8 - 256 : n8;
					var pos9 = ++compIndex;
					if(pos9 == null) {
						pos9 = 0;
					}
					var n9 = data.readU8(pos9);
					mtx5 = n9 >= 128 ? n9 - 256 : n9;
					++compIndex;
				}
			} else {
				throw new js__$Boot_HaxeError("Error");
			}
			if((flags1 & 8) != 0) {
				var pos10 = compIndex;
				if(pos10 == null) {
					pos10 = 0;
				}
				var ch110 = data.readU8(pos10);
				var ch210 = data.readU8(pos10 + 1);
				var n10 = ch210 | ch110 << 8;
				mtx3 = ((n10 & 32768) != 0 ? n10 - 65536 : n10) / 16384.0;
				mtx0 = mtx3;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
			} else if((flags1 & 64) != 0) {
				var pos11 = compIndex;
				if(pos11 == null) {
					pos11 = 0;
				}
				var ch111 = data.readU8(pos11);
				var ch211 = data.readU8(pos11 + 1);
				var n11 = ch211 | ch111 << 8;
				mtx0 = ((n11 & 32768) != 0 ? n11 - 65536 : n11) / 16384.0;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
				var pos12 = compIndex;
				if(pos12 == null) {
					pos12 = 0;
				}
				var ch112 = data.readU8(pos12);
				var ch212 = data.readU8(pos12 + 1);
				var n12 = ch212 | ch112 << 8;
				mtx3 = ((n12 & 32768) != 0 ? n12 - 65536 : n12) / 16384.0;
				compIndex += 2;
			} else if((flags1 & 128) != 0) {
				var pos13 = compIndex;
				if(pos13 == null) {
					pos13 = 0;
				}
				var ch113 = data.readU8(pos13);
				var ch213 = data.readU8(pos13 + 1);
				var n13 = ch213 | ch113 << 8;
				mtx0 = ((n13 & 32768) != 0 ? n13 - 65536 : n13) / 16384.0;
				var pos14 = compIndex += 2;
				if(pos14 == null) {
					pos14 = 0;
				}
				var ch114 = data.readU8(pos14);
				var ch214 = data.readU8(pos14 + 1);
				var n14 = ch214 | ch114 << 8;
				mtx1 = ((n14 & 32768) != 0 ? n14 - 65536 : n14) / 16384.0;
				var pos15 = compIndex += 2;
				if(pos15 == null) {
					pos15 = 0;
				}
				var ch115 = data.readU8(pos15);
				var ch215 = data.readU8(pos15 + 1);
				var n15 = ch215 | ch115 << 8;
				mtx2 = ((n15 & 32768) != 0 ? n15 - 65536 : n15) / 16384.0;
				var pos16 = compIndex += 2;
				if(pos16 == null) {
					pos16 = 0;
				}
				var ch116 = data.readU8(pos16);
				var ch216 = data.readU8(pos16 + 1);
				var n16 = ch216 | ch116 << 8;
				mtx3 = ((n16 & 32768) != 0 ? n16 - 65536 : n16) / 16384.0;
				compIndex += 2;
			}
			var m1 = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
			var n17 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
			comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,gidx);
			comp_num_verts = comp_verts == null ? 0 : comp_verts.length;
			if(comp_num_verts > 0) {
				var _g6 = 0;
				var _g12 = comp_num_verts;
				while(_g6 < _g12) {
					var i6 = _g6++;
					var v = comp_verts[i6];
					var x1 = v.x;
					var y1 = v.y;
					v.x = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.y = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
					x1 = v.cx;
					y1 = v.cy;
					v.cx = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.cy = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
				}
				var this2 = new Array(num_vertices + comp_num_verts);
				tmp = this2;
				if(tmp == null) {
					return null;
				}
				if(num_vertices > 0) {
					kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
				}
				kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
				vertices = tmp;
				num_vertices += comp_num_verts;
			}
			more = flags1 & 32;
		}
	} else if(numberOfContours < 0) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(vertices == null) {
		return null;
	}
	if(vertices.length < num_vertices) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(num_vertices < vertices.length) {
		var this3 = new Array(num_vertices);
		var tmp1 = this3;
		kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp1,0,num_vertices);
		return tmp1;
	} else {
		return vertices;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics = function(info,glyph_index) {
	var p = info.data;
	var pos = info.hhea + 34;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var numOfLongHorMetrics = ch2 | ch1 << 8;
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
	if(glyph_index < numOfLongHorMetrics) {
		var p1 = info.data;
		var pos1 = info.hmtx + 4 * glyph_index;
		if(pos1 == null) {
			pos1 = 0;
		}
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		var n = ch21 | ch11 << 8;
		metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
		var p2 = info.data;
		var pos2 = info.hmtx + 4 * glyph_index + 2;
		if(pos2 == null) {
			pos2 = 0;
		}
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var n1 = ch22 | ch12 << 8;
		metrics.leftSideBearing = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	} else {
		var p3 = info.data;
		var pos3 = info.hmtx + 4 * (numOfLongHorMetrics - 1);
		if(pos3 == null) {
			pos3 = 0;
		}
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var n2 = ch23 | ch13 << 8;
		metrics.advanceWidth = (n2 & 32768) != 0 ? n2 - 65536 : n2;
		var p4 = info.data;
		var pos4 = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
		if(pos4 == null) {
			pos4 = 0;
		}
		var ch14 = p4.readU8(pos4);
		var ch24 = p4.readU8(pos4 + 1);
		var n3 = ch24 | ch14 << 8;
		metrics.leftSideBearing = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	}
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphKernAdvance = function(info,glyph1,glyph2) {
	var kern = info.kern;
	var data = info.data;
	var straw;
	var m;
	if(info.kern == 0) {
		return 0;
	}
	var pos = kern + 2;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = data.readU8(pos);
	var ch2 = data.readU8(pos + 1);
	if((ch2 | ch1 << 8) < 1) {
		return 0;
	}
	var pos1 = kern + 8;
	if(pos1 == null) {
		pos1 = 0;
	}
	var ch11 = data.readU8(pos1);
	var ch21 = data.readU8(pos1 + 1);
	if((ch21 | ch11 << 8) != 1) {
		return 0;
	}
	var l = 0;
	var pos2 = kern + 10;
	if(pos2 == null) {
		pos2 = 0;
	}
	var ch12 = data.readU8(pos2);
	var ch22 = data.readU8(pos2 + 1);
	var r = (ch22 | ch12 << 8) - 1;
	var needle = glyph1 << 16 | glyph2;
	while(l <= r) {
		m = l + r >> 1;
		var pos3 = kern + 18 + m * 6;
		if(pos3 == null) {
			pos3 = 0;
		}
		var pos4 = pos3;
		if(pos4 == null) {
			pos4 = 0;
		}
		var ch13 = data.readU8(pos4);
		var ch23 = data.readU8(pos4 + 1);
		var ch3 = data.readU8(pos4 + 2);
		var ch4 = data.readU8(pos4 + 3);
		straw = ch4 | ch3 << 8 | ch23 << 16 | ch13 << 24;
		if(needle < straw) {
			r = m - 1;
		} else if(needle > straw) {
			l = m + 1;
		} else {
			var pos5 = kern + 22 + m * 6;
			if(pos5 == null) {
				pos5 = 0;
			}
			var ch14 = data.readU8(pos5);
			var ch24 = data.readU8(pos5 + 1);
			var n = ch24 | ch14 << 8;
			if((n & 32768) != 0) {
				return n - 65536;
			} else {
				return n;
			}
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointKernAdvance = function(info,ch1,ch2) {
	if(info.kern == 0) {
		return 0;
	}
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphKernAdvance(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch1),kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch2));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointHMetrics = function(info,codepoint) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics = function(info) {
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
	var p = info.data;
	var pos = info.hhea + 4;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	metrics.ascent = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	if(pos1 == null) {
		pos1 = 0;
	}
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	metrics.descent = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.hhea + 8;
	if(pos2 == null) {
		pos2 = 0;
	}
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	metrics.lineGap = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontBoundingBox = function(info) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	var p = info.data;
	var pos = info.head + 36;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.head + 38;
	if(pos1 == null) {
		pos1 = 0;
	}
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.head + 40;
	if(pos2 == null) {
		pos2 = 0;
	}
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = info.head + 42;
	if(pos3 == null) {
		pos3 = 0;
	}
	var ch13 = p3.readU8(pos3);
	var ch23 = p3.readU8(pos3 + 1);
	var n3 = ch23 | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight = function(info,height) {
	var p = info.data;
	var pos = info.hhea + 4;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	if(pos1 == null) {
		pos1 = 0;
	}
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	var fheight = ((n & 32768) != 0 ? n - 65536 : n) - ((n1 & 32768) != 0 ? n1 - 65536 : n1);
	return height / fheight;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForMappingEmToPixels = function(info,pixels) {
	var p = info.data;
	var pos = info.head + 18;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var unitsPerEm = ch2 | ch1 << 8;
	return pixels / unitsPerEm;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel = function(font,glyph,scale_x,scale_y,shift_x,shift_y) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
		rect.x0 = 0;
		rect.y0 = 0;
		rect.x1 = 0;
		rect.y1 = 0;
	} else {
		var x0 = rect.x0;
		var x1 = rect.x1;
		var y0 = rect.y0;
		var y1 = rect.y1;
		rect.x0 = Math.floor(x0 * scale_x + shift_x);
		rect.y0 = Math.floor(-y1 * scale_y + shift_y);
		rect.x1 = Math.ceil(x1 * scale_x + shift_x);
		rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
	}
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox = function(font,glyph,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel = function(font,codepoint,scale_x,scale_y,shift_x,shift_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(font,codepoint),scale_x,scale_y,shift_x,shift_y);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBox = function(font,codepoint,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel(font,codepoint,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt__new_active = function(e,eIndex,off_x,start_point) {
	var z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
	var dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
	if(z == null) {
		return z;
	}
	z.fdx = dxdy;
	z.fdy = dxdy != 0.0 ? 1.0 / dxdy : 0.0;
	z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
	z.fx -= off_x;
	z.direction = e[eIndex].invert ? 1.0 : -1.0;
	z.sy = e[eIndex].y0;
	z.ey = e[eIndex].y1;
	z.next = null;
	return z;
};
kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge = function(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
	if(y0 == y1) {
		return;
	}
	if(!(y0 < y1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(!(e.sy <= e.ey)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(y0 > e.ey) {
		return;
	}
	if(y1 < e.sy) {
		return;
	}
	if(y0 < e.sy) {
		x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
		y0 = e.sy;
	}
	if(y1 > e.ey) {
		x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
		y1 = e.ey;
	}
	if(x0 == x) {
		if(!(x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 == x + 1) {
		if(!(x1 >= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 <= x) {
		if(!(x1 <= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 >= x + 1) {
		if(!(x1 >= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(!(x1 >= x && x1 <= x + 1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(x0 <= x && x1 <= x) {
		var _g = scanlineIndex + x;
		var _g1 = scanline;
		_g1[_g] = _g1[_g] + e.direction * (y1 - y0);
	} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
		if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var _g2 = scanlineIndex + x;
		var _g11 = scanline;
		_g11[_g2] = _g11[_g2] + e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new = function(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
	var y_bottom = y_top + 1;
	while(e != null) {
		if(!(e.ey >= y_top)) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(e.fdx == 0) {
			var x0 = e.fx;
			if(x0 < len) {
				if(x0 >= 0) {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
				}
			}
		} else {
			var x01 = e.fx;
			var dx = e.fdx;
			var xb = x01 + dx;
			var x_top;
			var x_bottom;
			var sy0;
			var sy1;
			var dy = e.fdy;
			if(!(e.sy <= y_bottom && e.ey >= y_top)) {
				throw new js__$Boot_HaxeError("Error");
			}
			if(e.sy > y_top) {
				x_top = x01 + dx * (e.sy - y_top);
				sy0 = e.sy;
			} else {
				x_top = x01;
				sy0 = y_top;
			}
			if(e.ey < y_bottom) {
				x_bottom = x01 + dx * (e.ey - y_top);
				sy1 = e.ey;
			} else {
				x_bottom = xb;
				sy1 = y_bottom;
			}
			if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
				if((x_top | 0) == (x_bottom | 0)) {
					var x = x_top | 0;
					var height = sy1 - sy0;
					if(!(x >= 0 && x < len)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g = x;
					var _g1 = scanline;
					_g1[_g] = _g1[_g] + e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
					var _g2 = scanline_fillIndex + x;
					var _g11 = scanline_fill;
					_g11[_g2] = _g11[_g2] + e.direction * height;
				} else {
					var x1;
					if(x_top > x_bottom) {
						sy0 = y_bottom - (sy0 - y_top);
						sy1 = y_bottom - (sy1 - y_top);
						var t = sy0;
						sy0 = sy1;
						sy1 = t;
						t = x_bottom;
						x_bottom = x_top;
						x_top = t;
						dx = -dx;
						dy = -dy;
						t = x01;
						x01 = xb;
						xb = t;
					}
					var x11 = x_top | 0;
					var x2 = x_bottom | 0;
					var y_crossing = (x11 + 1 - x01) * dy + y_top;
					var sign = e.direction;
					var area = sign * (y_crossing - sy0);
					var _g3 = x11;
					var _g12 = scanline;
					_g12[_g3] = _g12[_g3] + area * (1 - (x_top - x11 + (x11 + 1 - x11)) / 2);
					var step = sign * dy;
					var _g4 = x11 + 1;
					var _g13 = x2;
					while(_g4 < _g13) {
						var x3 = _g4++;
						var _g5 = x3;
						var _g14 = scanline;
						_g14[_g5] = _g14[_g5] + (area + step / 2);
						area += step;
					}
					y_crossing += dy * (x2 - (x11 + 1));
					if(!(Math.abs(area) <= 1.01)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g21 = x2;
					var _g31 = scanline;
					_g31[_g21] = _g31[_g21] + (area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing));
					var _g22 = scanline_fillIndex + x2;
					var _g32 = scanline_fill;
					_g32[_g22] = _g32[_g22] + sign * (sy1 - sy0);
				}
			} else {
				var _g6 = 0;
				var _g15 = len;
				while(_g6 < _g15) {
					var x4 = _g6++;
					var y0 = y_top;
					var x12 = x4;
					var x21 = x4 + 1;
					var x31 = xb;
					var y3 = y_bottom;
					var y1 = (x4 - x01) / dx + y_top;
					var y2 = (x4 + 1 - x01) / dx + y_top;
					if(x01 < x12 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x12 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x12 && x31 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x31 < x12 && x01 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x21 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x21 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x31,y3);
					}
				}
			}
		}
		e = e.next;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges = function(result,e,n,vsubsample,off_x,off_y) {
	var active = null;
	var j = 0;
	var scanline;
	var scanline2Index = 0;
	var eIndex = 0;
	if(result.w > 64) {
		var this1 = new Array(result.w * 2 + 1);
		scanline = this1;
	} else {
		var this2 = new Array(129);
		scanline = this2;
	}
	var scanline2 = scanline;
	scanline2Index = result.w;
	var y = off_y;
	e[eIndex + n].y0 = off_y + result.h + 1;
	while(j < result.h) {
		var scan_y_top = y + 0.0;
		var scan_y_bottom = y + 1.0;
		var step_value = active;
		var step_parent = null;
		var _g = 0;
		var _g1 = result.w;
		while(_g < _g1) {
			var i = _g++;
			scanline[i] = 0;
		}
		var _g2 = 0;
		var _g3 = result.w + 1;
		while(_g2 < _g3) {
			var i1 = _g2++;
			scanline2[scanline2Index + i1] = 0;
		}
		while(step_value != null) {
			var z = step_value;
			if(z.ey <= scan_y_top) {
				if(step_parent == null) {
					active = z.next;
					step_value = z.next;
				} else {
					step_parent.next = z.next;
					step_value = z.next;
				}
				if(z.direction == 0) {
					throw new js__$Boot_HaxeError("Error");
				}
				z.direction = 0;
			} else {
				step_parent = step_value;
				step_value = step_value.next;
			}
		}
		while(e[eIndex].y0 <= scan_y_bottom) {
			if(e[eIndex].y0 != e[eIndex].y1) {
				var z1 = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
				if(!(z1.ey >= scan_y_top)) {
					throw new js__$Boot_HaxeError("Error");
				}
				z1.next = active;
				active = z1;
			}
			++eIndex;
		}
		if(active != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
		}
		var sum = 0;
		var _g4 = 0;
		var _g5 = result.w;
		while(_g4 < _g5) {
			var i2 = _g4++;
			sum += scanline2[scanline2Index + i2];
			var k = scanline[i2] + sum;
			k = Math.abs(k) * 255.0 + 0.5;
			var m = k | 0;
			if(m > 255) {
				m = 255;
			}
			result.pixels.writeU8(result.pixels_offset + j * result.stride + i2,m);
		}
		step_parent = null;
		step_value = active;
		while(step_value != null) {
			var z2 = step_value;
			z2.fx += z2.fdx;
			step_parent = step_value;
			step_value = step_value.next;
		}
		++y;
		++j;
	}
};
kha_graphics2_truetype_StbTruetype.STBTT__COMPARE = function(a,b) {
	return a.y0 < b.y0;
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort = function(p,n) {
	var i;
	var j;
	var _g = 1;
	var _g1 = n;
	while(_g < _g1) {
		var i1 = _g++;
		var t = p[i1];
		var a = t;
		j = i1;
		while(j > 0) {
			var b = p[j - 1];
			var c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(a,b);
			if(!c) {
				break;
			}
			p[j] = p[j - 1];
			--j;
		}
		if(i1 != j) {
			p[j] = t;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort = function(p,pIndex,n) {
	while(n > 12) {
		var t;
		var c;
		var m = n >> 1;
		var c01 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]);
		var c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
		if(c01 != c12) {
			c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
			var z = c == c12 ? 0 : n - 1;
			t = p[pIndex + z];
			p[pIndex + z] = p[pIndex + m];
			p[pIndex + m] = t;
		}
		t = p[pIndex];
		p[pIndex] = p[pIndex + m];
		p[pIndex + m] = t;
		var i = 1;
		var j = n - 1;
		while(true) {
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
			if(i >= j) {
				break;
			}
			t = p[pIndex + i];
			p[pIndex + i] = p[pIndex + j];
			p[pIndex + j] = t;
			++i;
			--j;
		}
		if(j < n - i) {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
			pIndex += i;
			n -= i;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
			n = j;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges = function(p,n) {
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize = function(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
	var y_scale_inv = invert ? -scale_y : scale_y;
	var i;
	var j;
	var k;
	var vsubsample = 1;
	var ptsIndex = 0;
	var n = 0;
	var _g = 0;
	var _g1 = windings;
	while(_g < _g1) {
		var i1 = _g++;
		n += wcount[i1];
	}
	var this1 = new Array(n + 1);
	var e = this1;
	if(e == null) {
		return;
	} else {
		var _g2 = 0;
		var _g3 = e.length;
		while(_g2 < _g3) {
			var i2 = _g2++;
			e[i2] = new kha_graphics2_truetype_Stbtt_$_$edge();
		}
	}
	n = 0;
	var m = 0;
	var _g21 = 0;
	var _g31 = windings;
	while(_g21 < _g31) {
		var i3 = _g21++;
		var p = pts;
		var pIndex = ptsIndex + m;
		m += wcount[i3];
		j = wcount[i3] - 1;
		var _g22 = 0;
		var _g32 = wcount[i3];
		while(_g22 < _g32) {
			var k1 = _g22++;
			var a = k1;
			var b = j;
			if(p[pIndex + j].y == p[pIndex + k1].y) {
				j = k1;
				continue;
			}
			e[n].invert = false;
			if(invert ? p[pIndex + j].y > p[pIndex + k1].y : p[pIndex + j].y < p[pIndex + k1].y) {
				e[n].invert = true;
				a = j;
				b = k1;
			}
			e[n].x0 = p[pIndex + a].x * scale_x + shift_x;
			e[n].y0 = (p[pIndex + a].y * y_scale_inv + shift_y) * vsubsample;
			e[n].x1 = p[pIndex + b].x * scale_x + shift_x;
			e[n].y1 = (p[pIndex + b].y * y_scale_inv + shift_y) * vsubsample;
			++n;
			j = k1;
		}
	}
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
	kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y);
};
kha_graphics2_truetype_StbTruetype.stbtt__add_point = function(points,n,x,y) {
	if(points == null) {
		return;
	}
	points[n].x = x;
	points[n].y = y;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve = function(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
	var mx = (x0 + 2 * x1 + x2) / 4;
	var my = (y0 + 2 * y1 + y2) / 4;
	var dx = (x0 + x2) / 2 - mx;
	var dy = (y0 + y2) / 2 - my;
	if(n > 16) {
		return 1;
	}
	if(dx * dx + dy * dy > objspace_flatness_squared) {
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
		num_points.value += 1;
	}
	return 1;
};
kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves = function(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
	var points = null;
	var num_points = 0;
	var objspace_flatness_squared = objspace_flatness * objspace_flatness;
	var i;
	var n = 0;
	var start = 0;
	var pass;
	var _g = 0;
	var _g1 = num_verts;
	while(_g < _g1) {
		var i1 = _g++;
		if(vertices[i1].type == 1) {
			++n;
		}
	}
	num_contours.value = n;
	if(n == 0) {
		return null;
	}
	var this1 = new Array(n);
	contour_lengths.value = this1;
	if(contour_lengths.value == null) {
		num_contours.value = 0;
		return null;
	}
	var _g2 = 0;
	while(_g2 < 2) {
		var pass1 = _g2++;
		var x = 0;
		var y = 0;
		if(pass1 == 1) {
			var this2 = new Array(num_points);
			points = this2;
			if(points == null) {
				contour_lengths.value = null;
				num_contours.value = 0;
				return null;
			} else {
				var _g21 = 0;
				var _g3 = points.length;
				while(_g21 < _g3) {
					var i2 = _g21++;
					points[i2] = new kha_graphics2_truetype_Stbtt_$_$point();
				}
			}
		}
		num_points = 0;
		n = -1;
		var _g22 = 0;
		var _g31 = num_verts;
		while(_g22 < _g31) {
			var i3 = _g22++;
			switch(vertices[i3].type) {
			case 1:
				if(n >= 0) {
					contour_lengths.value[n] = num_points - start;
				}
				++n;
				start = num_points;
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 2:
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 3:
				var num_points_reference = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i3].cx,vertices[i3].cy,vertices[i3].x,vertices[i3].y,objspace_flatness_squared,0);
				num_points = num_points_reference.value;
				x = vertices[i3].x;
				y = vertices[i3].y;
				break;
			}
		}
		contour_lengths.value[n] = num_points - start;
	}
	return points;
};
kha_graphics2_truetype_StbTruetype.stbtt_Rasterize = function(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
	var scale = scale_x > scale_y ? scale_y : scale_x;
	var winding_count = 0;
	var winding_lengths = null;
	var winding_count_reference = { value : winding_count};
	var winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
	var windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / scale,winding_lengths_reference,winding_count_reference);
	winding_count = winding_count_reference.value;
	winding_lengths = winding_lengths_reference.value;
	if(windings != null) {
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel = function(info,scale_x,scale_y,shift_x,shift_y,glyph,region) {
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices.length;
	if(scale_x == 0) {
		scale_x = scale_y;
	}
	if(scale_y == 0) {
		if(scale_x == 0) {
			return null;
		}
		scale_y = scale_x;
	}
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	var ix0 = rect.x0;
	var iy0 = rect.y0;
	var ix1 = rect.x1;
	var iy1 = rect.y1;
	gbm.w = ix1 - ix0;
	gbm.h = iy1 - iy0;
	gbm.pixels = null;
	region.width = gbm.w;
	region.height = gbm.h;
	region.xoff = ix0;
	region.yoff = iy0;
	if(gbm.w != 0 && gbm.h != 0) {
		gbm.pixels = kha_internal_BytesBlob.alloc(gbm.w * gbm.h);
		if(gbm.pixels != null) {
			gbm.stride = gbm.w;
			kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
		}
	}
	return gbm.pixels;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmap = function(info,scale_x,scale_y,glyph,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,glyph,region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
	var ix0 = 0;
	var iy0 = 0;
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices == null ? 0 : vertices.length;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	gbm.pixels = output;
	gbm.pixels_offset = output_offset;
	gbm.w = out_w;
	gbm.h = out_h;
	gbm.stride = out_stride;
	if(gbm.w != 0 && gbm.h != 0) {
		kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapSubpixel = function(info,scale_x,scale_y,shift_x,shift_y,codepoint,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,codepoint) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmap = function(info,scale_x,scale_y,codepoint,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,codepoint,region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,codepoint) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,codepoint);
};
kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap = function(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
	var f = new kha_graphics2_truetype_Stbtt_$fontinfo();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
		return -1;
	}
	var y = 1;
	var x = y;
	var bottom_y = 1;
	var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
	var i = 0;
	var _g = 0;
	while(_g < chars.length) {
		var index = chars[_g];
		++_g;
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index);
		var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g);
		var advance = metrics.advanceWidth;
		var lsb = metrics.leftSideBearing;
		var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
		var x0 = rect.x0;
		var y0 = rect.y0;
		var x1 = rect.x1;
		var y1 = rect.y1;
		var gw = x1 - x0;
		var gh = y1 - y0;
		if(x + gw + 1 >= pw) {
			y = bottom_y;
			x = 1;
		}
		if(y + gh + 1 >= ph) {
			return -i;
		}
		if(x + gw >= pw) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(y + gh >= ph) {
			throw new js__$Boot_HaxeError("Error");
		}
		chardata[i].x0 = x;
		chardata[i].y0 = y;
		chardata[i].x1 = x + gw;
		chardata[i].y1 = y + gh;
		chardata[i].xadvance = scale * advance;
		chardata[i].xoff = x0;
		chardata[i].yoff = y0;
		x = x + gw + 1;
		if(y + gh + 1 > bottom_y) {
			bottom_y = y + gh + 1;
		}
		++i;
	}
	var _g1 = 0;
	var _g2 = pw * ph;
	while(_g1 < _g2) {
		var i1 = _g1++;
		pixels.writeU8(i1,0);
	}
	i = 0;
	var ch;
	var _g3 = 0;
	while(_g3 < chars.length) {
		var index1 = chars[_g3];
		++_g3;
		var g1 = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index1);
		ch = chardata[i];
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,ch.x0 + ch.y0 * pw,ch.x1 - ch.x0,ch.y1 - ch.y0,pw,scale,scale,g1);
		++i;
	}
	return bottom_y;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetBakedQuad = function(chardata,pw,ph,char_index,xpos,ypos,q,opengl_fillrule) {
	var d3d_bias = opengl_fillrule ? 0 : -0.5;
	var ipw = 1.0 / pw;
	var iph = 1.0 / ph;
	var b = chardata[char_index];
	var round_x = Math.floor(xpos.value + b.xoff + 0.5);
	var round_y = Math.floor(ypos.value + b.yoff + 0.5);
	q.x0 = round_x + d3d_bias;
	q.y0 = round_y + d3d_bias;
	q.x1 = round_x + b.x1 - b.x0 + d3d_bias;
	q.y1 = round_y + b.y1 - b.y0 + d3d_bias;
	q.s0 = b.x0 * ipw;
	q.t0 = b.y0 * iph;
	q.s1 = b.x1 * ipw;
	q.t1 = b.y1 * iph;
	xpos.value += b.xadvance;
};
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = true;
kha_graphics4_ConstantLocation.__isInterface__ = true;
var kha_graphics4_CubeMap = function(size,format,renderTarget,depthStencilFormat) {
	this.isDepthAttachment = false;
	this.depthTexture = null;
	this.texture = null;
	this.frameBuffer = null;
	this.myWidth = size;
	this.myHeight = size;
	this.format = format;
	this.renderTarget = renderTarget;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = true;
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
kha_graphics4_CubeMap.createRenderTarget = function(size,format,depthStencil,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(format == null) {
		format = 0;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	return new kha_graphics4_CubeMap(size,format,true,depthStencil);
};
kha_graphics4_CubeMap.prototype = {
	myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,depthStencilFormat: null
	,graphics4: null
	,frameBuffer: null
	,texture: null
	,depthTexture: null
	,isDepthAttachment: null
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
		kha_SystemImpl.gl.texParameteri(34067,10240,9729);
		kha_SystemImpl.gl.texParameteri(34067,10241,9729);
		kha_SystemImpl.gl.texParameteri(34067,10242,33071);
		kha_SystemImpl.gl.texParameteri(34067,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
			}
			if(this.format == 3) {
				kha_SystemImpl.gl.texParameteri(34067,10240,9728);
				kha_SystemImpl.gl.texParameteri(34067,10241,9728);
				this.isDepthAttachment = true;
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(34067,colortex);
					kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34069,colortex,0);
					kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34070,colortex,0);
					kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34071,colortex,0);
					kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34072,colortex,0);
					kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34073,colortex,0);
					kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34074,colortex,0);
					kha_SystemImpl.gl.bindTexture(34067,this.texture);
				}
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		}
		kha_SystemImpl.gl.bindTexture(34067,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			if(depthStencilFormat == 1) {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.myWidth,this.myHeight,0,6402,5125,null);
			} else {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
			}
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36096,34067,this.depthTexture,0);
			break;
		case 2:case 3:case 4:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.myWidth,this.myHeight,0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,33306,34067,this.depthTexture,0);
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
	}
	,unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,width: null
	,get_width: function() {
		return this.myWidth;
	}
	,height: null
	,get_height: function() {
		return this.myHeight;
	}
	,g1: null
	,get_g1: function() {
		return null;
	}
	,g2: null
	,get_g2: function() {
		return null;
	}
	,g4: null
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,__class__: kha_graphics4_CubeMap
};
var kha_graphics4_FragmentShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35632;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = true;
kha_graphics4_FragmentShader.fromSource = function(source) {
	var shader = new kha_graphics4_FragmentShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_FragmentShader.prototype = {
	sources: null
	,type: null
	,shader: null
	,files: null
	,'delete': function() {
		kha_SystemImpl.gl.deleteShader(this.shader);
		this.shader = null;
		this.sources = null;
	}
	,__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function(source) {
};
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = true;
kha_graphics4_GeometryShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_GeometryShader
};
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = true;
kha_graphics4_Graphics.__isInterface__ = true;
kha_graphics4_Graphics.prototype = {
	begin: null
	,beginFace: null
	,beginEye: null
	,end: null
	,vsynced: null
	,refreshRate: null
	,clear: null
	,viewport: null
	,scissor: null
	,disableScissor: null
	,setVertexBuffer: null
	,setVertexBuffers: null
	,setIndexBuffer: null
	,setTexture: null
	,setTextureDepth: null
	,setTextureArray: null
	,setVideoTexture: null
	,setImageTexture: null
	,setTextureParameters: null
	,setTexture3DParameters: null
	,setTextureCompareMode: null
	,setCubeMapCompareMode: null
	,setCubeMap: null
	,setCubeMapDepth: null
	,maxBoundTextures: null
	,setStencilReferenceValue: null
	,instancedRenderingAvailable: null
	,setPipeline: null
	,setBool: null
	,setInt: null
	,setInt2: null
	,setInt3: null
	,setInt4: null
	,setInts: null
	,setFloat: null
	,setFloat2: null
	,setFloat3: null
	,setFloat4: null
	,setFloats: null
	,setVector2: null
	,setVector3: null
	,setVector4: null
	,setMatrix: null
	,setMatrix3: null
	,drawIndexedVertices: null
	,drawIndexedVerticesInstanced: null
	,flush: null
	,__class__: kha_graphics4_Graphics
};
var kha_graphics4_PipelineCache = function(pipeline,texture) {
	this.pipeline = pipeline;
	try {
		this.projectionLocation = pipeline.getConstantLocation("projectionMatrix");
	} catch( x ) {
		haxe_Log.trace(((x) instanceof js__$Boot_HaxeError) ? x.val : x,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 39, className : "kha.graphics4.PipelineCache", methodName : "new"});
	}
	if(texture) {
		try {
			this.textureLocation = pipeline.getTextureUnit("tex");
		} catch( x1 ) {
			haxe_Log.trace(((x1) instanceof js__$Boot_HaxeError) ? x1.val : x1,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 41, className : "kha.graphics4.PipelineCache", methodName : "new"});
		}
	}
};
$hxClasses["kha.graphics4.PipelineCache"] = kha_graphics4_PipelineCache;
kha_graphics4_PipelineCache.__name__ = true;
kha_graphics4_PipelineCache.prototype = {
	pipeline: null
	,projectionLocation: null
	,textureLocation: null
	,__class__: kha_graphics4_PipelineCache
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	kha_graphics4_ImageShaderPainter.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ImageShaderPainter.standardImagePipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = true;
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.structure == null) {
		kha_graphics4_ImageShaderPainter.structure = kha_graphics4_Graphics2.createImageVertexStructure();
	}
	if(kha_graphics4_ImageShaderPainter.standardImagePipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_ImageShaderPainter.structure);
		pipeline.compile();
		kha_graphics4_ImageShaderPainter.standardImagePipeline = new kha_graphics4_PipelineCache(pipeline,true);
	}
};
kha_graphics4_ImageShaderPainter.prototype = {
	projectionMatrix: null
	,bilinear: null
	,bilinearMipmaps: null
	,g: null
	,myPipeline: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_ImageShaderPainter.standardImagePipeline;
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ImageShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ImageShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(6000,kha_graphics4_ImageShaderPainter.structure,1);
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ImageShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(9000,0);
			var indices = kha_graphics4_ImageShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1500) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ImageShaderPainter.indexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 9] = topleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 10] = toplefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 18] = toprightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 19] = toprighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 27] = bottomrightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 28] = bottomrighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColor: function(r,g,b,a) {
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		kha_graphics4_ImageShaderPainter.rectVertexBuffer.unlock(kha_graphics4_ImageShaderPainter.bufferIndex * 4);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ImageShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ImageShaderPainter.indexBuffer);
		this.g.setTexture(this.myPipeline.textureLocation,kha_graphics4_ImageShaderPainter.lastTexture);
		this.g.setTextureParameters(this.myPipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,this.bilinearMipmaps ? 2 : 0);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ImageShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.myPipeline.textureLocation,null);
		kha_graphics4_ImageShaderPainter.bufferIndex = 0;
		kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setBilinearMipmapFilter: function(bilinear) {
		this.end();
		this.bilinearMipmaps = bilinear;
	}
	,drawImage: function(img,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 35] = a;
		var right = tex.get_width() / tex.get_realWidth();
		var bottom = tex.get_height() / tex.get_realHeight();
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 3] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 12] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 13] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 22] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = bottomleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = bottomlefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = topleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = toplefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = toprightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = toprighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = bottomrightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = bottomrighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,drawImage2: function(img,sx,sy,sw,sh,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		var left = sx / tex.get_realWidth();
		var top = sy / tex.get_realHeight();
		var right = (sx + sw) / tex.get_realWidth();
		var bottom = (sy + sh) / tex.get_realHeight();
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = bottomleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = bottomlefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = topleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = toplefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = toprightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = toprighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = bottomrightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = bottomrighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,drawImageScale: function(img,sx,sy,sw,sh,left,top,right,bottom,opacity,color) {
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		var left1 = sx / tex.get_realWidth();
		var top1 = sy / tex.get_realHeight();
		var right1 = (sx + sw) / tex.get_realWidth();
		var bottom1 = (sy + sh) / tex.get_realHeight();
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom1;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 8] = opacity;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 17] = opacity;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 26] = opacity;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 35] = opacity;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,end: function() {
		if(kha_graphics4_ImageShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_ImageShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ColoredShaderPainter.standardColorPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = true;
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.structure == null) {
		kha_graphics4_ColoredShaderPainter.structure = kha_graphics4_Graphics2.createColoredVertexStructure();
	}
	if(kha_graphics4_ColoredShaderPainter.standardColorPipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createColoredPipeline(kha_graphics4_ColoredShaderPainter.structure);
		pipeline.compile();
		kha_graphics4_ColoredShaderPainter.standardColorPipeline = new kha_graphics4_PipelineCache(pipeline,false);
	}
};
kha_graphics4_ColoredShaderPainter.prototype = {
	projectionMatrix: null
	,g: null
	,myPipeline: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_ColoredShaderPainter.standardColorPipeline;
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ColoredShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ColoredShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			var indices = kha_graphics4_ColoredShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ColoredShaderPainter.indexBuffer.unlock();
			kha_graphics4_ColoredShaderPainter.triangleVertexBuffer = new kha_graphics4_VertexBuffer(3000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer = new kha_graphics4_IndexBuffer(3000,0);
			var triIndices = kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.lock();
			var _g1 = 0;
			while(_g1 < 1000) {
				var i1 = _g1++;
				triIndices[i1 * 3] = i1 * 3;
				triIndices[i1 * 3 + 1] = i1 * 3 + 1;
				triIndices[i1 * 3 + 2] = i1 * 3 + 2;
			}
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 7] = topleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 8] = toplefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 14] = toprightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 15] = toprighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 16] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 21] = bottomrightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 22] = bottomrighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 23] = -5.0;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		var r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		var g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		var b = a * ((color & 255) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 3] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 4] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 5] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 10] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 11] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 12] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 17] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 18] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 19] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 20] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 24] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 25] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 26] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 27] = a;
	}
	,setTriVertices: function(x1,y1,x2,y2,x3,y3) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex] = x1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 1] = y1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 7] = x2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 8] = y2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 14] = x3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 15] = y3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 16] = -5.0;
	}
	,setTriColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		var r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		var g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		var b = a * ((color & 255) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 3] = r;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 4] = g;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 5] = b;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 10] = r;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 11] = g;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 12] = b;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 17] = r;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 18] = g;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 19] = b;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 20] = a;
	}
	,drawBuffer: function(trisDone) {
		if(!trisDone) {
			if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.rectVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.bufferIndex * 4);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.indexBuffer);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.bufferIndex * 2 * 3);
		kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.triangleVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.triangleIndexBuffer);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex + 1 >= 1000) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++kha_graphics4_ColoredShaderPainter.bufferIndex;
	}
	,fillTriangle: function(opacity,color,x1,y1,x2,y2,x3,y3) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex + 1 >= 1000) {
			this.drawTriBuffer(false);
		}
		this.setTriColors(opacity,color);
		this.setTriVertices(x1,y1,x2,y2,x3,y3);
		++kha_graphics4_ColoredShaderPainter.triangleBufferIndex;
	}
	,endTris: function(rectsDone) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(rectsDone);
		}
	}
	,endRects: function(trisDone) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(trisDone);
		}
	}
	,end: function() {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(false);
		}
	}
	,__class__: kha_graphics4_ColoredShaderPainter
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_TextShaderPainter.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_TextShaderPainter.standardTextPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = true;
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.structure == null) {
		kha_graphics4_TextShaderPainter.structure = kha_graphics4_Graphics2.createTextVertexStructure();
	}
	if(kha_graphics4_TextShaderPainter.standardTextPipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_TextShaderPainter.structure);
		pipeline.compile();
		kha_graphics4_TextShaderPainter.standardTextPipeline = new kha_graphics4_PipelineCache(pipeline,true);
	}
};
kha_graphics4_TextShaderPainter.findIndex = function(charCode) {
	var glyphs = kha_graphics2_Graphics.fontGlyphs;
	var blocks = kha_KravurImage.charBlocks;
	var offset = 0;
	var _g = 0;
	var _g1 = blocks.length / 2 | 0;
	while(_g < _g1) {
		var i = _g++;
		var start = blocks[i * 2];
		var end = blocks[i * 2 + 1];
		if(charCode >= start && charCode <= end) {
			return offset + charCode - start;
		}
		offset += end - start + 1;
	}
	return 0;
};
kha_graphics4_TextShaderPainter.prototype = {
	projectionMatrix: null
	,font: null
	,g: null
	,myPipeline: null
	,fontSize: null
	,bilinear: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_TextShaderPainter.standardTextPipeline;
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_TextShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_TextShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_TextShaderPainter.structure,1);
			kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_TextShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			var indices = kha_graphics4_TextShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_TextShaderPainter.indexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 9] = topleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 10] = toplefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 11] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 18] = toprightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 19] = toprighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 20] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 27] = bottomrightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 28] = bottomrighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 5] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 6] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 7] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 14] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 15] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 16] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 23] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 24] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 25] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 32] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 33] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 34] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		kha_graphics4_TextShaderPainter.rectVertexBuffer.unlock(kha_graphics4_TextShaderPainter.bufferIndex * 4);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_TextShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_TextShaderPainter.indexBuffer);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.setTexture(this.myPipeline.textureLocation,kha_graphics4_TextShaderPainter.lastTexture);
		this.g.setTextureParameters(this.myPipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,0);
		this.g.drawIndexedVertices(0,kha_graphics4_TextShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.myPipeline.textureLocation,null);
		kha_graphics4_TextShaderPainter.bufferIndex = 0;
		kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setFont: function(font) {
		this.font = js_Boot.__cast(font , kha_Kravur);
	}
	,bakedQuadCache: null
	,drawString: function(text,opacity,color,x,y,transformation) {
		var font = this.font._get(this.fontSize);
		var tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		var xpos = x;
		var ypos = y;
		var _g = 0;
		var _g1 = text.length;
		while(_g < _g1) {
			var i = _g++;
			var charCode = text.charCodeAt(i);
			var q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(charCode),xpos,ypos);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 1000) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var x1 = q.x0;
				var y1 = q.y1;
				if(y1 == null) {
					y1 = 0;
				}
				if(x1 == null) {
					x1 = 0;
				}
				var value_x = x1;
				var value_y = y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x2 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y2 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				var x3 = x2;
				var y3 = y2;
				if(y3 == null) {
					y3 = 0;
				}
				if(x3 == null) {
					x3 = 0;
				}
				var p0_x = x3;
				var p0_y = y3;
				var x4 = q.x0;
				var y4 = q.y0;
				if(y4 == null) {
					y4 = 0;
				}
				if(x4 == null) {
					x4 = 0;
				}
				var value_x1 = x4;
				var value_y1 = y4;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x5 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y5 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				var x6 = x5;
				var y6 = y5;
				if(y6 == null) {
					y6 = 0;
				}
				if(x6 == null) {
					x6 = 0;
				}
				var p1_x = x6;
				var p1_y = y6;
				var x7 = q.x1;
				var y7 = q.y0;
				if(y7 == null) {
					y7 = 0;
				}
				if(x7 == null) {
					x7 = 0;
				}
				var value_x2 = x7;
				var value_y2 = y7;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x8 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y8 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				var x9 = x8;
				var y9 = y8;
				if(y9 == null) {
					y9 = 0;
				}
				if(x9 == null) {
					x9 = 0;
				}
				var p2_x = x9;
				var p2_y = y9;
				var x10 = q.x1;
				var y10 = q.y1;
				if(y10 == null) {
					y10 = 0;
				}
				if(x10 == null) {
					x10 = 0;
				}
				var value_x3 = x10;
				var value_y3 = y10;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x11 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y11 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				var x12 = x11;
				var y12 = y11;
				if(y12 == null) {
					y12 = 0;
				}
				if(x12 == null) {
					x12 = 0;
				}
				var p3_x = x12;
				var p3_y = y12;
				this.setRectVertices(p0_x,p0_y,p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
	}
	,drawCharacters: function(text,start,length,opacity,color,x,y,transformation) {
		var font = this.font._get(this.fontSize);
		var tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		var xpos = x;
		var ypos = y;
		var _g = start;
		var _g1 = start + length;
		while(_g < _g1) {
			var i = _g++;
			var q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(text[i]),xpos,ypos);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 1000) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var x1 = q.x0;
				var y1 = q.y1;
				if(y1 == null) {
					y1 = 0;
				}
				if(x1 == null) {
					x1 = 0;
				}
				var value_x = x1;
				var value_y = y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x2 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y2 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				var x3 = x2;
				var y3 = y2;
				if(y3 == null) {
					y3 = 0;
				}
				if(x3 == null) {
					x3 = 0;
				}
				var p0_x = x3;
				var p0_y = y3;
				var x4 = q.x0;
				var y4 = q.y0;
				if(y4 == null) {
					y4 = 0;
				}
				if(x4 == null) {
					x4 = 0;
				}
				var value_x1 = x4;
				var value_y1 = y4;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x5 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y5 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				var x6 = x5;
				var y6 = y5;
				if(y6 == null) {
					y6 = 0;
				}
				if(x6 == null) {
					x6 = 0;
				}
				var p1_x = x6;
				var p1_y = y6;
				var x7 = q.x1;
				var y7 = q.y0;
				if(y7 == null) {
					y7 = 0;
				}
				if(x7 == null) {
					x7 = 0;
				}
				var value_x2 = x7;
				var value_y2 = y7;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x8 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y8 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				var x9 = x8;
				var y9 = y8;
				if(y9 == null) {
					y9 = 0;
				}
				if(x9 == null) {
					x9 = 0;
				}
				var p2_x = x9;
				var p2_y = y9;
				var x10 = q.x1;
				var y10 = q.y1;
				if(y10 == null) {
					y10 = 0;
				}
				if(x10 == null) {
					x10 = 0;
				}
				var value_x3 = x10;
				var value_y3 = y10;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x11 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y11 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				var x12 = x11;
				var y12 = y11;
				if(y12 == null) {
					y12 = 0;
				}
				if(x12 == null) {
					x12 = 0;
				}
				var p3_x = x12;
				var p3_y = y12;
				this.setRectVertices(p0_x,p0_y,p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
	}
	,end: function() {
		if(kha_graphics4_TextShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
};
var kha_graphics4_Graphics2 = function(canvas) {
	this.scissorH = -1;
	this.scissorW = -1;
	this.scissorY = -1;
	this.scissorX = -1;
	this.scissorEnabled = false;
	this.lastPipeline = null;
	this.pipelineCache = new haxe_ds_ObjectMap();
	this.myMipmapScaleQuality = 0;
	this.myImageScaleQuality = 0;
	kha_graphics2_Graphics.call(this);
	this.set_color(-1);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.projectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_Graphics2.createImageVertexStructure());
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = true;
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.createImageVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createImagePipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createColoredVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createColoredPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createTextVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createTextPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 3;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 3;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	myColor: null
	,myFont: null
	,projectionMatrix: null
	,imagePainter: null
	,coloredPainter: null
	,textPainter: null
	,canvas: null
	,g: null
	,setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if(((this.canvas) instanceof kha_Framebuffer)) {
			var _this = this.projectionMatrix;
			var tx = -width / width;
			var ty = -height / (0 - height);
			var tz = -1.0002000200020003;
			var m__00 = 2 / width;
			var m__10 = 0;
			var m__20 = 0;
			var m__30 = tx;
			var m__01 = 0;
			var m__11 = 2.0 / (0 - height);
			var m__21 = 0;
			var m__31 = ty;
			var m__02 = 0;
			var m__12 = 0;
			var m__22 = -0.002000200020002;
			var m__32 = tz;
			var m__03 = 0;
			var m__13 = 0;
			var m__23 = 0;
			var m__33 = 1;
			_this._00 = m__00;
			_this._10 = m__10;
			_this._20 = m__20;
			_this._30 = m__30;
			_this._01 = m__01;
			_this._11 = m__11;
			_this._21 = m__21;
			_this._31 = m__31;
			_this._02 = m__02;
			_this._12 = m__12;
			_this._22 = m__22;
			_this._32 = m__32;
			_this._03 = m__03;
			_this._13 = m__13;
			_this._23 = m__23;
			_this._33 = m__33;
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(kha_Image.renderTargetsInvertedY()) {
				var _this1 = this.projectionMatrix;
				var tx1 = -width / width;
				var ty1 = -height / height;
				var tz1 = -1.0002000200020003;
				var m__001 = 2 / width;
				var m__101 = 0;
				var m__201 = 0;
				var m__301 = tx1;
				var m__011 = 0;
				var m__111 = 2.0 / height;
				var m__211 = 0;
				var m__311 = ty1;
				var m__021 = 0;
				var m__121 = 0;
				var m__221 = -0.002000200020002;
				var m__321 = tz1;
				var m__031 = 0;
				var m__131 = 0;
				var m__231 = 0;
				var m__331 = 1;
				_this1._00 = m__001;
				_this1._10 = m__101;
				_this1._20 = m__201;
				_this1._30 = m__301;
				_this1._01 = m__011;
				_this1._11 = m__111;
				_this1._21 = m__211;
				_this1._31 = m__311;
				_this1._02 = m__021;
				_this1._12 = m__121;
				_this1._22 = m__221;
				_this1._32 = m__321;
				_this1._03 = m__031;
				_this1._13 = m__131;
				_this1._23 = m__231;
				_this1._33 = m__331;
			} else {
				var _this2 = this.projectionMatrix;
				var tx2 = -width / width;
				var ty2 = -height / (0 - height);
				var tz2 = -1.0002000200020003;
				var m__002 = 2 / width;
				var m__102 = 0;
				var m__202 = 0;
				var m__302 = tx2;
				var m__012 = 0;
				var m__112 = 2.0 / (0 - height);
				var m__212 = 0;
				var m__312 = ty2;
				var m__022 = 0;
				var m__122 = 0;
				var m__222 = -0.002000200020002;
				var m__322 = tz2;
				var m__032 = 0;
				var m__132 = 0;
				var m__232 = 0;
				var m__332 = 1;
				_this2._00 = m__002;
				_this2._10 = m__102;
				_this2._20 = m__202;
				_this2._30 = m__302;
				_this2._01 = m__012;
				_this2._11 = m__112;
				_this2._21 = m__212;
				_this2._31 = m__312;
				_this2._02 = m__022;
				_this2._12 = m__122;
				_this2._22 = m__222;
				_this2._32 = m__322;
				_this2._03 = m__032;
				_this2._13 = m__132;
				_this2._23 = m__232;
				_this2._33 = m__332;
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,drawImage: function(img,x,y) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var xw = x + img.get_width();
		var yh = y + img.get_height();
		var _this1 = this.transformations[this.transformationIndex];
		var x1 = x;
		var y1 = yh;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x2 = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y2 = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		var x3 = x2;
		var y3 = y2;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		var p1_x = x3;
		var p1_y = y3;
		var _this2 = this.transformations[this.transformationIndex];
		var x4 = x;
		var y4 = y;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		var value_x1 = x4;
		var value_y1 = y4;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x5 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y5 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		var x6 = x5;
		var y6 = y5;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		var p2_x = x6;
		var p2_y = y6;
		var _this3 = this.transformations[this.transformationIndex];
		var x7 = xw;
		var y7 = y;
		if(y7 == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		var value_x2 = x7;
		var value_y2 = y7;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x8 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y8 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		var x9 = x8;
		var y9 = y8;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		var p3_x = x9;
		var p3_y = y9;
		var _this4 = this.transformations[this.transformationIndex];
		var x10 = xw;
		var y10 = yh;
		if(y10 == null) {
			y10 = 0;
		}
		if(x10 == null) {
			x10 = 0;
		}
		var value_x3 = x10;
		var value_y3 = y10;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x11 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y11 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		var x12 = x11;
		var y12 = y11;
		if(y12 == null) {
			y12 = 0;
		}
		if(x12 == null) {
			x12 = 0;
		}
		var p4_x = x12;
		var p4_y = y12;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 35] = a;
		var right = tex.get_width() / tex.get_realWidth();
		var bottom = tex.get_height() / tex.get_realHeight();
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 3] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 12] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 13] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 22] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = p1_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = p1_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = p2_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = p2_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = p3_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = p3_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = p4_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = p4_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,drawScaledSubImage: function(img,sx,sy,sw,sh,dx,dy,dw,dh) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var _this1 = this.transformations[this.transformationIndex];
		var x = dx;
		var y = dy + dh;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x1 = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y1 = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		var p1_x = x2;
		var p1_y = y2;
		var _this2 = this.transformations[this.transformationIndex];
		var x3 = dx;
		var y3 = dy;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		var value_x1 = x3;
		var value_y1 = y3;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x4 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y4 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		var x5 = x4;
		var y5 = y4;
		if(y5 == null) {
			y5 = 0;
		}
		if(x5 == null) {
			x5 = 0;
		}
		var p2_x = x5;
		var p2_y = y5;
		var _this3 = this.transformations[this.transformationIndex];
		var x6 = dx + dw;
		var y6 = dy;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		var value_x2 = x6;
		var value_y2 = y6;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x7 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y7 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		var x8 = x7;
		var y8 = y7;
		if(y8 == null) {
			y8 = 0;
		}
		if(x8 == null) {
			x8 = 0;
		}
		var p3_x = x8;
		var p3_y = y8;
		var _this4 = this.transformations[this.transformationIndex];
		var x9 = dx + dw;
		var y9 = dy + dh;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		var value_x3 = x9;
		var value_y3 = y9;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x10 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y10 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		var x11 = x10;
		var y11 = y10;
		if(y11 == null) {
			y11 = 0;
		}
		if(x11 == null) {
			x11 = 0;
		}
		var p4_x = x11;
		var p4_y = y11;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer();
		}
		var left = sx / tex.get_realWidth();
		var top = sy / tex.get_realHeight();
		var right = (sx + sw) / tex.get_realWidth();
		var bottom = (sy + sh) / tex.get_realHeight();
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = p1_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = p1_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = p2_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = p2_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = p3_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = p3_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = p4_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = p4_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x1 = x - strength / 2;
		var y1 = y + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x2 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y2 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x3 = x2;
		var y3 = y2;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		var p1_x = x3;
		var p1_y = y3;
		var _this1 = this.transformations[this.transformationIndex];
		var x4 = x - strength / 2;
		var y4 = y - strength / 2;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		var value_x1 = x4;
		var value_y1 = y4;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x5 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y5 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var x6 = x5;
		var y6 = y5;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		var p2_x = x6;
		var p2_y = y6;
		var _this2 = this.transformations[this.transformationIndex];
		var x7 = x + width + strength / 2;
		var y7 = y - strength / 2;
		if(y7 == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		var value_x2 = x7;
		var value_y2 = y7;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x8 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y8 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var x9 = x8;
		var y9 = y8;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		var p3_x = x9;
		var p3_y = y9;
		var _this3 = this.transformations[this.transformationIndex];
		var x10 = x + width + strength / 2;
		var y10 = y + strength / 2;
		if(y10 == null) {
			y10 = 0;
		}
		if(x10 == null) {
			x10 = 0;
		}
		var value_x3 = x10;
		var value_y3 = y10;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x11 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y11 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var x12 = x11;
		var y12 = y11;
		if(y12 == null) {
			y12 = 0;
		}
		if(x12 == null) {
			x12 = 0;
		}
		var p4_x = x12;
		var p4_y = y12;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
		var _this4 = this.transformations[this.transformationIndex];
		var x13 = x - strength / 2;
		var y13 = y + height - strength / 2;
		if(y13 == null) {
			y13 = 0;
		}
		if(x13 == null) {
			x13 = 0;
		}
		var value_x4 = x13;
		var value_y4 = y13;
		var w4 = _this4._02 * value_x4 + _this4._12 * value_y4 + _this4._22;
		var x14 = (_this4._00 * value_x4 + _this4._10 * value_y4 + _this4._20) / w4;
		var y14 = (_this4._01 * value_x4 + _this4._11 * value_y4 + _this4._21) / w4;
		var x15 = x14;
		var y15 = y14;
		if(y15 == null) {
			y15 = 0;
		}
		if(x15 == null) {
			x15 = 0;
		}
		var v_x = x15;
		var v_y = y15;
		p1_x = v_x;
		p1_y = v_y;
		var _this5 = this.transformations[this.transformationIndex];
		var x16 = x - strength / 2;
		var y16 = y + strength / 2;
		if(y16 == null) {
			y16 = 0;
		}
		if(x16 == null) {
			x16 = 0;
		}
		var value_x5 = x16;
		var value_y5 = y16;
		var w5 = _this5._02 * value_x5 + _this5._12 * value_y5 + _this5._22;
		var x17 = (_this5._00 * value_x5 + _this5._10 * value_y5 + _this5._20) / w5;
		var y17 = (_this5._01 * value_x5 + _this5._11 * value_y5 + _this5._21) / w5;
		var x18 = x17;
		var y18 = y17;
		if(y18 == null) {
			y18 = 0;
		}
		if(x18 == null) {
			x18 = 0;
		}
		var v_x1 = x18;
		var v_y1 = y18;
		p2_x = v_x1;
		p2_y = v_y1;
		var _this6 = this.transformations[this.transformationIndex];
		var x19 = x + strength / 2;
		var y19 = y + strength / 2;
		if(y19 == null) {
			y19 = 0;
		}
		if(x19 == null) {
			x19 = 0;
		}
		var value_x6 = x19;
		var value_y6 = y19;
		var w6 = _this6._02 * value_x6 + _this6._12 * value_y6 + _this6._22;
		var x20 = (_this6._00 * value_x6 + _this6._10 * value_y6 + _this6._20) / w6;
		var y20 = (_this6._01 * value_x6 + _this6._11 * value_y6 + _this6._21) / w6;
		var x21 = x20;
		var y21 = y20;
		if(y21 == null) {
			y21 = 0;
		}
		if(x21 == null) {
			x21 = 0;
		}
		var v_x2 = x21;
		var v_y2 = y21;
		p3_x = v_x2;
		p3_y = v_y2;
		var _this7 = this.transformations[this.transformationIndex];
		var x22 = x + strength / 2;
		var y22 = y + height - strength / 2;
		if(y22 == null) {
			y22 = 0;
		}
		if(x22 == null) {
			x22 = 0;
		}
		var value_x7 = x22;
		var value_y7 = y22;
		var w7 = _this7._02 * value_x7 + _this7._12 * value_y7 + _this7._22;
		var x23 = (_this7._00 * value_x7 + _this7._10 * value_y7 + _this7._20) / w7;
		var y23 = (_this7._01 * value_x7 + _this7._11 * value_y7 + _this7._21) / w7;
		var x24 = x23;
		var y24 = y23;
		if(y24 == null) {
			y24 = 0;
		}
		if(x24 == null) {
			x24 = 0;
		}
		var v_x3 = x24;
		var v_y3 = y24;
		p4_x = v_x3;
		p4_y = v_y3;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
		var _this8 = this.transformations[this.transformationIndex];
		var x25 = x - strength / 2;
		var y25 = y + height + strength / 2;
		if(y25 == null) {
			y25 = 0;
		}
		if(x25 == null) {
			x25 = 0;
		}
		var value_x8 = x25;
		var value_y8 = y25;
		var w8 = _this8._02 * value_x8 + _this8._12 * value_y8 + _this8._22;
		var x26 = (_this8._00 * value_x8 + _this8._10 * value_y8 + _this8._20) / w8;
		var y26 = (_this8._01 * value_x8 + _this8._11 * value_y8 + _this8._21) / w8;
		var x27 = x26;
		var y27 = y26;
		if(y27 == null) {
			y27 = 0;
		}
		if(x27 == null) {
			x27 = 0;
		}
		var v_x4 = x27;
		var v_y4 = y27;
		p1_x = v_x4;
		p1_y = v_y4;
		var _this9 = this.transformations[this.transformationIndex];
		var x28 = x - strength / 2;
		var y28 = y + height - strength / 2;
		if(y28 == null) {
			y28 = 0;
		}
		if(x28 == null) {
			x28 = 0;
		}
		var value_x9 = x28;
		var value_y9 = y28;
		var w9 = _this9._02 * value_x9 + _this9._12 * value_y9 + _this9._22;
		var x29 = (_this9._00 * value_x9 + _this9._10 * value_y9 + _this9._20) / w9;
		var y29 = (_this9._01 * value_x9 + _this9._11 * value_y9 + _this9._21) / w9;
		var x30 = x29;
		var y30 = y29;
		if(y30 == null) {
			y30 = 0;
		}
		if(x30 == null) {
			x30 = 0;
		}
		var v_x5 = x30;
		var v_y5 = y30;
		p2_x = v_x5;
		p2_y = v_y5;
		var _this10 = this.transformations[this.transformationIndex];
		var x31 = x + width + strength / 2;
		var y31 = y + height - strength / 2;
		if(y31 == null) {
			y31 = 0;
		}
		if(x31 == null) {
			x31 = 0;
		}
		var value_x10 = x31;
		var value_y10 = y31;
		var w10 = _this10._02 * value_x10 + _this10._12 * value_y10 + _this10._22;
		var x32 = (_this10._00 * value_x10 + _this10._10 * value_y10 + _this10._20) / w10;
		var y32 = (_this10._01 * value_x10 + _this10._11 * value_y10 + _this10._21) / w10;
		var x33 = x32;
		var y33 = y32;
		if(y33 == null) {
			y33 = 0;
		}
		if(x33 == null) {
			x33 = 0;
		}
		var v_x6 = x33;
		var v_y6 = y33;
		p3_x = v_x6;
		p3_y = v_y6;
		var _this11 = this.transformations[this.transformationIndex];
		var x34 = x + width + strength / 2;
		var y34 = y + height + strength / 2;
		if(y34 == null) {
			y34 = 0;
		}
		if(x34 == null) {
			x34 = 0;
		}
		var value_x11 = x34;
		var value_y11 = y34;
		var w11 = _this11._02 * value_x11 + _this11._12 * value_y11 + _this11._22;
		var x35 = (_this11._00 * value_x11 + _this11._10 * value_y11 + _this11._20) / w11;
		var y35 = (_this11._01 * value_x11 + _this11._11 * value_y11 + _this11._21) / w11;
		var x36 = x35;
		var y36 = y35;
		if(y36 == null) {
			y36 = 0;
		}
		if(x36 == null) {
			x36 = 0;
		}
		var v_x7 = x36;
		var v_y7 = y36;
		p4_x = v_x7;
		p4_y = v_y7;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
		var _this12 = this.transformations[this.transformationIndex];
		var x37 = x + width - strength / 2;
		var y37 = y + height - strength / 2;
		if(y37 == null) {
			y37 = 0;
		}
		if(x37 == null) {
			x37 = 0;
		}
		var value_x12 = x37;
		var value_y12 = y37;
		var w12 = _this12._02 * value_x12 + _this12._12 * value_y12 + _this12._22;
		var x38 = (_this12._00 * value_x12 + _this12._10 * value_y12 + _this12._20) / w12;
		var y38 = (_this12._01 * value_x12 + _this12._11 * value_y12 + _this12._21) / w12;
		var x39 = x38;
		var y39 = y38;
		if(y39 == null) {
			y39 = 0;
		}
		if(x39 == null) {
			x39 = 0;
		}
		var v_x8 = x39;
		var v_y8 = y39;
		p1_x = v_x8;
		p1_y = v_y8;
		var _this13 = this.transformations[this.transformationIndex];
		var x40 = x + width - strength / 2;
		var y40 = y + strength / 2;
		if(y40 == null) {
			y40 = 0;
		}
		if(x40 == null) {
			x40 = 0;
		}
		var value_x13 = x40;
		var value_y13 = y40;
		var w13 = _this13._02 * value_x13 + _this13._12 * value_y13 + _this13._22;
		var x41 = (_this13._00 * value_x13 + _this13._10 * value_y13 + _this13._20) / w13;
		var y41 = (_this13._01 * value_x13 + _this13._11 * value_y13 + _this13._21) / w13;
		var x42 = x41;
		var y42 = y41;
		if(y42 == null) {
			y42 = 0;
		}
		if(x42 == null) {
			x42 = 0;
		}
		var v_x9 = x42;
		var v_y9 = y42;
		p2_x = v_x9;
		p2_y = v_y9;
		var _this14 = this.transformations[this.transformationIndex];
		var x43 = x + width + strength / 2;
		var y43 = y + strength / 2;
		if(y43 == null) {
			y43 = 0;
		}
		if(x43 == null) {
			x43 = 0;
		}
		var value_x14 = x43;
		var value_y14 = y43;
		var w14 = _this14._02 * value_x14 + _this14._12 * value_y14 + _this14._22;
		var x44 = (_this14._00 * value_x14 + _this14._10 * value_y14 + _this14._20) / w14;
		var y44 = (_this14._01 * value_x14 + _this14._11 * value_y14 + _this14._21) / w14;
		var x45 = x44;
		var y45 = y44;
		if(y45 == null) {
			y45 = 0;
		}
		if(x45 == null) {
			x45 = 0;
		}
		var v_x10 = x45;
		var v_y10 = y45;
		p3_x = v_x10;
		p3_y = v_y10;
		var _this15 = this.transformations[this.transformationIndex];
		var x46 = x + width + strength / 2;
		var y46 = y + height - strength / 2;
		if(y46 == null) {
			y46 = 0;
		}
		if(x46 == null) {
			x46 = 0;
		}
		var value_x15 = x46;
		var value_y15 = y46;
		var w15 = _this15._02 * value_x15 + _this15._12 * value_y15 + _this15._22;
		var x47 = (_this15._00 * value_x15 + _this15._10 * value_y15 + _this15._20) / w15;
		var y47 = (_this15._01 * value_x15 + _this15._11 * value_y15 + _this15._21) / w15;
		var x48 = x47;
		var y48 = y47;
		if(y48 == null) {
			y48 = 0;
		}
		if(x48 == null) {
			x48 = 0;
		}
		var v_x11 = x48;
		var v_y11 = y48;
		p4_x = v_x11;
		p4_y = v_y11;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x1 = x;
		var y1 = y + height;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x2 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y2 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x3 = x2;
		var y3 = y2;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		var p1_x = x3;
		var p1_y = y3;
		var _this1 = this.transformations[this.transformationIndex];
		var x4 = x;
		var y4 = y;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		var value_x1 = x4;
		var value_y1 = y4;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x5 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y5 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var x6 = x5;
		var y6 = y5;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		var p2_x = x6;
		var p2_y = y6;
		var _this2 = this.transformations[this.transformationIndex];
		var x7 = x + width;
		var y7 = y;
		if(y7 == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		var value_x2 = x7;
		var value_y2 = y7;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x8 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y8 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var x9 = x8;
		var y9 = y8;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		var p3_x = x9;
		var p3_y = y9;
		var _this3 = this.transformations[this.transformationIndex];
		var x10 = x + width;
		var y10 = y + height;
		if(y10 == null) {
			y10 = 0;
		}
		if(x10 == null) {
			x10 = 0;
		}
		var value_x3 = x10;
		var value_y3 = y10;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x11 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y11 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var x12 = x11;
		var y12 = y11;
		if(y12 == null) {
			y12 = 0;
		}
		if(x12 == null) {
			x12 = 0;
		}
		var p4_x = x12;
		var p4_y = y12;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	,drawString: function(text,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawString(text,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformationIndex]);
	}
	,drawCharacters: function(text,start,length,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawCharacters(text,start,length,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformationIndex]);
	}
	,get_font: function() {
		return this.myFont;
	}
	,set_font: function(font) {
		this.textPainter.setFont(font);
		return this.myFont = font;
	}
	,set_fontSize: function(value) {
		return kha_graphics2_Graphics.prototype.set_fontSize.call(this,this.textPainter.fontSize = value);
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var vec_x = 0;
		var vec_y = 0;
		if(y2 == y1) {
			var x = 0;
			var y = -1;
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			var v_x = x;
			var v_y = y;
			vec_x = v_x;
			vec_y = v_y;
		} else {
			var x3 = 1;
			var y3 = -(x2 - x1) / (y2 - y1);
			if(y3 == null) {
				y3 = 0;
			}
			if(x3 == null) {
				x3 = 0;
			}
			var v_x1 = x3;
			var v_y1 = y3;
			vec_x = v_x1;
			vec_y = v_y1;
		}
		var currentLength = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
		if(currentLength != 0) {
			var mul = strength / currentLength;
			vec_x *= mul;
			vec_y *= mul;
		}
		var x4 = x1 + 0.5 * vec_x;
		var y4 = y1 + 0.5 * vec_y;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		var p1_x = x4;
		var p1_y = y4;
		var x5 = x2 + 0.5 * vec_x;
		var y5 = y2 + 0.5 * vec_y;
		if(y5 == null) {
			y5 = 0;
		}
		if(x5 == null) {
			x5 = 0;
		}
		var p2_x = x5;
		var p2_y = y5;
		var x6 = p1_x - vec_x;
		var y6 = p1_y - vec_y;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		var p3_x = x6;
		var p3_y = y6;
		var x7 = p2_x - vec_x;
		var y7 = p2_y - vec_y;
		if(y7 == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		var p4_x = x7;
		var p4_y = y7;
		var _this = this.transformations[this.transformationIndex];
		var w = _this._02 * p1_x + _this._12 * p1_y + _this._22;
		var x8 = (_this._00 * p1_x + _this._10 * p1_y + _this._20) / w;
		var y8 = (_this._01 * p1_x + _this._11 * p1_y + _this._21) / w;
		var x9 = x8;
		var y9 = y8;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		var v_x2 = x9;
		var v_y2 = y9;
		p1_x = v_x2;
		p1_y = v_y2;
		var _this1 = this.transformations[this.transformationIndex];
		var w1 = _this1._02 * p2_x + _this1._12 * p2_y + _this1._22;
		var x10 = (_this1._00 * p2_x + _this1._10 * p2_y + _this1._20) / w1;
		var y10 = (_this1._01 * p2_x + _this1._11 * p2_y + _this1._21) / w1;
		var x11 = x10;
		var y11 = y10;
		if(y11 == null) {
			y11 = 0;
		}
		if(x11 == null) {
			x11 = 0;
		}
		var v_x3 = x11;
		var v_y3 = y11;
		p2_x = v_x3;
		p2_y = v_y3;
		var _this2 = this.transformations[this.transformationIndex];
		var w2 = _this2._02 * p3_x + _this2._12 * p3_y + _this2._22;
		var x12 = (_this2._00 * p3_x + _this2._10 * p3_y + _this2._20) / w2;
		var y12 = (_this2._01 * p3_x + _this2._11 * p3_y + _this2._21) / w2;
		var x13 = x12;
		var y13 = y12;
		if(y13 == null) {
			y13 = 0;
		}
		if(x13 == null) {
			x13 = 0;
		}
		var v_x4 = x13;
		var v_y4 = y13;
		p3_x = v_x4;
		p3_y = v_y4;
		var _this3 = this.transformations[this.transformationIndex];
		var w3 = _this3._02 * p4_x + _this3._12 * p4_y + _this3._22;
		var x14 = (_this3._00 * p4_x + _this3._10 * p4_y + _this3._20) / w3;
		var y14 = (_this3._01 * p4_x + _this3._11 * p4_y + _this3._21) / w3;
		var x15 = x14;
		var y15 = y14;
		if(y15 == null) {
			y15 = 0;
		}
		if(x15 == null) {
			x15 = 0;
		}
		var v_x5 = x15;
		var v_y5 = y15;
		p4_x = v_x5;
		p4_y = v_y5;
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p3_x,p3_y,p2_x,p2_y,p4_x,p4_y);
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x = x1;
		var y = y1;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x4 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y4 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x5 = x4;
		var y5 = y4;
		if(y5 == null) {
			y5 = 0;
		}
		if(x5 == null) {
			x5 = 0;
		}
		var p1_x = x5;
		var p1_y = y5;
		var _this1 = this.transformations[this.transformationIndex];
		var x6 = x2;
		var y6 = y2;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		var value_x1 = x6;
		var value_y1 = y6;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x7 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y7 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var x8 = x7;
		var y8 = y7;
		if(y8 == null) {
			y8 = 0;
		}
		if(x8 == null) {
			x8 = 0;
		}
		var p2_x = x8;
		var p2_y = y8;
		var _this2 = this.transformations[this.transformationIndex];
		var x9 = x3;
		var y9 = y3;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		var value_x2 = x9;
		var value_y2 = y9;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x10 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y10 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var x11 = x10;
		var y11 = y10;
		if(y11 == null) {
			y11 = 0;
		}
		if(x11 == null) {
			x11 = 0;
		}
		var p3_x = x11;
		var p3_y = y11;
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
	}
	,myImageScaleQuality: null
	,get_imageScaleQuality: function() {
		return this.myImageScaleQuality;
	}
	,set_imageScaleQuality: function(value) {
		if(value == this.myImageScaleQuality) {
			return value;
		}
		this.imagePainter.setBilinearFilter(value == 1);
		this.textPainter.setBilinearFilter(value == 1);
		return this.myImageScaleQuality = value;
	}
	,myMipmapScaleQuality: null
	,get_mipmapScaleQuality: function() {
		return this.myMipmapScaleQuality;
	}
	,set_mipmapScaleQuality: function(value) {
		this.imagePainter.setBilinearMipmapFilter(value == 1);
		return this.myMipmapScaleQuality = value;
	}
	,pipelineCache: null
	,lastPipeline: null
	,setPipeline: function(pipeline) {
		if(pipeline == this.lastPipeline) {
			return;
		}
		this.lastPipeline = pipeline;
		this.flush();
		if(pipeline == null) {
			this.imagePainter.set_pipeline(null);
			this.coloredPainter.set_pipeline(null);
			this.textPainter.set_pipeline(null);
		} else {
			var cache = this.pipelineCache.h[pipeline.__id__];
			if(cache == null) {
				cache = new kha_graphics4_PipelineCache(pipeline,true);
				this.pipelineCache.set(pipeline,cache);
			}
			this.imagePainter.set_pipeline(cache);
			this.coloredPainter.set_pipeline(cache);
			this.textPainter.set_pipeline(cache);
		}
	}
	,scissorEnabled: null
	,scissorX: null
	,scissorY: null
	,scissorW: null
	,scissorH: null
	,scissor: function(x,y,width,height) {
		this.scissorEnabled = true;
		this.scissorX = x;
		this.scissorY = y;
		this.scissorW = width;
		this.scissorH = height;
		this.flush();
		this.g.scissor(x,y,width,height);
	}
	,disableScissor: function() {
		this.scissorEnabled = false;
		this.flush();
		this.g.disableScissor();
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(kha_graphics4_Graphics2.current == null) {
			kha_graphics4_Graphics2.current = this;
		} else {
			throw new js__$Boot_HaxeError("End before you begin");
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
		if(kha_graphics4_Graphics2.current == this) {
			kha_graphics4_Graphics2.current = null;
		} else {
			throw new js__$Boot_HaxeError("Begin before you end");
		}
	}
	,drawVideoInternal: function(video,x,y,width,height) {
	}
	,drawVideo: function(video,x,y,width,height) {
		this.setPipeline(kha_graphics4_Graphics2.videoPipeline);
		this.drawVideoInternal(video,x,y,width,height);
		this.setPipeline(null);
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.lockEnd = 0;
	this.lockStart = 0;
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Uint32Array(indexCount);
	this._data = this1;
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = true;
kha_graphics4_IndexBuffer.prototype = {
	buffer: null
	,_data: null
	,mySize: null
	,usage: null
	,lockStart: null
	,lockEnd: null
	,'delete': function() {
		this._data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function(start,count) {
		this.lockStart = start != null ? start : 0;
		this.lockEnd = count != null ? start + count : this.mySize;
		return this._data.subarray(this.lockStart,this.lockEnd);
	}
	,unlock: function(count) {
		if(count != null) {
			this.lockEnd = this.lockStart + count;
		}
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		var data = this._data.subarray(this.lockStart,this.lockEnd);
		var glData = kha_SystemImpl.elementIndexUint == null ? new Uint16Array(data) : data;
		kha_SystemImpl.gl.bufferData(34963,glData,this.usage == 1 ? 35048 : 35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tessellationControlShader = null;
	this.tessellationEvaluationShader = null;
	this.cullMode = 2;
	this.depthWrite = false;
	this.depthMode = 0;
	this.stencilMode = 0;
	this.stencilBothPass = 0;
	this.stencilDepthFail = 0;
	this.stencilFail = 0;
	this.stencilReferenceValue = kha_graphics4_StencilValue.Static(0);
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = 1;
	this.blendDestination = 2;
	this.blendOperation = 0;
	this.alphaBlendSource = 1;
	this.alphaBlendDestination = 2;
	this.alphaBlendOperation = 0;
	this.colorWriteMasksRed = [];
	this.colorWriteMasksGreen = [];
	this.colorWriteMasksBlue = [];
	this.colorWriteMasksAlpha = [];
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorAttachmentCount = 1;
	this.colorAttachments = [];
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.conservativeRasterization = false;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = true;
kha_graphics4_PipelineStateBase.prototype = {
	inputLayout: null
	,vertexShader: null
	,fragmentShader: null
	,geometryShader: null
	,tessellationControlShader: null
	,tessellationEvaluationShader: null
	,cullMode: null
	,depthWrite: null
	,depthMode: null
	,stencilMode: null
	,stencilBothPass: null
	,stencilDepthFail: null
	,stencilFail: null
	,stencilReferenceValue: null
	,stencilReadMask: null
	,stencilWriteMask: null
	,blendSource: null
	,blendDestination: null
	,blendOperation: null
	,alphaBlendSource: null
	,alphaBlendDestination: null
	,alphaBlendOperation: null
	,colorWriteMasksRed: null
	,colorWriteMasksGreen: null
	,colorWriteMasksBlue: null
	,colorWriteMasksAlpha: null
	,colorAttachmentCount: null
	,colorAttachments: null
	,set_colorWriteMask: function(value) {
		var value1 = this.colorWriteMasksAlpha[0] = value;
		var value2 = this.colorWriteMasksGreen[0] = value1;
		var value3 = this.colorWriteMasksBlue[0] = value2;
		return this.colorWriteMasksRed[0] = value3;
	}
	,get_colorWriteMaskRed: function() {
		return this.colorWriteMasksRed[0];
	}
	,set_colorWriteMaskRed: function(value) {
		return this.colorWriteMasksRed[0] = value;
	}
	,get_colorWriteMaskGreen: function() {
		return this.colorWriteMasksGreen[0];
	}
	,set_colorWriteMaskGreen: function(value) {
		return this.colorWriteMasksGreen[0] = value;
	}
	,get_colorWriteMaskBlue: function() {
		return this.colorWriteMasksBlue[0];
	}
	,set_colorWriteMaskBlue: function(value) {
		return this.colorWriteMasksBlue[0] = value;
	}
	,get_colorWriteMaskAlpha: function() {
		return this.colorWriteMasksAlpha[0];
	}
	,set_colorWriteMaskAlpha: function(value) {
		return this.colorWriteMasksAlpha[0] = value;
	}
	,conservativeRasterization: null
	,__class__: kha_graphics4_PipelineStateBase
};
var kha_graphics4_PipelineState = function() {
	this.program = null;
	kha_graphics4_PipelineStateBase.call(this);
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = true;
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	program: null
	,textures: null
	,textureValues: null
	,'delete': function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
	}
	,compile: function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
		this.program = kha_SystemImpl.gl.createProgram();
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var structure = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g11 = structure.elements;
			while(_g2 < _g11.length) {
				var element = _g11[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == 4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			throw new js__$Boot_HaxeError("Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program));
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g = 0;
		var _g1 = this.textureValues.length;
		while(_g < _g1) {
			var index = _g++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMasksRed[0],this.colorWriteMasksGreen[0],this.colorWriteMasksBlue[0],this.colorWriteMasksAlpha[0]);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		var highp = kha_SystemImpl.gl.getShaderPrecisionFormat(35632,36338);
		var highpSupported = highp.precision != 0;
		var files = shader.files;
		var _g = 0;
		var _g1 = files.length;
		while(_g < _g1) {
			var i = _g++;
			if(kha_SystemImpl.gl2) {
				if(files[i].indexOf("-webgl2") >= 0 || files[i].indexOf("runtime-string") >= 0) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			} else {
				if(!highpSupported && (files[i].indexOf("-relaxed") >= 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
				if(highpSupported && (files[i].indexOf("-relaxed") < 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			}
		}
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			throw new js__$Boot_HaxeError("Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s));
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
		if(location == null) {
			haxe_Log.trace("Warning: Uniform " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 92, className : "kha.graphics4.PipelineState", methodName : "getConstantLocation"});
		}
		var type = 5126;
		var count = kha_SystemImpl.gl.getProgramParameter(this.program,35718);
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			var info = kha_SystemImpl.gl.getActiveUniform(this.program,i);
			if(info.name == name || info.name == name + "[0]") {
				type = info.type;
				break;
			}
		}
		return new kha_js_graphics4_ConstantLocation(location,type);
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			if(location == null) {
				haxe_Log.trace("Warning: Sampler " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 111, className : "kha.graphics4.PipelineState", methodName : "getTextureUnit"});
			}
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g = 0;
		var _g1 = this.textures.length;
		while(_g < _g1) {
			var index = _g++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilValue = $hxEnums["kha.graphics4.StencilValue"] = { __ename__ : true, __constructs__ : ["Dynamic","Static"]
	,Dynamic: {_hx_index:0,__enum__:"kha.graphics4.StencilValue",toString:$estr}
	,Static: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"kha.graphics4.StencilValue",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var kha_graphics4_TessellationControlShader = function(source,file) {
};
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = true;
kha_graphics4_TessellationControlShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_TessellationControlShader
};
var kha_graphics4_TessellationEvaluationShader = function(source,file) {
};
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = true;
kha_graphics4_TessellationEvaluationShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_TessellationEvaluationShader
};
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = true;
kha_graphics4_TextureUnit.__isInterface__ = true;
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.lockEnd = 0;
	this.lockStart = 0;
	this.usage = usage;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		switch(element.data) {
		case 0:
			this.myStride += 4;
			break;
		case 1:
			this.myStride += 8;
			break;
		case 2:
			this.myStride += 12;
			break;
		case 3:
			this.myStride += 16;
			break;
		case 4:
			this.myStride += 64;
			break;
		case 5:
			this.myStride += 4;
			break;
		case 6:
			this.myStride += 8;
			break;
		}
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Float32Array(vertexCount * this.myStride / 4 | 0);
	this._data = this1;
	this.sizes = [];
	this.offsets = [];
	this.types = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	this.types[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g2 = 0;
	var _g3 = structure.elements;
	while(_g2 < _g3.length) {
		var element1 = _g3[_g2];
		++_g2;
		var size;
		var type;
		switch(element1.data) {
		case 0:
			size = 1;
			type = 5126;
			break;
		case 1:
			size = 2;
			type = 5126;
			break;
		case 2:
			size = 3;
			type = 5126;
			break;
		case 3:
			size = 4;
			type = 5126;
			break;
		case 4:
			size = 16;
			type = 5126;
			break;
		case 5:
			size = 2;
			type = 5122;
			break;
		case 6:
			size = 4;
			type = 5122;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		this.types[index] = type;
		switch(element1.data) {
		case 0:
			offset += 4;
			break;
		case 1:
			offset += 8;
			break;
		case 2:
			offset += 12;
			break;
		case 3:
			offset += 16;
			break;
		case 4:
			offset += 64;
			break;
		case 5:
			offset += 4;
			break;
		case 6:
			offset += 8;
			break;
		}
		++index;
	}
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = true;
kha_graphics4_VertexBuffer.prototype = {
	buffer: null
	,_data: null
	,mySize: null
	,myStride: null
	,sizes: null
	,offsets: null
	,types: null
	,usage: null
	,instanceDataStepRate: null
	,lockStart: null
	,lockEnd: null
	,'delete': function() {
		this._data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function(start,count) {
		this.lockStart = start != null ? start : 0;
		this.lockEnd = count != null ? start + count : this.mySize;
		return this._data.subarray(this.lockStart * this.stride(),this.lockEnd * this.stride());
	}
	,lockInt16: function(start,count) {
		var this1 = new Int16Array(this.lock(start,count).buffer);
		return this1;
	}
	,unlock: function(count) {
		if(count != null) {
			this.lockEnd = this.lockStart + count;
		}
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		kha_SystemImpl.gl.bufferData(34962,this._data.subarray(this.lockStart * this.stride(),this.lockEnd * this.stride()),this.usage == 1 ? 35048 : 35044);
	}
	,stride: function() {
		return this.myStride;
	}
	,count: function() {
		return this.mySize;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl2 ? true : kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g = 0;
		var _g1 = this.sizes.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						if(kha_SystemImpl.gl2) {
							kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
						} else {
							ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
						}
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				var normalized = this.types[i] == 5126 ? false : true;
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],this.types[i],normalized,this.myStride,this.offsets[i]);
				if(ext) {
					if(kha_SystemImpl.gl2) {
						kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
					} else {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = true;
kha_graphics4_VertexElement.prototype = {
	name: null
	,data: null
	,__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35633;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = true;
kha_graphics4_VertexShader.fromSource = function(source) {
	var shader = new kha_graphics4_VertexShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_VertexShader.prototype = {
	sources: null
	,type: null
	,shader: null
	,files: null
	,'delete': function() {
		kha_SystemImpl.gl.deleteShader(this.shader);
		this.shader = null;
		this.sources = null;
	}
	,__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
	this.instanced = false;
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = true;
kha_graphics4_VertexStructure.prototype = {
	elements: null
	,instanced: null
	,add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,byteSize: function() {
		var byteSize = 0;
		var _g = 0;
		var _g1 = this.elements.length;
		while(_g < _g1) {
			var i = _g++;
			byteSize += this.dataByteSize(this.elements[i].data);
		}
		return byteSize;
	}
	,dataByteSize: function(data) {
		switch(data) {
		case 0:
			return 4;
		case 1:
			return 8;
		case 2:
			return 12;
		case 3:
			return 16;
		case 4:
			return 64;
		case 5:
			return 4;
		case 6:
			return 8;
		}
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(index,id) {
	if(id == null) {
		id = "unknown";
	}
	if(index == null) {
		index = 0;
	}
	this.index = index;
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[index] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = true;
kha_input_Gamepad.get = function(index) {
	if(index == null) {
		index = 0;
	}
	if(index >= kha_input_Gamepad.instances.length) {
		return null;
	}
	return kha_input_Gamepad.instances[index];
};
kha_input_Gamepad.notifyOnConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		kha_input_Gamepad.connectListeners.push(connectListener);
	}
	if(disconnectListener != null) {
		kha_input_Gamepad.disconnectListeners.push(disconnectListener);
	}
};
kha_input_Gamepad.removeConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.connectListeners,connectListener);
	}
	if(disconnectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.disconnectListeners,disconnectListener);
	}
};
kha_input_Gamepad.sendConnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = true;
	var _g = 0;
	var _g1 = kha_input_Gamepad.connectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.sendDisconnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = false;
	var _g = 0;
	var _g1 = kha_input_Gamepad.disconnectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.prototype = {
	index: null
	,notify: function(axisListener,buttonListener) {
		if(axisListener != null) {
			this.axisListeners.push(axisListener);
		}
		if(buttonListener != null) {
			this.buttonListeners.push(buttonListener);
		}
	}
	,remove: function(axisListener,buttonListener) {
		if(axisListener != null) {
			HxOverrides.remove(this.axisListeners,axisListener);
		}
		if(buttonListener != null) {
			HxOverrides.remove(this.buttonListeners,buttonListener);
		}
	}
	,axisListeners: null
	,buttonListeners: null
	,id: null
	,vendor: null
	,connected: null
	,get_id: function() {
		return kha_SystemImpl.getGamepadId(this.index);
	}
	,get_vendor: function() {
		return kha_SystemImpl.getGamepadVendor(this.index);
	}
	,sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(axis,value);
		}
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(button,value);
		}
	}
	,__class__: kha_input_Gamepad
};
var kha_input_BlockInterventions = $hxEnums["kha.input.BlockInterventions"] = { __ename__ : true, __constructs__ : ["Default","Full","None","Custom"]
	,Default: {_hx_index:0,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Full: {_hx_index:1,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,None: {_hx_index:2,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:3,func:func,__enum__:"kha.input.BlockInterventions",toString:$estr}; },$_.__params__ = ["func"],$_)
};
var kha_netsync_Controller = function() {
	this.__id = kha_netsync_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.netsync.Controller"] = kha_netsync_Controller;
kha_netsync_Controller.__name__ = true;
kha_netsync_Controller.prototype = {
	__id: null
	,_inputBufferIndex: null
	,_inputBuffer: null
	,_id: function() {
		return this.__id;
	}
	,_receive: function(bytes) {
	}
	,__class__: kha_netsync_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_netsync_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	this.pressListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = true;
kha_input_Keyboard.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getKeyboard(num);
};
kha_input_Keyboard.disableSystemInterventions = function(behavior) {
	kha_input_Keyboard.keyBehavior = behavior;
};
kha_input_Keyboard.__super__ = kha_netsync_Controller;
kha_input_Keyboard.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
		if(pressListener != null) {
			this.pressListeners.push(pressListener);
		}
	}
	,remove: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
		if(pressListener != null) {
			HxOverrides.remove(this.pressListeners,pressListener);
		}
	}
	,show: function() {
	}
	,hide: function() {
	}
	,downListeners: null
	,upListeners: null
	,pressListeners: null
	,sendDownEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,0);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendUpEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,1);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendPressEvent: function(char) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,2);
			bytes.b[4] = HxOverrides.cca(char,0);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.pressListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(char);
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = bytes.b[4];
			this.sendDownEvent(input0);
			return;
		}
		if(funcindex == 1) {
			var input01 = bytes.b[4];
			this.sendUpEvent(input01);
			return;
		}
		if(funcindex == 2) {
			var code = bytes.b[4];
			var input02 = String.fromCodePoint(code);
			this.sendPressEvent(input02);
			return;
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_MouseEventBlockBehavior = $hxEnums["kha.input.MouseEventBlockBehavior"] = { __ename__ : true, __constructs__ : ["Full","None","Custom"]
	,Full: {_hx_index:0,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,None: {_hx_index:1,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}; },$_.__params__ = ["func"],$_)
};
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_netsync_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = true;
kha_input_Mouse.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getMouse(num);
};
kha_input_Mouse.setWheelEventBlockBehavior = function(behavior) {
	kha_input_Mouse.wheelEventBlockBehavior = behavior;
};
kha_input_Mouse.__super__ = kha_netsync_Controller;
kha_input_Mouse.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,remove: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners == null) {
				this.windowLeaveListeners = [];
			}
			while(this.windowLeaveListeners.length <= windowId) this.windowLeaveListeners.push([]);
			this.windowLeaveListeners[windowId].push(leaveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 130, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 134, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 144, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 148, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 158, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 162, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 172, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 176, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners != null) {
				if(windowId < this.windowLeaveListeners.length) {
					HxOverrides.remove(this.windowLeaveListeners[windowId],leaveListener);
				} else {
					haxe_Log.trace("no leaveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 186, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no leaveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 190, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,canLock: function() {
		return false;
	}
	,isLocked: function() {
		return false;
	}
	,notifyOnLockChange: function(change,error) {
	}
	,removeFromLockChange: function(change,error) {
	}
	,hideSystemCursor: function() {
	}
	,showSystemCursor: function() {
	}
	,windowDownListeners: null
	,windowUpListeners: null
	,windowMoveListeners: null
	,windowWheelListeners: null
	,windowLeaveListeners: null
	,sendLeaveEvent: function(windowId) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(8));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowLeaveListeners != null) {
			var _g = 0;
			var _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,movementX,movementY);
			}
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,4);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(delta);
			}
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = bytes.getInt32(4);
			this.sendLeaveEvent(input0);
			return;
		}
		if(funcindex == 1) {
			var input01 = bytes.getInt32(4);
			var input1 = bytes.getInt32(8);
			var input2 = bytes.getInt32(12);
			var input3 = bytes.getInt32(16);
			this.sendDownEvent(input01,input1,input2,input3);
			return;
		}
		if(funcindex == 2) {
			var input02 = bytes.getInt32(4);
			var input11 = bytes.getInt32(8);
			var input21 = bytes.getInt32(12);
			var input31 = bytes.getInt32(16);
			this.sendUpEvent(input02,input11,input21,input31);
			return;
		}
		if(funcindex == 3) {
			var input03 = bytes.getInt32(4);
			var input12 = bytes.getInt32(8);
			var input22 = bytes.getInt32(12);
			var input32 = bytes.getInt32(16);
			var input4 = bytes.getInt32(20);
			this.sendMoveEvent(input03,input12,input22,input32,input4);
			return;
		}
		if(funcindex == 4) {
			var input04 = bytes.getInt32(4);
			var input13 = bytes.getInt32(8);
			this.sendWheelEvent(input04,input13);
			return;
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = true;
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	lock: function() {
		kha_SystemImpl.lockMouse();
	}
	,unlock: function() {
		kha_SystemImpl.unlockMouse();
	}
	,canLock: function() {
		return kha_SystemImpl.canLockMouse();
	}
	,isLocked: function() {
		return kha_SystemImpl.isMouseLocked();
	}
	,notifyOnLockChange: function(func,error) {
		kha_SystemImpl.notifyOfMouseLockChange(func,error);
	}
	,removeFromLockChange: function(func,error) {
		kha_SystemImpl.removeFromMouseLockChange(func,error);
	}
	,hideSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "none";
	}
	,showSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "default";
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
	}
	,__class__: kha_input_MouseImpl
});
var kha_input_Pen = function() {
	kha_input_Pen.instance = this;
};
$hxClasses["kha.input.Pen"] = kha_input_Pen;
kha_input_Pen.__name__ = true;
kha_input_Pen.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getPen(num);
};
kha_input_Pen.prototype = {
	notify: function(downListener,upListener,moveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener);
	}
	,remove: function(downListener,upListener,moveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener) {
		if(downListener != null && this.windowDownListeners != null) {
			if(windowId < this.windowDownListeners.length) {
				HxOverrides.remove(this.windowDownListeners[windowId],downListener);
			}
		}
		if(upListener != null && this.windowUpListeners != null) {
			if(windowId < this.windowUpListeners.length) {
				HxOverrides.remove(this.windowUpListeners[windowId],upListener);
			}
		}
		if(moveListener != null && this.windowMoveListeners != null) {
			if(windowId < this.windowMoveListeners.length) {
				HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
			}
		}
	}
	,windowDownListeners: null
	,windowUpListeners: null
	,windowMoveListeners: null
	,sendDownEvent: function(windowId,x,y,pressure) {
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	,sendUpEvent: function(windowId,x,y,pressure) {
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,pressure) {
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	,__class__: kha_input_Pen
};
var kha_input_Sensor = function() {
	this.listeners = [];
};
$hxClasses["kha.input.Sensor"] = kha_input_Sensor;
kha_input_Sensor.__name__ = true;
kha_input_Sensor.get = function(type) {
	switch(type) {
	case 0:
		return kha_input_Sensor.accelerometer;
	case 1:
		return kha_input_Sensor.gyroscope;
	}
};
kha_input_Sensor._changed = function(type,x,y,z) {
	var sensor = kha_input_Sensor.get(type == 0 ? 0 : 1);
	var _g = 0;
	var _g1 = sensor.listeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(x,y,z);
	}
};
kha_input_Sensor.prototype = {
	listeners: null
	,notify: function(listener) {
		if(!kha_input_Sensor.isInited) {
			kha_SystemImpl.initSensor();
			kha_input_Sensor.isInited = true;
		}
		this.listeners.push(listener);
	}
	,__class__: kha_input_Sensor
};
var kha_input_TouchDownEventBlockBehavior = $hxEnums["kha.input.TouchDownEventBlockBehavior"] = { __ename__ : true, __constructs__ : ["Full","None","Custom"]
	,Full: {_hx_index:0,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,None: {_hx_index:1,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}; },$_.__params__ = ["func"],$_)
};
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = true;
kha_input_Surface.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num != 0) {
		return null;
	}
	return kha_input_Surface.instance;
};
kha_input_Surface.setTouchDownEventBlockBehavior = function(behavior) {
	kha_input_Surface.touchDownEventBlockBehavior = behavior;
};
kha_input_Surface.prototype = {
	notify: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,remove: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			HxOverrides.remove(this.moveListeners,moveListener);
		}
	}
	,touchStartListeners: null
	,touchEndListeners: null
	,moveListeners: null
	,sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.bytes = bytes;
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = true;
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.alloc = function(size) {
	return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
};
kha_internal_BytesBlob.readF32 = function(i) {
	var sign = (i & -2147483648) == 0 ? 1 : -1;
	var exp = i >> 23 & 255;
	var man = i & 8388607;
	switch(exp) {
	case 0:
		return 0.0;
	case 255:
		if(man != 0) {
			return NaN;
		} else if(sign > 0) {
			return Infinity;
		} else {
			return -Infinity;
		}
		break;
	default:
		return sign * ((man + 8388608) / 8388608.0) * Math.pow(2,exp - 127);
	}
};
kha_internal_BytesBlob.bit = function(value,position) {
	var b = (value >>> position & 1) == 1;
	if(b) {
		var a = 3;
		++a;
		return true;
	} else {
		var c = 4;
		--c;
		return false;
	}
};
kha_internal_BytesBlob.toText = function(chars,length) {
	var value = "";
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		value += String.fromCodePoint(chars[i]);
	}
	return value;
};
kha_internal_BytesBlob.prototype = {
	bytes: null
	,sub: function(start,length) {
		return new kha_internal_BytesBlob(this.bytes.sub(start,length));
	}
	,length: null
	,get_length: function() {
		return this.bytes.length;
	}
	,writeU8: function(position,value) {
		this.bytes.b[position] = value;
	}
	,readU8: function(position) {
		var byte = this.bytes.b[position];
		++position;
		return byte;
	}
	,readS8: function(position) {
		var byte = this.bytes.b[position];
		++position;
		var sign = (byte & 128) == 0 ? 1 : -1;
		byte &= 127;
		return sign * byte;
	}
	,readU16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return first * 256 + second;
	}
	,readU16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return second * 256 + first;
	}
	,readU32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
	}
	,readU32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readS16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		if(sign == -1) {
			return -32767 + first * 256 + second;
		} else {
			return first * 256 + second;
		}
	}
	,readS16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		var sign = (second & 128) == 0 ? 1 : -1;
		second &= 127;
		position += 2;
		if(sign == -1) {
			return -32767 + second * 256 + first;
		} else {
			return second * 256 + first;
		}
	}
	,readS32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		} else {
			return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		}
	}
	,readS32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (fourth & 128) == 0 ? 1 : -1;
		fourth &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
		}
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readF32LE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32LE(position));
	}
	,readF32BE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32BE(position));
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,readUtf8String: function() {
		return this.bytes.toString();
	}
	,toBytes: function() {
		return this.bytes;
	}
	,unload: function() {
		this.bytes = null;
	}
	,__class__: kha_internal_BytesBlob
};
var kha_internal_HdrFormat = function() {
};
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = true;
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 43, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var this1 = new Uint8Array(4);
	var rgbe = this1;
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var this2 = new Uint8Array(2);
	var buf = this2;
	var bufferLength = buffer.length;
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 59, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0];
			data[offset++] = rgbe[1];
			data[offset++] = rgbe[2];
			data[offset++] = rgbe[3];
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 74, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			var this3 = new Uint8Array(4 * scanline_width);
			scanline_buffer = this3;
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			ptr_end = (i + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 88, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 95, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1];
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 106, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1];
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 112, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		var _g2 = scanline_width;
		while(_g1 < _g2) {
			var i1 = _g1++;
			data[offset] = scanline_buffer[i1];
			data[offset + 1] = scanline_buffer[i1 + scanline_width];
			data[offset + 2] = scanline_buffer[i1 + 2 * scanline_width];
			data[offset + 3] = scanline_buffer[i1 + 3 * scanline_width];
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCodePoint(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var exposure = 1.0;
	var gamma = 1.0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			exposure = parseFloat(kha_internal_HdrFormat.exposurePattern.matched(1));
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 175, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var this1 = new Uint8Array(width * height * 4);
	var data = this1;
	var scanline_width = width;
	var num_scanlines = height;
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,scanline_width,num_scanlines);
	var this2 = new Float32Array(width * height * 4);
	var floatData = this2;
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var e = data[offset + 3];
		var f = Math.pow(2.0,e - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
kha_internal_HdrFormat.prototype = {
	__class__: kha_internal_HdrFormat
};
var kha_js_AEAudioChannel = function(element,looping) {
	this.stopped = false;
	this.element = element;
	this.looping = looping;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = true;
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.prototype = {
	element: null
	,stopped: null
	,looping: null
	,play: function() {
		this.stopped = false;
		this.element.play();
	}
	,pause: function() {
		try {
			this.element.pause();
		} catch( e ) {
			haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/AEAudioChannel.hx", lineNumber : 26, className : "kha.js.AEAudioChannel", methodName : "pause"});
		}
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
			this.stopped = true;
		} catch( e ) {
			haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/AEAudioChannel.hx", lineNumber : 37, className : "kha.js.AEAudioChannel", methodName : "stop"});
		}
	}
	,length: null
	,get_length: function() {
		if(isFinite(this.element.duration)) {
			return this.element.duration;
		} else {
			return Infinity;
		}
	}
	,get_position: function() {
		return this.element.currentTime;
	}
	,set_position: function(value) {
		return this.element.currentTime = value;
	}
	,get_volume: function() {
		return this.element.volume;
	}
	,set_volume: function(value) {
		return this.element.volume = value;
	}
	,finished: null
	,get_finished: function() {
		if(!this.stopped) {
			if(!this.looping) {
				return this.get_position() >= this.get_length();
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: kha_js_AEAudioChannel
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = true;
kha_js_AudioElementAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_AudioElementAudio.stream(sound,loop);
};
kha_js_AudioElementAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element,loop);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.clipping = false;
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha__$Color_Color_$Impl_$.fromBytes(0,0,0);
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = true;
kha_js_CanvasGraphics.stringWidth = function(font,text) {
	if(kha_js_CanvasGraphics.instance == null) {
		return 5 * text.length;
	} else {
		kha_js_CanvasGraphics.instance.set_font(font);
		return kha_js_CanvasGraphics.instance.canvas.measureText(text).width;
	}
};
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	canvas: null
	,webfont: null
	,myColor: null
	,scaleQuality: null
	,clipping: null
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		} else {
			this.canvas.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,drawImage: function(img,x,y) {
		this.canvas.globalAlpha = this.get_opacity();
		this.canvas.drawImage((js_Boot.__cast(img , kha_CanvasImage)).image,x,y);
		this.canvas.globalAlpha = 1;
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.canvas.globalAlpha = this.get_opacity();
		try {
			if(dw < 0 || dh < 0) {
				this.canvas.save();
				this.canvas.translate(dx,dy);
				var x = 0.0;
				var y = 0.0;
				if(dw < 0) {
					this.canvas.scale(-1,1);
					x = -dw;
				}
				if(dh < 0) {
					this.canvas.scale(1,-1);
					y = -dh;
				}
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,x,y,dw,dh);
				this.canvas.restore();
			} else {
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,dx,dy,dw,dh);
			}
		} catch( ex ) {
			var ex1 = ((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex;
		}
		this.canvas.globalAlpha = 1;
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,get_color: function() {
		return this.myColor;
	}
	,get_imageScaleQuality: function() {
		return this.scaleQuality;
	}
	,set_imageScaleQuality: function(value) {
		if(value == 0) {
			this.canvas.mozImageSmoothingEnabled = false;
			this.canvas.webkitImageSmoothingEnabled = false;
			this.canvas.msImageSmoothingEnabled = false;
			this.canvas.imageSmoothingEnabled = false;
		} else {
			this.canvas.mozImageSmoothingEnabled = true;
			this.canvas.webkitImageSmoothingEnabled = true;
			this.canvas.msImageSmoothingEnabled = true;
			this.canvas.imageSmoothingEnabled = true;
		}
		return this.scaleQuality = value;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.rect(x,y,width,height);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillRect: function(x,y,width,height) {
		var tmp = this.get_opacity();
		this.canvas.globalAlpha = tmp * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,drawArc: function(cx,cy,radius,sAngle,eAngle,strength,ccw) {
		if(ccw == null) {
			ccw = false;
		}
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,sAngle,eAngle,ccw);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,drawCircle: function(cx,cy,radius,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		var eAngle = 2 * Math.PI;
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,0,eAngle,false);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,_drawArc: function(cx,cy,radius,sAngle,eAngle,strength,ccw) {
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,sAngle,eAngle,ccw);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillArc: function(cx,cy,radius,sAngle,eAngle,ccw) {
		if(ccw == null) {
			ccw = false;
		}
		this.canvas.beginPath();
		this.canvas.arc(cx,cy,radius,sAngle,eAngle,ccw);
		this.canvas.fill();
	}
	,fillCircle: function(cx,cy,radius) {
		this.canvas.beginPath();
		this.canvas.arc(cx,cy,radius,0,2 * Math.PI,false);
		this.canvas.fill();
	}
	,bakedQuadCache: null
	,drawString: function(text,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var ypos = y;
			var _g = 0;
			var _g1 = text.length;
			while(_g < _g1) {
				var i = _g++;
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(this.bakedQuadCache,kha_graphics2_Graphics.fontGlyphs.indexOf(HxOverrides.cca(text,i)),xpos,ypos);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,drawCharacters: function(text,start,length,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var ypos = y;
			var _g = start;
			var _g1 = start + length;
			while(_g < _g1) {
				var i = _g++;
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(this.bakedQuadCache,kha_graphics2_Graphics.fontGlyphs.indexOf(text[i]),xpos,ypos);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,set_font: function(font) {
		this.webfont = js_Boot.__cast(font , kha_js_Font);
		return this.webfont;
	}
	,get_font: function() {
		return this.webfont;
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldWith = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.moveTo(0,0);
		this.canvas.stroke();
		this.canvas.lineWidth = oldWith;
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.canvas.beginPath();
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.lineTo(x3,y3);
		this.canvas.closePath();
		this.canvas.fill();
	}
	,scissor: function(x,y,width,height) {
		if(!this.clipping) {
			this.canvas.save();
			this.clipping = true;
		}
		this.canvas.beginPath();
		this.canvas.rect(x,y,width,height);
		this.canvas.clip();
	}
	,disableScissor: function() {
		if(this.clipping) {
			this.canvas.restore();
			this.clipping = false;
		}
	}
	,drawVideo: function(video,x,y,width,height) {
		this.canvas.drawImage((js_Boot.__cast(video , kha_js_Video)).element,x,y,width,height);
	}
	,setTransformation: function(transformation) {
		this.canvas.setTransform(transformation._00,transformation._01,transformation._10,transformation._11,transformation._20,transformation._21);
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_Font = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.kravur = new kha_js_Font.Kravur(blob);
};
$hxClasses["kha.js.Font"] = kha_js_Font;
kha_js_Font.__name__ = true;
kha_js_Font.__interfaces__ = [kha_Resource];
kha_js_Font.fromBytes = function(bytes) {
	return new kha_js_Font(kha_internal_BytesBlob.fromBytes(bytes));
};
kha_js_Font.prototype = {
	kravur: null
	,images: null
	,height: function(fontSize) {
		return this.kravur._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this.kravur._get(fontSize).stringWidth(str);
	}
	,widthOfCharacters: function(fontSize,characters,start,length) {
		return this.kravur._get(fontSize).charactersWidth(characters,start,length);
	}
	,baseline: function(fontSize) {
		return this.kravur._get(fontSize).getBaselinePosition();
	}
	,getImage: function(fontSize,color) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		var imageIndex = fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var this1 = this.images;
			var v = new haxe_ds_IntMap();
			this1.h[imageIndex] = v;
		}
		if(!this.images.h[imageIndex].h.hasOwnProperty(color)) {
			var kravur = this.kravur._get(fontSize);
			var canvas = window.document.createElement("canvas");
			canvas.width = kravur.width;
			canvas.height = kravur.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = "black";
			ctx.fillRect(0,0,kravur.width,kravur.height);
			var imageData = ctx.getImageData(0,0,kravur.width,kravur.height);
			var bytes = (js_Boot.__cast(kravur.getTexture() , kha_CanvasImage)).bytes;
			var _g = 0;
			var _g1 = bytes.length;
			while(_g < _g1) {
				var i = _g++;
				imageData.data[i * 4] = (color & 16711680) >>> 16;
				imageData.data[i * 4 + 1] = (color & 65280) >>> 8;
				imageData.data[i * 4 + 2] = color & 255;
				imageData.data[i * 4 + 3] = bytes.b[i];
			}
			ctx.putImageData(imageData,0,0);
			var img = window.document.createElement("img");
			img.src = canvas.toDataURL("image/png");
			this.images.h[imageIndex].h[color] = img;
			return img;
		}
		return this.images.h[imageIndex].h[color];
	}
	,unload: function() {
		this.kravur = null;
		this.images = null;
	}
	,__class__: kha_js_Font
};
var kha_js_MobileWebAudio = function() { };
$hxClasses["kha.js.MobileWebAudio"] = kha_js_MobileWebAudio;
kha_js_MobileWebAudio.__name__ = true;
kha_js_MobileWebAudio._init = function() {
	try {
		kha_js_MobileWebAudio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_js_MobileWebAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = new kha_js_MobileWebAudioChannel(sound,loop);
	channel.play();
	return channel;
};
kha_js_MobileWebAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_MobileWebAudio.play(sound,loop);
};
var kha_js_MobileWebAudioChannel = function(sound,loop) {
	this.stopped = false;
	this.paused = false;
	this.buffer = sound._buffer;
	this.loop = loop;
	this.createSource();
};
$hxClasses["kha.js.MobileWebAudioChannel"] = kha_js_MobileWebAudioChannel;
kha_js_MobileWebAudioChannel.__name__ = true;
kha_js_MobileWebAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_MobileWebAudioChannel.prototype = {
	buffer: null
	,loop: null
	,source: null
	,gain: null
	,startTime: null
	,pauseTime: null
	,paused: null
	,stopped: null
	,createSource: function() {
		var _gthis = this;
		this.source = kha_js_MobileWebAudio._context.createBufferSource();
		this.source.loop = this.loop;
		this.source.buffer = this.buffer;
		this.source.onended = function() {
			_gthis.stopped = true;
		};
		this.gain = kha_js_MobileWebAudio._context.createGain();
		this.source.connect(this.gain);
		this.gain.connect(kha_js_MobileWebAudio._context.destination);
	}
	,play: function() {
		if(this.paused || this.stopped) {
			this.createSource();
		}
		this.stopped = false;
		if(this.paused) {
			this.paused = false;
			this.startTime = kha_js_MobileWebAudio._context.currentTime - this.pauseTime;
			this.source.start(0,this.pauseTime);
		} else {
			this.startTime = kha_js_MobileWebAudio._context.currentTime;
			this.source.start();
		}
	}
	,pause: function() {
		var wasStopped = this.paused || this.stopped;
		this.pauseTime = kha_js_MobileWebAudio._context.currentTime - this.startTime;
		this.paused = true;
		if(wasStopped) {
			return;
		}
		this.source.stop();
	}
	,stop: function() {
		var wasStopped = this.paused || this.stopped;
		this.paused = false;
		this.stopped = true;
		if(wasStopped) {
			return;
		}
		this.source.stop();
	}
	,length: null
	,get_length: function() {
		return this.source.buffer.duration;
	}
	,get_position: function() {
		if(this.stopped) {
			return this.get_length();
		}
		if(this.paused) {
			return this.pauseTime;
		} else {
			return kha_js_MobileWebAudio._context.currentTime - this.startTime;
		}
	}
	,set_position: function(value) {
		return value;
	}
	,get_volume: function() {
		return this.gain.gain.value;
	}
	,set_volume: function(value) {
		return this.gain.gain.value = value;
	}
	,finished: null
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_js_MobileWebAudioChannel
};
var kha_js_MobileWebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		kha_js_MobileWebAudio._context.decodeAudioData(_gthis.compressedData.b.bufferValue,function(buffer) {
			_gthis.length = buffer.duration;
			_gthis.channels = buffer.numberOfChannels;
			_gthis._buffer = buffer;
			done(_gthis);
		},function() {
			failed({ url : filename, error : "Audio format not supported"});
		});
	};
	request.send(null);
};
$hxClasses["kha.js.MobileWebAudioSound"] = kha_js_MobileWebAudioSound;
kha_js_MobileWebAudioSound.__name__ = true;
kha_js_MobileWebAudioSound.__super__ = kha_Sound;
kha_js_MobileWebAudioSound.prototype = $extend(kha_Sound.prototype,{
	_buffer: null
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_MobileWebAudioSound
});
var kha_js_Sound = function(filenames,done,failed) {
	kha_Sound.call(this);
	this.done = done;
	this.failed = failed;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/wav") != "" && StringTools.endsWith(filename,".wav")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = true;
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	filenames: null
	,done: null
	,failed: null
	,element: null
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g = 0;
			var _g1 = this.filenames.length - 1;
			while(_g < _g1) {
				var i = _g++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		this.failed({ url : this.element.src});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_Video = function() {
	kha_Video.call(this);
};
$hxClasses["kha.js.Video"] = kha_js_Video;
kha_js_Video.__name__ = true;
kha_js_Video.fromElement = function(element) {
	var video = new kha_js_Video();
	video.element = element;
	if(kha_SystemImpl.gl != null) {
		video.texture = kha_Image.fromVideo(video);
	}
	return video;
};
kha_js_Video.fromFile = function(filenames,done) {
	var video = new kha_js_Video();
	video.done = done;
	video.element = window.document.createElement("video");
	video.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(video.element.canPlayType("video/webm") != "" && StringTools.endsWith(filename,".webm")) {
			video.filenames.push(filename);
		}
		if(video.element.canPlayType("video/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			video.filenames.push(filename);
		}
	}
	video.element.addEventListener("error",$bind(video,video.errorListener),false);
	video.element.addEventListener("canplaythrough",$bind(video,video.canPlayThroughListener),false);
	video.element.preload = "auto";
	video.element.src = video.filenames[0];
};
kha_js_Video.__super__ = kha_Video;
kha_js_Video.prototype = $extend(kha_Video.prototype,{
	filenames: null
	,element: null
	,done: null
	,texture: null
	,width: function() {
		return this.element.videoWidth;
	}
	,height: function() {
		return this.element.videoHeight;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
		try {
			this.element.loop = loop;
			this.element.play();
		} catch( e ) {
			haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/Video.hx", lineNumber : 64, className : "kha.js.Video", methodName : "play"});
		}
	}
	,pause: function() {
		try {
			this.element.pause();
		} catch( e ) {
			haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/Video.hx", lineNumber : 73, className : "kha.js.Video", methodName : "pause"});
		}
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
		} catch( e ) {
			haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/Video.hx", lineNumber : 83, className : "kha.js.Video", methodName : "stop"});
		}
	}
	,getCurrentPos: function() {
		return Math.ceil(this.element.currentTime * 1000);
	}
	,get_position: function() {
		return Math.ceil(this.element.currentTime * 1000);
	}
	,set_position: function(value) {
		this.element.currentTime = value / 1000;
		return value;
	}
	,getLength: function() {
		if(isFinite(this.element.duration)) {
			return Math.floor(this.element.duration * 1000);
		} else {
			return -1;
		}
	}
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g = 0;
			var _g1 = this.filenames.length - 1;
			while(_g < _g1) {
				var i = _g++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		haxe_Log.trace("Error loading " + this.element.src,{ fileName : "kha/js/Video.hx", lineNumber : 120, className : "kha.js.Video", methodName : "errorListener"});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_Image.fromVideo(this);
		}
		this.done(this);
	}
	,__class__: kha_js_Video
});
var kha_js_WebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = true;
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var ch0 = buffer.getChannelData(0);
			var ch1 = buffer.numberOfChannels == 1 ? ch0 : buffer.getChannelData(1);
			var len = ch0.length;
			var this1 = new Float32Array(len * 2);
			_gthis.uncompressedData = this1;
			_gthis.length = buffer.duration;
			_gthis.channels = buffer.numberOfChannels;
			_gthis.sampleRate = Math.round(buffer.sampleRate);
			var idx = 0;
			var i = 0;
			var lidx = len * 2;
			var uncompressInner = null;
			uncompressInner = function() {
				var chk_len = idx + 11025;
				var next_chk = chk_len > lidx ? lidx : chk_len;
				while(idx < next_chk) {
					_gthis.uncompressedData[idx] = ch0[i];
					_gthis.uncompressedData[idx + 1] = ch1[i];
					idx += 2;
					i += 1;
				}
				if(idx < lidx) {
					window.setTimeout(uncompressInner,0);
				} else {
					_gthis.compressedData = null;
					done();
				}
			};
			uncompressInner();
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value,type) {
	this.value = value;
	this.type = type;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = true;
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	value: null
	,type: null
	,__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	this.matrix3Cache = new Float32Array(9);
	this.matrixCache = new Float32Array(16);
	this.useVertexAttributes = 0;
	this.isDepthAttachment = false;
	this.isCubeMap = false;
	this.colorMaskAlpha = true;
	this.colorMaskBlue = true;
	this.colorMaskGreen = true;
	this.colorMaskRed = true;
	this.depthMask = false;
	this.depthTest = false;
	this.currentPipeline = null;
	this.renderTarget = renderTarget;
	this.init();
	if(kha_SystemImpl.gl2) {
		this.instancedExtension = true;
	} else {
		this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
	}
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = true;
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor) {
	case 1:
		return 1;
	case 0:case 2:
		return 0;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	currentPipeline: null
	,depthTest: null
	,depthMask: null
	,colorMaskRed: null
	,colorMaskGreen: null
	,colorMaskBlue: null
	,colorMaskAlpha: null
	,indicesCount: null
	,renderTarget: null
	,renderTargetFrameBuffer: null
	,renderTargetMSAA: null
	,renderTargetTexture: null
	,isCubeMap: null
	,isDepthAttachment: null
	,instancedExtension: null
	,blendMinMaxExtension: null
	,useVertexAttributes: null
	,init: function() {
		if(this.renderTarget == null) {
			return;
		}
		this.isCubeMap = ((this.renderTarget) instanceof kha_graphics4_CubeMap);
		if(this.isCubeMap) {
			var cubeMap = js_Boot.__cast(this.renderTarget , kha_graphics4_CubeMap);
			this.renderTargetFrameBuffer = cubeMap.frameBuffer;
			this.renderTargetTexture = cubeMap.texture;
			this.isDepthAttachment = cubeMap.isDepthAttachment;
		} else {
			var image = js_Boot.__cast(this.renderTarget , kha_WebGLImage);
			this.renderTargetFrameBuffer = image.frameBuffer;
			this.renderTargetMSAA = image.MSAAFrameBuffer;
			this.renderTargetTexture = image.texture;
		}
	}
	,begin: function(additionalRenderTargets) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTargetTexture,0);
				var _g = 0;
				var _g1 = additionalRenderTargets.length;
				while(_g < _g1) {
					var i = _g++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g2 = 0;
				var _g3 = additionalRenderTargets.length;
				while(_g2 < _g3) {
					var i1 = _g2++;
					attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i1 + 1);
				}
				if(kha_SystemImpl.gl2) {
					kha_SystemImpl.gl.drawBuffers(attachments);
				} else {
					kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
				}
			}
		}
	}
	,beginFace: function(face) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,this.isDepthAttachment ? 36096 : 36064,34069 + face,this.renderTargetTexture,0);
		kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
	}
	,beginEye: function(eye) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		kha_SystemImpl.gl.bindFramebuffer(36160,null);
		if(eye == 0) {
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth() * 0.5 | 0,kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.viewport(kha_System.windowWidth() * 0.5 | 0,0,kha_System.windowWidth() * 0.5 | 0,kha_System.windowHeight());
		}
	}
	,end: function() {
		if(this.renderTargetMSAA != null) {
			kha_SystemImpl.gl.bindFramebuffer(kha_SystemImpl.gl.READ_FRAMEBUFFER,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.bindFramebuffer(kha_SystemImpl.gl.DRAW_FRAMEBUFFER,this.renderTargetMSAA);
			kha_SystemImpl.gl.blitFramebuffer(0,0,this.renderTarget.get_width(),this.renderTarget.get_height(),0,0,this.renderTarget.get_width(),this.renderTarget.get_height(),16384,9728);
		}
	}
	,flush: function() {
	}
	,vsynced: function() {
		return true;
	}
	,refreshRate: function() {
		return 60;
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask |= 16384;
			kha_SystemImpl.gl.colorMask(true,true,true,true);
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		kha_SystemImpl.gl.colorMask(this.colorMaskRed,this.colorMaskGreen,this.colorMaskBlue,this.colorMaskAlpha);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,viewport: function(x,y,width,height) {
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.viewport(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.viewport(x,y,width,height);
		}
	}
	,scissor: function(x,y,width,height) {
		kha_SystemImpl.gl.enable(3089);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.scissor(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.scissor(x,y,width,height);
		}
	}
	,disableScissor: function() {
		kha_SystemImpl.gl.disable(3089);
	}
	,setDepthMode: function(write,mode) {
		switch(mode) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == 1 && destination == 2) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,createVertexBuffer: function(vertexCount,structure,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		return new kha_graphics4_VertexBuffer(vertexCount,structure,usage);
	}
	,setVertexBuffer: function(vertexBuffer) {
		this.useVertexAttributes = (js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(0);
	}
	,setVertexBuffers: function(vertexBuffers) {
		var offset = 0;
		var _g = 0;
		while(_g < vertexBuffers.length) {
			var vertexBuffer = vertexBuffers[_g];
			++_g;
			offset += (js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(offset);
		}
		this.useVertexAttributes = offset;
	}
	,createIndexBuffer: function(indexCount,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		return new kha_graphics4_IndexBuffer(indexCount,usage);
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		(js_Boot.__cast(indexBuffer , kha_graphics4_IndexBuffer)).set();
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureDepth: function(stage,texture) {
		(js_Boot.__cast(texture , kha_WebGLImage)).setDepth((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
	}
	,setTextureArray: function(unit,texture) {
	}
	,setVideoTexture: function(unit,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(unit , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast((js_Boot.__cast(texture , kha_js_Video)).texture , kha_WebGLImage)).set((js_Boot.__cast(unit , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setImageTexture: function(unit,texture) {
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(texunit , kha_js_graphics4_TextureUnit)).value);
		switch(uAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter) {
		case 0:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == 2) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setTexture3DParameters: function(texunit,uAddressing,vAddressing,wAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
	}
	,setTextureCompareMode: function(texunit,enabled) {
		if(enabled) {
			kha_SystemImpl.gl.texParameteri(3553,34892,34894);
			kha_SystemImpl.gl.texParameteri(3553,34893,515);
		} else {
			kha_SystemImpl.gl.texParameteri(3553,34892,0);
		}
	}
	,setCubeMapCompareMode: function(texunit,enabled) {
		if(enabled) {
			kha_SystemImpl.gl.texParameteri(34067,34892,34894);
			kha_SystemImpl.gl.texParameteri(34067,34893,515);
		} else {
			kha_SystemImpl.gl.texParameteri(34067,34892,0);
		}
	}
	,setCubeMap: function(stage,cubeMap) {
		if(cubeMap == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(34067,null);
		} else {
			cubeMap.set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setCubeMapDepth: function(stage,cubeMap) {
		cubeMap.setDepth((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
	}
	,maxBoundTextures: function() {
		return kha_SystemImpl.gl.getParameter(34930);
	}
	,setCullMode: function(mode) {
		switch(mode) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		this.setStencilParameters(pipe.stencilMode,pipe.stencilBothPass,pipe.stencilDepthFail,pipe.stencilFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		this.currentPipeline = pipe;
		pipe.set();
		this.colorMaskRed = pipe.colorWriteMasksRed[0];
		this.colorMaskGreen = pipe.colorWriteMasksGreen[0];
		this.colorMaskBlue = pipe.colorWriteMasksBlue[0];
		this.colorMaskAlpha = pipe.colorWriteMasksAlpha[0];
	}
	,setStencilReferenceValue: function(value) {
		kha_SystemImpl.gl.stencilFunc(this.convertCompareMode(this.currentPipeline.stencilMode),value,this.currentPipeline.stencilReadMask);
	}
	,setBool: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value ? 1 : 0);
	}
	,setInt: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setInt2: function(location,value1,value2) {
		kha_SystemImpl.gl.uniform2i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2);
	}
	,setInt3: function(location,value1,value2,value3) {
		kha_SystemImpl.gl.uniform3i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3);
	}
	,setInt4: function(location,value1,value2,value3,value4) {
		kha_SystemImpl.gl.uniform4i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3,value4);
	}
	,setInts: function(location,values) {
		var webglLocation = js_Boot.__cast(location , kha_js_graphics4_ConstantLocation);
		switch(webglLocation.type) {
		case 35667:
			kha_SystemImpl.gl.uniform2iv(webglLocation.value,values);
			break;
		case 35668:
			kha_SystemImpl.gl.uniform3iv(webglLocation.value,values);
			break;
		case 35669:
			kha_SystemImpl.gl.uniform4iv(webglLocation.value,values);
			break;
		default:
			kha_SystemImpl.gl.uniform1iv(webglLocation.value,values);
		}
	}
	,setFloat: function(location,value) {
		kha_SystemImpl.gl.uniform1f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat2: function(location,value1,value2) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2);
	}
	,setFloat3: function(location,value1,value2,value3) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3);
	}
	,setFloat4: function(location,value1,value2,value3,value4) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3,value4);
	}
	,setFloats: function(location,values) {
		var webglLocation = js_Boot.__cast(location , kha_js_graphics4_ConstantLocation);
		switch(webglLocation.type) {
		case 35664:
			kha_SystemImpl.gl.uniform2fv(webglLocation.value,values);
			break;
		case 35665:
			kha_SystemImpl.gl.uniform3fv(webglLocation.value,values);
			break;
		case 35666:
			kha_SystemImpl.gl.uniform4fv(webglLocation.value,values);
			break;
		case 35676:
			kha_SystemImpl.gl.uniformMatrix4fv(webglLocation.value,false,values);
			break;
		default:
			kha_SystemImpl.gl.uniform1fv(webglLocation.value,values);
		}
	}
	,setVector2: function(location,value) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y);
	}
	,setVector3: function(location,value) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z);
	}
	,setVector4: function(location,value) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z,value.w);
	}
	,matrixCache: null
	,setMatrix: function(location,matrix) {
		this.matrixCache[0] = matrix._00;
		this.matrixCache[1] = matrix._01;
		this.matrixCache[2] = matrix._02;
		this.matrixCache[3] = matrix._03;
		this.matrixCache[4] = matrix._10;
		this.matrixCache[5] = matrix._11;
		this.matrixCache[6] = matrix._12;
		this.matrixCache[7] = matrix._13;
		this.matrixCache[8] = matrix._20;
		this.matrixCache[9] = matrix._21;
		this.matrixCache[10] = matrix._22;
		this.matrixCache[11] = matrix._23;
		this.matrixCache[12] = matrix._30;
		this.matrixCache[13] = matrix._31;
		this.matrixCache[14] = matrix._32;
		this.matrixCache[15] = matrix._33;
		kha_SystemImpl.gl.uniformMatrix4fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrixCache);
	}
	,matrix3Cache: null
	,setMatrix3: function(location,matrix) {
		this.matrix3Cache[0] = matrix._00;
		this.matrix3Cache[1] = matrix._01;
		this.matrix3Cache[2] = matrix._02;
		this.matrix3Cache[3] = matrix._10;
		this.matrix3Cache[4] = matrix._11;
		this.matrix3Cache[5] = matrix._12;
		this.matrix3Cache[6] = matrix._20;
		this.matrix3Cache[7] = matrix._21;
		this.matrix3Cache[8] = matrix._22;
		kha_SystemImpl.gl.uniformMatrix3fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrix3Cache);
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
		var size = type == 5123 ? 2 : 4;
		kha_SystemImpl.gl.drawElements(4,count == -1 ? this.indicesCount : count,type,start * size);
		var _g = 0;
		var _g1 = this.useVertexAttributes;
		while(_g < _g1) {
			var i = _g++;
			kha_SystemImpl.gl.disableVertexAttribArray(i);
		}
	}
	,convertStencilAction: function(action) {
		switch(action) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,convertCompareMode: function(compareMode) {
		switch(compareMode) {
		case 0:
			return 519;
		case 1:
			return 512;
		case 2:
			return 514;
		case 3:
			return 517;
		case 4:
			return 513;
		case 5:
			return 515;
		case 6:
			return 516;
		case 7:
			return 518;
		}
	}
	,setStencilParameters: function(compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(compareMode == 0 && bothPass == 0 && depthFail == 0 && stencilFail == 0) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			var stencilFunc = this.convertCompareMode(compareMode);
			kha_SystemImpl.gl.stencilMask(writeMask);
			kha_SystemImpl.gl.stencilOp(this.convertStencilAction(stencilFail),this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
			switch(referenceValue._hx_index) {
			case 0:
				kha_SystemImpl.gl.stencilFunc(stencilFunc,0,readMask);
				break;
			case 1:
				var value = referenceValue.value;
				kha_SystemImpl.gl.stencilFunc(stencilFunc,value,readMask);
				break;
			}
		}
	}
	,drawIndexedVerticesInstanced: function(instanceCount,start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		if(this.instancedRenderingAvailable()) {
			var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
			var typeSize = kha_SystemImpl.elementIndexUint == null ? 2 : 4;
			if(kha_SystemImpl.gl2) {
				kha_SystemImpl.gl.drawElementsInstanced(4,count == -1 ? this.indicesCount : count,type,start * typeSize,instanceCount);
			} else {
				this.instancedExtension.drawElementsInstancedANGLE(4,count == -1 ? this.indicesCount : count,type,start * typeSize,instanceCount);
			}
		}
	}
	,instancedRenderingAvailable: function() {
		return this.instancedExtension;
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = true;
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	drawVideoInternal: function(video,x,y,width,height) {
		var v = js_Boot.__cast(video , kha_js_Video);
		this.drawScaledSubImage(v.texture,0,0,v.texture.get_width(),v.texture.get_height(),x,y,width,height);
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = true;
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	value: null
	,__class__: kha_js_graphics4_TextureUnit
};
var kha_vr_VrInterface = function() {
};
$hxClasses["kha.vr.VrInterface"] = kha_vr_VrInterface;
kha_vr_VrInterface.__name__ = true;
kha_vr_VrInterface.prototype = {
	GetSensorState: function() {
		return null;
	}
	,GetPredictedSensorState: function(time) {
		return null;
	}
	,WarpSwapBlack: function() {
	}
	,WarpSwapLoadingIcon: function() {
	}
	,WarpSwap: function(parms) {
	}
	,IsPresenting: function() {
		return false;
	}
	,IsVrEnabled: function() {
		return false;
	}
	,GetTimeInSeconds: function() {
		return 0.0;
	}
	,GetProjectionMatrix: function(eye) {
		return null;
	}
	,GetViewMatrix: function(eye) {
		return null;
	}
	,onVRRequestPresent: function() {
	}
	,onVRExitPresent: function() {
	}
	,onResetPose: function() {
	}
	,__class__: kha_vr_VrInterface
};
var kha_js_vr_VrInterface = function() {
	this.vrHeight = 0;
	this.vrWidth = 0;
	this.height = 0;
	this.width = 0;
	this.rightViewMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.leftViewMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.rightProjectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.leftProjectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.vrEnabled = false;
	kha_vr_VrInterface.call(this);
	var displayEnabled = false;
	if(displayEnabled) {
		this.vrEnabled = true;
		this.getVRDisplays();
		haxe_Log.trace("Display enabled.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 39, className : "kha.js.vr.VrInterface", methodName : "new"});
	}
};
$hxClasses["kha.js.vr.VrInterface"] = kha_js_vr_VrInterface;
kha_js_vr_VrInterface.__name__ = true;
kha_js_vr_VrInterface.__super__ = kha_vr_VrInterface;
kha_js_vr_VrInterface.prototype = $extend(kha_vr_VrInterface.prototype,{
	vrEnabled: null
	,vrDisplay: null
	,frameData: null
	,leftProjectionMatrix: null
	,rightProjectionMatrix: null
	,leftViewMatrix: null
	,rightViewMatrix: null
	,width: null
	,height: null
	,vrWidth: null
	,vrHeight: null
	,getVRDisplays: function() {
		var _gthis = this;
		var vrDisplayInstance = navigator.getVRDisplays();
		vrDisplayInstance.then(function(displays) {
			if(displays.length > 0) {
				_gthis.frameData = new VRFrameData();
				_gthis.vrDisplay = displays[0];
				_gthis.vrDisplay.depthNear = 0.1;
				_gthis.vrDisplay.depthFar = 1024.0;
				var leftEye = _gthis.vrDisplay.getEyeParameters("left");
				var rightEye = _gthis.vrDisplay.getEyeParameters("right");
				_gthis.width = kha_SystemImpl.khanvas.width;
				_gthis.height = kha_SystemImpl.khanvas.height;
				_gthis.vrWidth = Math.max(leftEye.renderWidth,rightEye.renderWidth) * 2 | 0;
				_gthis.vrHeight = Math.max(leftEye.renderHeight,rightEye.renderHeight) | 0;
			} else {
				haxe_Log.trace("There are no VR displays connected.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 59, className : "kha.js.vr.VrInterface", methodName : "getVRDisplays"});
			}
		});
	}
	,onVRRequestPresent: function() {
		var _gthis = this;
		try {
			this.vrDisplay.requestPresent([{ source : kha_SystemImpl.khanvas}]).then(function() {
				_gthis.onResize();
				_gthis.vrDisplay.requestAnimationFrame($bind(_gthis,_gthis.onAnimationFrame));
			});
		} catch( err ) {
			var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
			haxe_Log.trace("Failed to requestPresent.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 71, className : "kha.js.vr.VrInterface", methodName : "onVRRequestPresent"});
			haxe_Log.trace(err1,{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 72, className : "kha.js.vr.VrInterface", methodName : "onVRRequestPresent"});
		}
	}
	,onVRExitPresent: function() {
		var _gthis = this;
		try {
			this.vrDisplay.exitPresent([{ source : kha_SystemImpl.khanvas}]).then(function() {
				_gthis.onResize();
			});
		} catch( err ) {
			var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
			haxe_Log.trace("Failed to exitPresent.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 82, className : "kha.js.vr.VrInterface", methodName : "onVRExitPresent"});
			haxe_Log.trace(err1,{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 83, className : "kha.js.vr.VrInterface", methodName : "onVRExitPresent"});
		}
	}
	,onResetPose: function() {
		try {
			this.vrDisplay.resetPose();
		} catch( err ) {
			var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
			haxe_Log.trace("Failed to resetPose",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 91, className : "kha.js.vr.VrInterface", methodName : "onResetPose"});
			haxe_Log.trace(err1,{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 92, className : "kha.js.vr.VrInterface", methodName : "onResetPose"});
		}
	}
	,onAnimationFrame: function(timestamp) {
		if(this.vrDisplay != null && this.vrDisplay.isPresenting) {
			this.vrDisplay.requestAnimationFrame($bind(this,this.onAnimationFrame));
			this.vrDisplay.getFrameData(this.frameData);
			this.leftProjectionMatrix = this.createMatrixFromArray(this.frameData.leftProjectionMatrix);
			this.leftViewMatrix = this.createMatrixFromArray(this.frameData.leftViewMatrix);
			this.rightProjectionMatrix = this.createMatrixFromArray(this.frameData.rightProjectionMatrix);
			this.rightViewMatrix = this.createMatrixFromArray(this.frameData.rightViewMatrix);
			this.vrDisplay.submitFrame();
		}
	}
	,onResize: function() {
		if(this.vrDisplay != null && this.vrDisplay.isPresenting) {
			kha_SystemImpl.khanvas.width = this.vrWidth;
			kha_SystemImpl.khanvas.height = this.vrHeight;
		} else {
			kha_SystemImpl.khanvas.width = this.width;
			kha_SystemImpl.khanvas.height = this.height;
		}
	}
	,GetSensorState: function() {
		return this.GetPredictedSensorState(0.0);
	}
	,GetPredictedSensorState: function(time) {
		var result = new kha_vr_SensorState();
		result.Predicted = new kha_vr_PoseState();
		result.Recorded = result.Predicted;
		result.Predicted.AngularAcceleration = new kha_math_Vector3();
		result.Predicted.AngularVelocity = new kha_math_Vector3();
		result.Predicted.LinearAcceleration = new kha_math_Vector3();
		result.Predicted.LinearVelocity = new kha_math_Vector3();
		result.Predicted.TimeInSeconds = time;
		result.Predicted.Pose = new kha_vr_Pose();
		result.Predicted.Pose.Orientation = new kha_math_Quaternion();
		result.Predicted.Pose.Position = new kha_math_Vector3();
		var mPose = this.frameData.pose;
		if(mPose != null) {
			result.Predicted.AngularVelocity = this.createVectorFromArray(mPose.angularVelocity);
			result.Predicted.AngularAcceleration = this.createVectorFromArray(mPose.angularAcceleration);
			result.Predicted.LinearVelocity = this.createVectorFromArray(mPose.linearVelocity);
			result.Predicted.LinearAcceleration = this.createVectorFromArray(mPose.linearAcceleration);
			result.Predicted.Pose.Orientation = this.createQuaternion(mPose.orientation);
			result.Predicted.Pose.Position = this.createVectorFromArray(mPose.position);
		}
		return result;
	}
	,WarpSwapBlack: function() {
	}
	,WarpSwapLoadingIcon: function() {
	}
	,WarpSwap: function(parms) {
	}
	,IsPresenting: function() {
		if(this.vrDisplay != null) {
			return this.vrDisplay.isPresenting;
		}
		return false;
	}
	,IsVrEnabled: function() {
		return this.vrEnabled;
	}
	,GetTimeInSeconds: function() {
		return kha_Scheduler.time();
	}
	,GetProjectionMatrix: function(eye) {
		if(eye == 0) {
			return this.leftProjectionMatrix;
		} else {
			return this.rightProjectionMatrix;
		}
	}
	,GetViewMatrix: function(eye) {
		if(eye == 0) {
			return this.leftViewMatrix;
		} else {
			return this.rightViewMatrix;
		}
	}
	,createMatrixFromArray: function(array) {
		var matrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
		matrix._00 = array[0];
		matrix._01 = array[1];
		matrix._02 = array[2];
		matrix._03 = array[3];
		matrix._10 = array[4];
		matrix._11 = array[5];
		matrix._12 = array[6];
		matrix._13 = array[7];
		matrix._20 = array[8];
		matrix._21 = array[9];
		matrix._22 = array[10];
		matrix._23 = array[11];
		matrix._30 = array[12];
		matrix._31 = array[13];
		matrix._32 = array[14];
		matrix._33 = array[15];
		return matrix;
	}
	,createVectorFromArray: function(array) {
		var vector = new kha_math_Vector3(0,0,0);
		if(array != null) {
			vector.x = array[0];
			vector.y = array[1];
			vector.z = array[2];
		}
		return vector;
	}
	,createQuaternion: function(array) {
		var quaternion = new kha_math_Quaternion(0,0,0,0);
		if(array != null) {
			quaternion.set_x(array[0]);
			quaternion.set_y(array[1]);
			quaternion.set_z(array[2]);
			quaternion.set_w(array[3]);
		}
		return quaternion;
	}
	,__class__: kha_js_vr_VrInterface
});
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = true;
kha_math_FastMatrix3.fromMatrix3 = function(m) {
	return new kha_math_FastMatrix3(m._00,m._10,m._20,m._01,m._11,m._21,m._02,m._12,m._22);
};
kha_math_FastMatrix3.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
	,__class__: kha_math_FastMatrix3
};
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = true;
kha_math_FastMatrix4.fromMatrix4 = function(m) {
	return new kha_math_FastMatrix4(m._00,m._10,m._20,m._30,m._01,m._11,m._21,m._31,m._02,m._12,m._22,m._32,m._03,m._13,m._23,m._33);
};
kha_math_FastMatrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	var tx = -(right + left) / (right - left);
	var ty = -(top + bottom) / (top - bottom);
	var tz = -(zf + zn) / (zf - zn);
	return new kha_math_FastMatrix4(2 / (right - left),0,0,tx,0,2.0 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
};
kha_math_FastMatrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new kha_math_FastMatrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
kha_math_FastMatrix4.lookAt = function(eye,at,up) {
	var x = at.x - eye.x;
	var y = at.y - eye.y;
	var z = at.z - eye.z;
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var _this_x = x;
	var _this_y = y;
	var _this_z = z;
	var x1 = _this_x;
	var y1 = _this_y;
	var z1 = _this_z;
	if(z1 == null) {
		z1 = 0;
	}
	if(y1 == null) {
		y1 = 0;
	}
	if(x1 == null) {
		x1 = 0;
	}
	var zaxis_x = x1;
	var zaxis_y = y1;
	var zaxis_z = z1;
	var currentLength = Math.sqrt(zaxis_x * zaxis_x + zaxis_y * zaxis_y + zaxis_z * zaxis_z);
	if(currentLength != 0) {
		var mul = 1 / currentLength;
		zaxis_x *= mul;
		zaxis_y *= mul;
		zaxis_z *= mul;
	}
	var _x = zaxis_y * up.z - zaxis_z * up.y;
	var _y = zaxis_z * up.x - zaxis_x * up.z;
	var _z = zaxis_x * up.y - zaxis_y * up.x;
	var x2 = _x;
	var y2 = _y;
	var z2 = _z;
	if(z2 == null) {
		z2 = 0;
	}
	if(y2 == null) {
		y2 = 0;
	}
	if(x2 == null) {
		x2 = 0;
	}
	var _this_x1 = x2;
	var _this_y1 = y2;
	var _this_z1 = z2;
	var x3 = _this_x1;
	var y3 = _this_y1;
	var z3 = _this_z1;
	if(z3 == null) {
		z3 = 0;
	}
	if(y3 == null) {
		y3 = 0;
	}
	if(x3 == null) {
		x3 = 0;
	}
	var xaxis_x = x3;
	var xaxis_y = y3;
	var xaxis_z = z3;
	var currentLength1 = Math.sqrt(xaxis_x * xaxis_x + xaxis_y * xaxis_y + xaxis_z * xaxis_z);
	if(currentLength1 != 0) {
		var mul1 = 1 / currentLength1;
		xaxis_x *= mul1;
		xaxis_y *= mul1;
		xaxis_z *= mul1;
	}
	var _x1 = xaxis_y * zaxis_z - xaxis_z * zaxis_y;
	var _y1 = xaxis_z * zaxis_x - xaxis_x * zaxis_z;
	var _z1 = xaxis_x * zaxis_y - xaxis_y * zaxis_x;
	var x4 = _x1;
	var y4 = _y1;
	var z4 = _z1;
	if(z4 == null) {
		z4 = 0;
	}
	if(y4 == null) {
		y4 = 0;
	}
	if(x4 == null) {
		x4 = 0;
	}
	var yaxis_x = x4;
	var yaxis_y = y4;
	var yaxis_z = z4;
	return new kha_math_FastMatrix4(xaxis_x,xaxis_y,xaxis_z,-(xaxis_x * eye.x + xaxis_y * eye.y + xaxis_z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis_x,-zaxis_y,-zaxis_z,zaxis_x * eye.x + zaxis_y * eye.y + zaxis_z * eye.z,0,0,0,1);
};
kha_math_FastMatrix4.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
	,__class__: kha_math_FastMatrix4
};
var kha_math_FastVector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.FastVector2"] = kha_math_FastVector2;
kha_math_FastVector2.__name__ = true;
kha_math_FastVector2.fromVector2 = function(v) {
	return new kha_math_FastVector2(v.x,v.y);
};
kha_math_FastVector2.prototype = {
	x: null
	,y: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = Math.sqrt(this.x * this.x + this.y * this.y);
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector2(" + this.x + ", " + this.y + ")";
	}
	,__class__: kha_math_FastVector2
};
var kha_math_FastVector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.FastVector3"] = kha_math_FastVector3;
kha_math_FastVector3.__name__ = true;
kha_math_FastVector3.fromVector3 = function(v) {
	return new kha_math_FastVector3(v.x,v.y,v.z);
};
kha_math_FastVector3.prototype = {
	x: null
	,y: null
	,z: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector3(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	,__class__: kha_math_FastVector3
};
var kha_math_FastVector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.FastVector4"] = kha_math_FastVector4;
kha_math_FastVector4.__name__ = true;
kha_math_FastVector4.fromVector4 = function(v) {
	return new kha_math_FastVector4(v.x,v.y,v.z,v.w);
};
kha_math_FastVector4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector4(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
	,__class__: kha_math_FastVector4
};
var kha_math_Matrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.Matrix3"] = kha_math_Matrix3;
kha_math_Matrix3.__name__ = true;
kha_math_Matrix3.fromFastMatrix3 = function(m) {
	return new kha_math_Matrix3(m._00,m._10,m._20,m._01,m._11,m._21,m._02,m._12,m._22);
};
kha_math_Matrix3.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
	,__class__: kha_math_Matrix3
};
var kha_math_Matrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.Matrix4"] = kha_math_Matrix4;
kha_math_Matrix4.__name__ = true;
kha_math_Matrix4.fromFastMatrix4 = function(m) {
	return new kha_math_Matrix4(m._00,m._10,m._20,m._30,m._01,m._11,m._21,m._31,m._02,m._12,m._22,m._32,m._03,m._13,m._23,m._33);
};
kha_math_Matrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	var tx = -(right + left) / (right - left);
	var ty = -(top + bottom) / (top - bottom);
	var tz = -(zf + zn) / (zf - zn);
	return new kha_math_Matrix4(2 / (right - left),0,0,tx,0,2 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
};
kha_math_Matrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new kha_math_Matrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
kha_math_Matrix4.lookAt = function(eye,at,up) {
	var x = at.x - eye.x;
	var y = at.y - eye.y;
	var z = at.z - eye.z;
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var _this_x = x;
	var _this_y = y;
	var _this_z = z;
	var x1 = _this_x;
	var y1 = _this_y;
	var z1 = _this_z;
	if(z1 == null) {
		z1 = 0;
	}
	if(y1 == null) {
		y1 = 0;
	}
	if(x1 == null) {
		x1 = 0;
	}
	var zaxis_x = x1;
	var zaxis_y = y1;
	var zaxis_z = z1;
	var currentLength = Math.sqrt(zaxis_x * zaxis_x + zaxis_y * zaxis_y + zaxis_z * zaxis_z);
	if(currentLength != 0) {
		var mul = 1 / currentLength;
		zaxis_x *= mul;
		zaxis_y *= mul;
		zaxis_z *= mul;
	}
	var _x = zaxis_y * up.z - zaxis_z * up.y;
	var _y = zaxis_z * up.x - zaxis_x * up.z;
	var _z = zaxis_x * up.y - zaxis_y * up.x;
	var x2 = _x;
	var y2 = _y;
	var z2 = _z;
	if(z2 == null) {
		z2 = 0;
	}
	if(y2 == null) {
		y2 = 0;
	}
	if(x2 == null) {
		x2 = 0;
	}
	var _this_x1 = x2;
	var _this_y1 = y2;
	var _this_z1 = z2;
	var x3 = _this_x1;
	var y3 = _this_y1;
	var z3 = _this_z1;
	if(z3 == null) {
		z3 = 0;
	}
	if(y3 == null) {
		y3 = 0;
	}
	if(x3 == null) {
		x3 = 0;
	}
	var xaxis_x = x3;
	var xaxis_y = y3;
	var xaxis_z = z3;
	var currentLength1 = Math.sqrt(xaxis_x * xaxis_x + xaxis_y * xaxis_y + xaxis_z * xaxis_z);
	if(currentLength1 != 0) {
		var mul1 = 1 / currentLength1;
		xaxis_x *= mul1;
		xaxis_y *= mul1;
		xaxis_z *= mul1;
	}
	var _x1 = xaxis_y * zaxis_z - xaxis_z * zaxis_y;
	var _y1 = xaxis_z * zaxis_x - xaxis_x * zaxis_z;
	var _z1 = xaxis_x * zaxis_y - xaxis_y * zaxis_x;
	var x4 = _x1;
	var y4 = _y1;
	var z4 = _z1;
	if(z4 == null) {
		z4 = 0;
	}
	if(y4 == null) {
		y4 = 0;
	}
	if(x4 == null) {
		x4 = 0;
	}
	var yaxis_x = x4;
	var yaxis_y = y4;
	var yaxis_z = z4;
	return new kha_math_Matrix4(xaxis_x,xaxis_y,xaxis_z,-(xaxis_x * eye.x + xaxis_y * eye.y + xaxis_z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis_x,-zaxis_y,-zaxis_z,zaxis_x * eye.x + zaxis_y * eye.y + zaxis_z * eye.z,0,0,0,1);
};
kha_math_Matrix4.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
	,__class__: kha_math_Matrix4
};
var kha_math_Quaternion = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.values = [];
	this.values.push(x);
	this.values.push(y);
	this.values.push(z);
	this.values.push(w);
};
$hxClasses["kha.math.Quaternion"] = kha_math_Quaternion;
kha_math_Quaternion.__name__ = true;
kha_math_Quaternion.fromAxisAngle = function(axis,radians) {
	var q = new kha_math_Quaternion();
	q.set_w(Math.cos(radians / 2.0));
	q.set_x(q.set_y(q.set_z(Math.sin(radians / 2.0))));
	var _g = q;
	_g.set_x(_g.get_x() * axis.x);
	var _g1 = q;
	_g1.set_y(_g1.get_y() * axis.y);
	var _g2 = q;
	_g2.set_z(_g2.get_z() * axis.z);
	return q;
};
kha_math_Quaternion.prototype = {
	values: null
	,slerp: function(t,q) {
		var epsilon = 0.0005;
		var dot = this.get_x() * q.get_x() + this.get_y() * q.get_y() + this.get_z() * q.get_z() + this.get_w() * q.get_w();
		if(dot > 1 - epsilon) {
			var _this = new kha_math_Quaternion(this.get_x() - q.get_x(),this.get_y() - q.get_y(),this.get_z() - q.get_z(),this.get_w() - q.get_w());
			var q1 = new kha_math_Quaternion(_this.get_x() * t,_this.get_y() * t,_this.get_z() * t,_this.get_w() * t);
			var result = new kha_math_Quaternion(q.get_x() + q1.get_x(),q.get_y() + q1.get_y(),q.get_z() + q1.get_z(),q.get_w() + q1.get_w());
			var scale = 1.0 / result.get_length();
			result.set_x(result.get_x() * scale);
			result.set_y(result.get_y() * scale);
			result.set_z(result.get_z() * scale);
			result.set_w(result.get_w() * scale);
			return result;
		}
		if(dot < 0) {
			dot = 0;
		}
		if(dot > 1) {
			dot = 1;
		}
		var theta0 = Math.acos(dot);
		var theta = theta0 * t;
		var q2 = new kha_math_Quaternion(this.get_x() * dot,this.get_y() * dot,this.get_z() * dot,this.get_w() * dot);
		var q21 = new kha_math_Quaternion(q.get_x() - q2.get_x(),q.get_y() - q2.get_y(),q.get_z() - q2.get_z(),q.get_w() - q2.get_w());
		var scale1 = 1.0 / q21.get_length();
		q21.set_x(q21.get_x() * scale1);
		q21.set_y(q21.get_y() * scale1);
		q21.set_z(q21.get_z() * scale1);
		q21.set_w(q21.get_w() * scale1);
		var scale2 = Math.cos(theta);
		var _this1 = new kha_math_Quaternion(this.get_x() * scale2,this.get_y() * scale2,this.get_z() * scale2,this.get_w() * scale2);
		var scale3 = Math.sin(theta);
		var q3 = new kha_math_Quaternion(q21.get_x() * scale3,q21.get_y() * scale3,q21.get_z() * scale3,q21.get_w() * scale3);
		var result1 = new kha_math_Quaternion(_this1.get_x() + q3.get_x(),_this1.get_y() + q3.get_y(),_this1.get_z() + q3.get_z(),_this1.get_w() + q3.get_w());
		var scale4 = 1.0 / result1.get_length();
		result1.set_x(result1.get_x() * scale4);
		result1.set_y(result1.get_y() * scale4);
		result1.set_z(result1.get_z() * scale4);
		result1.set_w(result1.get_w() * scale4);
		return result1;
	}
	,rotated: function(b) {
		var q = new kha_math_Quaternion();
		q.set_w(this.get_w() * b.get_w() - this.get_x() * b.get_x() - this.get_y() * b.get_y() - this.get_z() * b.get_z());
		q.set_x(this.get_w() * b.get_x() + this.get_x() * b.get_w() + this.get_y() * b.get_z() - this.get_z() * b.get_y());
		q.set_y(this.get_w() * b.get_y() + this.get_y() * b.get_w() + this.get_z() * b.get_x() - this.get_x() * b.get_z());
		q.set_z(this.get_w() * b.get_z() + this.get_z() * b.get_w() + this.get_x() * b.get_y() - this.get_y() * b.get_x());
		var scale = 1.0 / q.get_length();
		q.set_x(q.get_x() * scale);
		q.set_y(q.get_y() * scale);
		q.set_z(q.get_z() * scale);
		q.set_w(q.get_w() * scale);
		return q;
	}
	,scaled: function(scale) {
		return new kha_math_Quaternion(this.get_x() * scale,this.get_y() * scale,this.get_z() * scale,this.get_w() * scale);
	}
	,scale: function(scale) {
		this.set_x(this.get_x() * scale);
		this.set_y(this.get_y() * scale);
		this.set_z(this.get_z() * scale);
		this.set_w(this.get_w() * scale);
	}
	,matrix: function() {
		var s = 2.0;
		var xs = this.get_x() * s;
		var ys = this.get_y() * s;
		var zs = this.get_z() * s;
		var wx = this.get_w() * xs;
		var wy = this.get_w() * ys;
		var wz = this.get_w() * zs;
		var xx = this.get_x() * xs;
		var xy = this.get_x() * ys;
		var xz = this.get_x() * zs;
		var yy = this.get_y() * ys;
		var yz = this.get_y() * zs;
		var zz = this.get_z() * zs;
		return new kha_math_Matrix4(1 - (yy + zz),xy - wz,xz + wy,0,xy + wz,1 - (xx + zz),yz - wx,0,xz - wy,yz + wx,1 - (xx + yy),0,0,0,0,1);
	}
	,get: function(index) {
		return this.values[index];
	}
	,set: function(index,value) {
		this.values[index] = value;
	}
	,get_x: function() {
		return this.values[0];
	}
	,set_x: function(value) {
		return this.values[0] = value;
	}
	,get_y: function() {
		return this.values[1];
	}
	,set_y: function(value) {
		return this.values[1] = value;
	}
	,get_z: function() {
		return this.values[2];
	}
	,set_z: function(value) {
		return this.values[2] = value;
	}
	,get_w: function() {
		return this.values[3];
	}
	,set_w: function(value) {
		return this.values[3] = value;
	}
	,get_length: function() {
		return Math.sqrt(this.get_x() * this.get_x() + this.get_y() * this.get_y() + this.get_z() * this.get_z() + this.get_w() * this.get_w());
	}
	,set_length: function(length) {
		if(this.get_length() == 0) {
			return 0;
		}
		var mul = length / this.get_length();
		var _g = this;
		_g.set_x(_g.get_x() * mul);
		var _g1 = this;
		_g1.set_y(_g1.get_y() * mul);
		var _g2 = this;
		_g2.set_z(_g2.get_z() * mul);
		return length;
	}
	,addVector: function(vec) {
		var result = new kha_math_Quaternion(this.get_x(),this.get_y(),this.get_z(),this.get_w());
		var q1 = new kha_math_Quaternion(0,vec.x,vec.y,vec.z);
		var q = new kha_math_Quaternion();
		q.set_x(q1.get_w() * result.get_x() + q1.get_x() * result.get_w() + q1.get_y() * result.get_z() - q1.get_z() * result.get_y());
		q.set_y(q1.get_w() * result.get_y() - q1.get_x() * result.get_z() + q1.get_y() * result.get_w() + q1.get_z() * result.get_x());
		q.set_z(q1.get_w() * result.get_z() + q1.get_x() * result.get_y() - q1.get_y() * result.get_x() + q1.get_z() * result.get_w());
		q.set_w(q1.get_w() * result.get_w() - q1.get_x() * result.get_x() - q1.get_y() * result.get_y() - q1.get_z() * result.get_z());
		q1 = q;
		var _g = result;
		_g.set_x(_g.get_x() + q1.get_x() * 0.5);
		var _g1 = result;
		_g1.set_y(_g1.get_y() + q1.get_y() * 0.5);
		var _g2 = result;
		_g2.set_z(_g2.get_z() + q1.get_z() * 0.5);
		var _g3 = result;
		_g3.set_w(_g3.get_w() + q1.get_w() * 0.5);
		return result;
	}
	,add: function(q) {
		return new kha_math_Quaternion(this.get_x() + q.get_x(),this.get_y() + q.get_y(),this.get_z() + q.get_z(),this.get_w() + q.get_w());
	}
	,sub: function(q) {
		return new kha_math_Quaternion(this.get_x() - q.get_x(),this.get_y() - q.get_y(),this.get_z() - q.get_z(),this.get_w() - q.get_w());
	}
	,mult: function(r) {
		var q = new kha_math_Quaternion();
		q.set_x(this.get_w() * r.get_x() + this.get_x() * r.get_w() + this.get_y() * r.get_z() - this.get_z() * r.get_y());
		q.set_y(this.get_w() * r.get_y() - this.get_x() * r.get_z() + this.get_y() * r.get_w() + this.get_z() * r.get_x());
		q.set_z(this.get_w() * r.get_z() + this.get_x() * r.get_y() - this.get_y() * r.get_x() + this.get_z() * r.get_w());
		q.set_w(this.get_w() * r.get_w() - this.get_x() * r.get_x() - this.get_y() * r.get_y() - this.get_z() * r.get_z());
		return q;
	}
	,normalize: function() {
		var scale = 1.0 / this.get_length();
		this.set_x(this.get_x() * scale);
		this.set_y(this.get_y() * scale);
		this.set_z(this.get_z() * scale);
		this.set_w(this.get_w() * scale);
	}
	,dot: function(q) {
		return this.get_x() * q.get_x() + this.get_y() * q.get_y() + this.get_z() * q.get_z() + this.get_w() * q.get_w();
	}
	,getEulerAngles: function(A1,A2,A3,S,D) {
		if(D == null) {
			D = 1;
		}
		if(S == null) {
			S = 1;
		}
		var result = new kha_math_Vector3();
		var Q = [];
		Q[0] = this.get_x();
		Q[1] = this.get_y();
		Q[2] = this.get_z();
		var ww = this.get_w() * this.get_w();
		var Q11 = Q[A1] * Q[A1];
		var Q22 = Q[A2] * Q[A2];
		var Q33 = Q[A3] * Q[A3];
		var psign = -1;
		var SingularityRadius = 0.0000001;
		var PiOver2 = Math.PI / 2.0;
		if((A1 + 1) % 3 == A2 && (A2 + 1) % 3 == A3) {
			psign = 1;
		}
		var s2 = psign * 2.0 * (psign * this.get_w() * Q[A2] + Q[A1] * Q[A3]);
		if(s2 < -1 + SingularityRadius) {
			result.x = 0;
			result.y = -S * D * PiOver2;
			result.z = S * D * Math.atan2(2 * (psign * Q[A1] * Q[A2] + this.get_w() * Q[A3]),ww + Q22 - Q11 - Q33);
		} else if(s2 > 1 - SingularityRadius) {
			result.x = 0;
			result.y = S * D * PiOver2;
			result.z = S * D * Math.atan2(2 * (psign * Q[A1] * Q[A2] + this.get_w() * Q[A3]),ww + Q22 - Q11 - Q33);
		} else {
			result.x = -S * D * Math.atan2(-2 * (this.get_w() * Q[A1] - psign * Q[A2] * Q[A3]),ww + Q33 - Q11 - Q22);
			result.y = S * D * Math.asin(s2);
			result.z = S * D * Math.atan2(2 * (this.get_w() * Q[A3] - psign * Q[A1] * Q[A2]),ww + Q11 - Q22 - Q33);
		}
		return result;
	}
	,__class__: kha_math_Quaternion
};
var kha_math_Random = function(seed) {
	this.index = 0;
	this.MT = [];
	this.MT[623] = 0;
	this.MT[0] = seed;
	var _g = 1;
	while(_g < 624) {
		var i = _g++;
		this.MT[i] = 1812433253 * (this.MT[i - 1] ^ this.MT[i - 1] >> 30) + i;
	}
};
$hxClasses["kha.math.Random"] = kha_math_Random;
kha_math_Random.__name__ = true;
kha_math_Random.init = function(seed) {
	kha_math_Random.Default = new kha_math_Random(seed);
};
kha_math_Random.get = function() {
	return kha_math_Random.Default.Get();
};
kha_math_Random.getFloat = function() {
	return kha_math_Random.Default.GetFloat();
};
kha_math_Random.getUpTo = function(max) {
	return kha_math_Random.Default.GetUpTo(max);
};
kha_math_Random.getIn = function(min,max) {
	return kha_math_Random.Default.GetIn(min,max);
};
kha_math_Random.getFloatIn = function(min,max) {
	return min + kha_math_Random.Default.GetFloat() * (max - min);
};
kha_math_Random.prototype = {
	Get: function() {
		if(this.index == 0) {
			this.GenerateNumbers();
		}
		var y = this.MT[this.index];
		y ^= y >> 11;
		y ^= y << 7 & -1658038656;
		y ^= y << 15 & -272236544;
		y ^= y >> 18;
		this.index = (this.index + 1) % 624;
		return y;
	}
	,GetFloat: function() {
		return this.Get() / 2147483646;
	}
	,GetUpTo: function(max) {
		return this.Get() % (max + 1);
	}
	,GetIn: function(min,max) {
		return this.Get() % (max + 1 - min) + min;
	}
	,GetFloatIn: function(min,max) {
		return min + this.GetFloat() * (max - min);
	}
	,MT: null
	,index: null
	,GenerateNumbers: function() {
		var _g = 0;
		while(_g < 624) {
			var i = _g++;
			var y = (this.MT[i] & 1) + this.MT[(i + 1) % 624] & 2147483647;
			this.MT[i] = this.MT[(i + 397) % 624] ^ y >> 1;
			if(y % 2 != 0) {
				this.MT[i] ^= -1727483681;
			}
		}
	}
	,__class__: kha_math_Random
};
var kha_math_Vector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.Vector2"] = kha_math_Vector2;
kha_math_Vector2.__name__ = true;
kha_math_Vector2.prototype = {
	x: null
	,y: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = Math.sqrt(this.x * this.x + this.y * this.y);
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,__class__: kha_math_Vector2
};
var kha_math_Vector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.Vector3"] = kha_math_Vector3;
kha_math_Vector3.__name__ = true;
kha_math_Vector3.prototype = {
	x: null
	,y: null
	,z: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,__class__: kha_math_Vector3
};
var kha_math_Vector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.Vector4"] = kha_math_Vector4;
kha_math_Vector4.__name__ = true;
kha_math_Vector4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,__class__: kha_math_Vector4
};
var kha_netsync_Client = function() { };
$hxClasses["kha.netsync.Client"] = kha_netsync_Client;
kha_netsync_Client.__name__ = true;
kha_netsync_Client.__isInterface__ = true;
kha_netsync_Client.prototype = {
	get_id: null
	,id: null
	,send: null
	,receive: null
	,onClose: null
	,__class__: kha_netsync_Client
};
var kha_netsync_ControllerBuilder = function() { };
$hxClasses["kha.netsync.ControllerBuilder"] = kha_netsync_ControllerBuilder;
kha_netsync_ControllerBuilder.__name__ = true;
var kha_netsync_Entity = function() { };
$hxClasses["kha.netsync.Entity"] = kha_netsync_Entity;
kha_netsync_Entity.__name__ = true;
kha_netsync_Entity.__isInterface__ = true;
kha_netsync_Entity.prototype = {
	_id: null
	,_size: null
	,_send: null
	,_receive: null
	,__class__: kha_netsync_Entity
};
var kha_netsync_LocalClient = function(id) {
	this.myId = id;
};
$hxClasses["kha.netsync.LocalClient"] = kha_netsync_LocalClient;
kha_netsync_LocalClient.__name__ = true;
kha_netsync_LocalClient.__interfaces__ = [kha_netsync_Client];
kha_netsync_LocalClient.prototype = {
	myId: null
	,send: function(bytes,mandatory) {
	}
	,receive: function(receiver) {
	}
	,onClose: function(close) {
	}
	,controllers: null
	,get_controllers: function() {
		return null;
	}
	,id: null
	,get_id: function() {
		return this.myId;
	}
	,__class__: kha_netsync_LocalClient
};
var kha_netsync_Network = function(url,port,errorCallback,closeCallback) {
	this.open = false;
	var _gthis = this;
	this.socket = new WebSocket("ws://" + url + ":" + port);
	this.socket.onerror = function(error) {
		haxe_Log.trace("Network error.",{ fileName : "kha/netsync/Network.hx", lineNumber : 14, className : "kha.netsync.Network", methodName : "new"});
		errorCallback();
	};
	this.socket.binaryType = "arraybuffer";
	this.socket.onopen = function() {
		_gthis.open = true;
	};
	this.socket.onclose = function(event) {
		haxe_Log.trace("Network connection closed. " + kha_netsync_Network.webSocketCloseReason(event.code) + " (" + event.reason + ").",{ fileName : "kha/netsync/Network.hx", lineNumber : 22, className : "kha.netsync.Network", methodName : "new"});
		closeCallback();
	};
};
$hxClasses["kha.netsync.Network"] = kha_netsync_Network;
kha_netsync_Network.__name__ = true;
kha_netsync_Network.webSocketCloseReason = function(code) {
	switch(code) {
	case 1000:
		return "Normal Closure";
	case 1001:
		return "Going Away";
	case 1002:
		return "Protocol error";
	case 1003:
		return "Unsupported Data";
	case 1005:
		return "No Status Rcvd";
	case 1006:
		return "Abnormal Closure";
	case 1007:
		return "Invalid frame";
	case 1008:
		return "Policy Violation";
	case 1009:
		return "Message Too Big";
	case 1010:
		return "Mandatory Ext.";
	case 1011:
		return "Internal Server Error";
	case 1015:
		return "TLS handshake";
	default:
		return "";
	}
};
kha_netsync_Network.prototype = {
	socket: null
	,open: null
	,send: function(bytes,mandatory) {
		if(this.open) {
			this.socket.send(bytes.b.bufferValue);
		}
	}
	,listen: function(listener) {
		this.socket.onmessage = function(message) {
			var tmp = haxe_io_Bytes.ofData(message.data);
			listener(tmp);
		};
	}
	,__class__: kha_netsync_Network
};
var kha_netsync_State = function(time,data) {
	this.time = time;
	this.data = data;
};
$hxClasses["kha.netsync.State"] = kha_netsync_State;
kha_netsync_State.__name__ = true;
kha_netsync_State.prototype = {
	time: null
	,data: null
	,__class__: kha_netsync_State
};
var kha_netsync_Session = function(maxPlayers,address,port) {
	this.ping = 1;
	this.currentPlayers = 0;
	this.controllers = new haxe_ds_IntMap();
	this.entities = new haxe_ds_IntMap();
	kha_netsync_Session.instance = this;
	this.maxPlayers = maxPlayers;
	this.address = address;
	this.port = port;
};
$hxClasses["kha.netsync.Session"] = kha_netsync_Session;
kha_netsync_Session.__name__ = true;
kha_netsync_Session.the = function() {
	return kha_netsync_Session.instance;
};
kha_netsync_Session.prototype = {
	entities: null
	,controllers: null
	,maxPlayers: null
	,currentPlayers: null
	,ping: null
	,address: null
	,port: null
	,startCallback: null
	,refusedCallback: null
	,resetCallback: null
	,localClient: null
	,network: null
	,updateTaskId: null
	,pingTaskId: null
	,me: null
	,get_me: function() {
		return this.localClient;
	}
	,addEntity: function(entity) {
		var this1 = this.entities;
		var key = entity._id();
		this1.h[key] = entity;
	}
	,addController: function(controller) {
		haxe_Log.trace("Adding controller id " + controller._id(),{ fileName : "kha/netsync/Session.hx", lineNumber : 88, className : "kha.netsync.Session", methodName : "addController"});
		controller._inputBufferIndex = 0;
		var this1 = this.controllers;
		var key = controller._id();
		this1.h[key] = controller;
	}
	,sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,sendPing: function() {
		var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
		bytes.b[0] = 4;
		bytes.setFloat(1,kha_Scheduler.realTime());
		this.sendToServer(bytes);
	}
	,sendPlayerUpdate: function() {
	}
	,receive: function(bytes,client) {
		switch(bytes.b[0]) {
		case 0:
			var index = bytes.b[1];
			this.localClient = new kha_netsync_LocalClient(index);
			kha_Scheduler.resetTime();
			this.startCallback();
			break;
		case 1:
			var time = bytes.getDouble(1);
			var offset = 9;
			var entity = this.entities.iterator();
			while(entity.hasNext()) {
				var entity1 = entity.next();
				entity1._receive(offset,bytes);
				offset += entity1._size();
			}
			kha_Scheduler.warp(time);
			break;
		case 3:
			switch(bytes.b[1]) {
			case 0:
				break;
			case 1:
				this.executeRPC(bytes);
				break;
			}
			break;
		case 4:
			var sendTime = bytes.getFloat(1);
			this.ping = kha_Scheduler.realTime() - sendTime;
			break;
		case 5:
			this.refusedCallback();
			break;
		case 6:
			this.currentPlayers = bytes.getInt32(1);
			break;
		}
	}
	,executeRPC: function(bytes) {
		var args = [];
		var syncId = bytes.getInt32(2);
		var index = 6;
		var classnamelength = bytes.getUInt16(index);
		index += 2;
		var classname = "";
		var _g = 0;
		var _g1 = classnamelength;
		while(_g < _g1) {
			var i = _g++;
			var code = bytes.b[index];
			classname += String.fromCodePoint(code);
			++index;
		}
		var methodnamelength = bytes.getUInt16(index);
		index += 2;
		var methodname = "";
		var _g2 = 0;
		var _g3 = methodnamelength;
		while(_g2 < _g3) {
			var i1 = _g2++;
			var code1 = bytes.b[index];
			methodname += String.fromCodePoint(code1);
			++index;
		}
		while(index < bytes.length) {
			var type = bytes.b[index];
			++index;
			switch(type) {
			case 66:
				var value = bytes.b[index] == 1;
				++index;
				haxe_Log.trace("Bool: " + (value == null ? "null" : "" + value),{ fileName : "kha/netsync/Session.hx", lineNumber : 295, className : "kha.netsync.Session", methodName : "executeRPC"});
				args.push(value);
				break;
			case 70:
				var value1 = bytes.getDouble(index);
				index += 8;
				haxe_Log.trace("Float: " + value1,{ fileName : "kha/netsync/Session.hx", lineNumber : 300, className : "kha.netsync.Session", methodName : "executeRPC"});
				args.push(value1);
				break;
			case 73:
				var value2 = bytes.getInt32(index);
				index += 4;
				haxe_Log.trace("Int: " + value2,{ fileName : "kha/netsync/Session.hx", lineNumber : 305, className : "kha.netsync.Session", methodName : "executeRPC"});
				args.push(value2);
				break;
			case 83:
				var length = bytes.getUInt16(index);
				index += 2;
				var str = "";
				var _g4 = 0;
				var _g5 = length;
				while(_g4 < _g5) {
					var i2 = _g4++;
					var code2 = bytes.b[index];
					str += String.fromCodePoint(code2);
					++index;
				}
				haxe_Log.trace("String: " + str,{ fileName : "kha/netsync/Session.hx", lineNumber : 315, className : "kha.netsync.Session", methodName : "executeRPC"});
				args.push(str);
				break;
			default:
				haxe_Log.trace("Unknown argument type.",{ fileName : "kha/netsync/Session.hx", lineNumber : 318, className : "kha.netsync.Session", methodName : "executeRPC"});
			}
		}
		if(syncId == -1) {
			Reflect.field($hxClasses[classname],methodname + "_remotely").apply(null,args);
		} else {
			Reflect.field(kha_netsync_SyncBuilder.objects[syncId],methodname + "_remotely").apply(kha_netsync_SyncBuilder.objects[syncId],args);
		}
	}
	,waitForStart: function(callback,refuseCallback,errorCallback,closeCallback,resCallback) {
		var _gthis = this;
		this.startCallback = callback;
		this.refusedCallback = refuseCallback;
		this.resetCallback = resCallback;
		this.network = new kha_netsync_Network(this.address,this.port,errorCallback,function() {
			closeCallback();
			_gthis.reset();
		});
		this.network.listen(function(bytes) {
			_gthis.receive(bytes);
		});
		this.updateTaskId = kha_Scheduler.addFrameTask($bind(this,this.update),0);
		this.ping = 1;
		this.pingTaskId = kha_Scheduler.addTimeTask($bind(this,this.sendPing),0,1);
	}
	,reset: function() {
		kha_Scheduler.removeFrameTask(this.updateTaskId);
		kha_Scheduler.removeTimeTask(this.pingTaskId);
		this.currentPlayers = 0;
		this.ping = 1;
		this.controllers = new haxe_ds_IntMap();
		this.entities = new haxe_ds_IntMap();
		this.resetCallback();
	}
	,update: function() {
		var controller = this.controllers.iterator();
		while(controller.hasNext()) {
			var controller1 = controller.next();
			if(controller1._inputBufferIndex > 0) {
				var bytes = new haxe_io_Bytes(new ArrayBuffer(22 + controller1._inputBufferIndex));
				bytes.b[0] = 2;
				bytes.setInt32(1,controller1._id());
				bytes.setDouble(5,kha_Scheduler.time());
				bytes.setInt32(13,kha_System.windowWidth(0));
				bytes.setInt32(17,kha_System.windowHeight(0));
				bytes.b[21] = 0;
				bytes.blit(22,controller1._inputBuffer,0,controller1._inputBufferIndex);
				this.sendToServer(bytes);
				controller1._inputBufferIndex = 0;
			}
		}
	}
	,sendToServer: function(bytes) {
		this.network.send(bytes,false);
	}
	,__class__: kha_netsync_Session
};
var kha_netsync_SyncBuilder = function() { };
$hxClasses["kha.netsync.SyncBuilder"] = kha_netsync_SyncBuilder;
kha_netsync_SyncBuilder.__name__ = true;
var kha_simd_Float32x4 = function(_0,_1,_2,_3) {
	this._0 = _0;
	this._1 = _1;
	this._2 = _2;
	this._3 = _3;
};
$hxClasses["kha.simd.Float32x4"] = kha_simd_Float32x4;
kha_simd_Float32x4.__name__ = true;
kha_simd_Float32x4.create = function() {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.loadAllFast = function(t) {
	return new kha_simd_Float32x4(t,t,t,t);
};
kha_simd_Float32x4.load = function(a,b,c,d) {
	return new kha_simd_Float32x4(a,b,c,d);
};
kha_simd_Float32x4.loadFast = function(a,b,c,d) {
	return new kha_simd_Float32x4(a,b,c,d);
};
kha_simd_Float32x4.get = function(t,index) {
	var value = 0;
	switch(index) {
	case 0:
		value = t._0;
		break;
	case 1:
		value = t._1;
		break;
	case 2:
		value = t._2;
		break;
	case 3:
		value = t._3;
		break;
	}
	return value;
};
kha_simd_Float32x4.getFast = function(t,index) {
	switch(index) {
	case 0:
		return t._0;
	case 1:
		return t._1;
	case 2:
		return t._2;
	case 3:
		return t._3;
	}
	return 0;
};
kha_simd_Float32x4.abs = function(t) {
	return new kha_simd_Float32x4(Math.abs(t._0),Math.abs(t._1),Math.abs(t._2),Math.abs(t._3));
};
kha_simd_Float32x4.add = function(a,b) {
	return new kha_simd_Float32x4(a._0 + b._0,a._1 + b._1,a._2 + b._2,a._3 + b._3);
};
kha_simd_Float32x4.div = function(a,b) {
	return new kha_simd_Float32x4(a._0 / b._0,a._1 / b._1,a._2 / b._2,a._3 / b._3);
};
kha_simd_Float32x4.mul = function(a,b) {
	return new kha_simd_Float32x4(a._0 * b._0,a._1 * b._1,a._2 * b._2,a._3 * b._3);
};
kha_simd_Float32x4.neg = function(t) {
	return new kha_simd_Float32x4(-t._0,-t._1,-t._2,-t._3);
};
kha_simd_Float32x4.reciprocalApproximation = function(t) {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.reciprocalSqrtApproximation = function(t) {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.sub = function(a,b) {
	return new kha_simd_Float32x4(a._0 - b._0,a._1 - b._1,a._2 - b._2,a._3 - b._3);
};
kha_simd_Float32x4.sqrt = function(t) {
	return new kha_simd_Float32x4(Math.sqrt(t._0),Math.sqrt(t._1),Math.sqrt(t._2),Math.sqrt(t._3));
};
kha_simd_Float32x4.prototype = {
	_0: null
	,_1: null
	,_2: null
	,_3: null
	,__class__: kha_simd_Float32x4
};
var kha_vr_Pose = function() {
	this.Orientation = new kha_math_Quaternion();
	this.Position = new kha_math_Vector3();
};
$hxClasses["kha.vr.Pose"] = kha_vr_Pose;
kha_vr_Pose.__name__ = true;
kha_vr_Pose.prototype = {
	Orientation: null
	,Position: null
	,__class__: kha_vr_Pose
};
var kha_vr_PoseState = function() {
};
$hxClasses["kha.vr.PoseState"] = kha_vr_PoseState;
kha_vr_PoseState.__name__ = true;
kha_vr_PoseState.prototype = {
	Pose: null
	,AngularVelocity: null
	,LinearVelocity: null
	,AngularAcceleration: null
	,LinearAcceleration: null
	,TimeInSeconds: null
	,__class__: kha_vr_PoseState
};
var kha_vr_SensorState = function() {
};
$hxClasses["kha.vr.SensorState"] = kha_vr_SensorState;
kha_vr_SensorState.__name__ = true;
kha_vr_SensorState.prototype = {
	Predicted: null
	,Recorded: null
	,Temperature: null
	,Status: null
	,__class__: kha_vr_SensorState
};
var kha_vr_TimeWarpImage = function() {
};
$hxClasses["kha.vr.TimeWarpImage"] = kha_vr_TimeWarpImage;
kha_vr_TimeWarpImage.__name__ = true;
kha_vr_TimeWarpImage.prototype = {
	Image: null
	,TexCoordsFromTanAngles: null
	,Pose: null
	,__class__: kha_vr_TimeWarpImage
};
var kha_vr_TimeWarpParms = function() {
};
$hxClasses["kha.vr.TimeWarpParms"] = kha_vr_TimeWarpParms;
kha_vr_TimeWarpParms.__name__ = true;
kha_vr_TimeWarpParms.prototype = {
	LeftImage: null
	,RightImage: null
	,LeftOverlay: null
	,RightOverlay: null
	,__class__: kha_vr_TimeWarpParms
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = true;
$hxClasses["Array"] = Array;
Array.__name__ = true;
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
Main.baseTitle = " ";
Main.pixelScale = 4;
Main.baseWidth = 256;
Main.baseHeight = 240;
Teapot.data = "v -3.000000 1.800000 0.000000\r\nv -2.991600 1.800000 -0.081000\r\nv -2.991600 1.800000 0.081000\r\nv -2.989450 1.666162 0.000000\r\nv -2.985000 1.921950 0.000000\r\nv -2.985000 1.921950 0.000000\r\nv -2.981175 1.667844 -0.081000\r\nv -2.981175 1.667844 0.081000\r\nv -2.976687 1.920243 -0.081000\r\nv -2.976687 1.920243 0.081000\r\nv -2.968800 1.800000 -0.144000\r\nv -2.968800 1.800000 0.144000\r\nv -2.958713 1.672406 -0.144000\r\nv -2.958713 1.672406 0.144000\r\nv -2.957600 1.534800 0.000000\r\nv -2.957600 1.534800 0.000000\r\nv -2.954122 1.915609 -0.144000\r\nv -2.954122 1.915609 0.144000\r\nv -2.949693 1.537790 -0.081000\r\nv -2.949693 1.537790 0.081000\r\nv -2.940000 2.019600 0.000000\r\nv -2.935200 1.800000 -0.189000\r\nv -2.935200 1.800000 0.189000\r\nv -2.931958 2.016526 0.081000\r\nv -2.931958 2.016526 -0.081000\r\nv -2.928230 1.545907 -0.144000\r\nv -2.928230 1.545907 0.144000\r\nv -2.925611 1.679131 -0.189000\r\nv -2.925611 1.679131 0.189000\r\nv -2.920870 1.908779 -0.189000\r\nv -2.920870 1.908779 0.189000\r\nv -2.910131 2.008181 -0.144000\r\nv -2.910131 2.008181 0.144000\r\nv -2.904150 1.406137 0.000000\r\nv -2.904150 1.406137 0.000000\r\nv -2.896846 1.410135 0.081000\r\nv -2.896846 1.410135 -0.081000\r\nv -2.896602 1.557869 -0.189000\r\nv -2.896602 1.557869 0.189000\r\nv -2.894400 1.800000 -0.216000\r\nv -2.894400 1.800000 0.216000\r\nv -2.885416 1.687296 -0.216000\r\nv -2.885416 1.687296 0.216000\r\nv -2.880491 1.900487 -0.216000\r\nv -2.880491 1.900487 0.216000\r\nv -2.877965 1.995883 -0.189000\r\nv -2.877965 1.995883 0.189000\r\nv -2.877022 1.420985 -0.144000\r\nv -2.877022 1.420985 0.144000\r\nv -2.865000 2.095650 0.000000\r\nv -2.858195 1.572394 0.216000\r\nv -2.858195 1.572394 -0.216000\r\nv -2.857432 2.091511 -0.081000\r\nv -2.857432 2.091511 0.081000\r\nv -2.850000 1.800000 -0.225000\r\nv -2.850000 1.800000 0.225000\r\nv -2.847806 1.436974 0.189000\r\nv -2.847806 1.436974 -0.189000\r\nv -2.841675 1.696181 0.225000\r\nv -2.841675 1.696181 -0.225000\r\nv -2.838906 1.980950 -0.216000\r\nv -2.838906 1.980950 0.216000\r\nv -2.836889 2.080276 -0.144000\r\nv -2.836889 2.080276 0.144000\r\nv -2.836550 1.891463 -0.225000\r\nv -2.836550 1.891463 0.225000\r\nv -2.828800 1.280400 0.000000\r\nv -2.822326 1.285171 -0.081000\r\nv -2.822326 1.285171 0.081000\r\nv -2.816400 1.588200 -0.225000\r\nv -2.816400 1.588200 0.225000\r\nv -2.812331 1.456390 0.216000\r\nv -2.812331 1.456390 -0.216000\r\nv -2.806615 2.063720 -0.189000\r\nv -2.806615 2.063720 0.189000\r\nv -2.805600 1.800000 -0.216000\r\nv -2.805600 1.800000 0.216000\r\nv -2.804755 1.298122 -0.144000\r\nv -2.804755 1.298122 0.144000\r\nv -2.797934 1.705067 -0.216000\r\nv -2.797934 1.705067 0.216000\r\nv -2.796400 1.964700 0.225000\r\nv -2.796400 1.964700 -0.225000\r\nv -2.792609 1.882438 -0.216000\r\nv -2.792609 1.882438 0.216000\r\nv -2.778861 1.317206 -0.189000\r\nv -2.778861 1.317206 0.189000\r\nv -2.774605 1.604006 0.216000\r\nv -2.774605 1.604006 -0.216000\r\nv -2.773725 1.477519 0.225000\r\nv -2.773725 1.477519 -0.225000\r\nv -2.769854 2.043616 -0.216000\r\nv -2.769854 2.043616 0.216000\r\nv -2.764800 1.800000 -0.189000\r\nv -2.764800 1.800000 0.189000\r\nv -2.760000 2.152800 0.000000\r\nv -2.760000 2.152800 0.000000\r\nv -2.757739 1.713232 -0.189000\r\nv -2.757739 1.713232 0.189000\r\nv -2.753894 1.948450 -0.216000\r\nv -2.753894 1.948450 0.216000\r\nv -2.753123 2.147861 -0.081000\r\nv -2.753123 2.147861 0.081000\r\nv -2.752230 1.874146 -0.189000\r\nv -2.752230 1.874146 0.189000\r\nv -2.747418 1.340381 -0.216000\r\nv -2.747418 1.340381 0.216000\r\nv -2.736198 1.618531 -0.189000\r\nv -2.736198 1.618531 0.189000\r\nv -2.735119 1.498648 0.216000\r\nv -2.735119 1.498648 -0.216000\r\nv -2.734458 2.134454 -0.144000\r\nv -2.734458 2.134454 0.144000\r\nv -2.731250 1.157813 0.000000\r\nv -2.731250 1.157813 0.000000\r\nv -2.731200 1.800000 -0.144000\r\nv -2.731200 1.800000 0.144000\r\nv -2.729850 2.021737 -0.225000\r\nv -2.729850 2.021737 0.225000\r\nv -2.725825 1.163194 0.081000\r\nv -2.725825 1.163194 -0.081000\r\nv -2.724637 1.719956 -0.144000\r\nv -2.724637 1.719956 0.144000\r\nv -2.718978 1.867316 -0.144000\r\nv -2.718978 1.867316 0.144000\r\nv -2.714835 1.933517 -0.189000\r\nv -2.714835 1.933517 0.189000\r\nv -2.713200 1.365600 -0.225000\r\nv -2.713200 1.365600 0.225000\r\nv -2.711100 1.177800 -0.144000\r\nv -2.711100 1.177800 0.144000\r\nv -2.708400 1.800000 -0.081000\r\nv -2.708400 1.800000 0.081000\r\nv -2.706950 2.114698 -0.189000\r\nv -2.706950 2.114698 0.189000\r\nv -2.704570 1.630493 -0.144000\r\nv -2.704570 1.630493 0.144000\r\nv -2.702175 1.724519 -0.081000\r\nv -2.702175 1.724519 0.081000\r\nv -2.700000 1.800000 0.000000\r\nv -2.699644 1.518063 0.189000\r\nv -2.699644 1.518063 -0.189000\r\nv -2.696413 1.862682 -0.081000\r\nv -2.696413 1.862682 0.081000\r\nv -2.693900 1.726200 0.000000\r\nv -2.689846 1.999859 -0.216000\r\nv -2.689846 1.999859 0.216000\r\nv -2.689400 1.199325 -0.189000\r\nv -2.689400 1.199325 0.189000\r\nv -2.688100 1.860975 0.000000\r\nv -2.688100 1.860975 0.000000\r\nv -2.683107 1.638610 -0.081000\r\nv -2.683107 1.638610 0.081000\r\nv -2.682669 1.921219 -0.144000\r\nv -2.682669 1.921219 0.144000\r\nv -2.678982 1.390819 -0.216000\r\nv -2.678982 1.390819 0.216000\r\nv -2.675200 1.641600 0.000000\r\nv -2.675200 1.641600 0.000000\r\nv -2.673549 2.090707 -0.216000\r\nv -2.673549 2.090707 0.216000\r\nv -2.670428 1.534053 -0.144000\r\nv -2.670428 1.534053 0.144000\r\nv -2.663050 1.225463 -0.216000\r\nv -2.663050 1.225463 0.216000\r\nv -2.660842 1.912874 0.081000\r\nv -2.660842 1.912874 -0.081000\r\nv -2.653085 1.979755 -0.189000\r\nv -2.653085 1.979755 0.189000\r\nv -2.652800 1.909800 0.000000\r\nv -2.652800 1.909800 0.000000\r\nv -2.650604 1.544903 0.081000\r\nv -2.650604 1.544903 -0.081000\r\nv -2.647539 1.413994 -0.189000\r\nv -2.647539 1.413994 0.189000\r\nv -2.643300 1.548900 0.000000\r\nv -2.637200 2.064600 -0.225000\r\nv -2.637200 2.064600 0.225000\r\nv -2.634375 1.253906 0.225000\r\nv -2.634375 1.253906 -0.225000\r\nv -2.625000 2.193750 0.000000\r\nv -2.622811 1.963199 -0.144000\r\nv -2.622811 1.963199 0.144000\r\nv -2.621645 1.433078 -0.144000\r\nv -2.621645 1.433078 0.144000\r\nv -2.619050 2.188238 -0.081000\r\nv -2.619050 2.188238 0.081000\r\nv -2.611200 1.038600 0.000000\r\nv -2.611200 1.038600 0.000000\r\nv -2.607034 1.044497 0.081000\r\nv -2.607034 1.044497 -0.081000\r\nv -2.605700 1.282350 -0.216000\r\nv -2.605700 1.282350 0.216000\r\nv -2.604074 1.446029 -0.081000\r\nv -2.604074 1.446029 0.081000\r\nv -2.602900 2.173275 -0.144000\r\nv -2.602900 2.173275 0.144000\r\nv -2.602268 1.951964 -0.081000\r\nv -2.602268 1.951964 0.081000\r\nv -2.600851 2.038493 -0.216000\r\nv -2.600851 2.038493 0.216000\r\nv -2.597600 1.450800 0.000000\r\nv -2.595725 1.060502 -0.144000\r\nv -2.595725 1.060502 0.144000\r\nv -2.594700 1.947825 0.000000\r\nv -2.579350 1.308488 -0.189000\r\nv -2.579350 1.308488 0.189000\r\nv -2.579100 2.151225 -0.189000\r\nv -2.579100 2.151225 0.189000\r\nv -2.579059 1.084090 -0.189000\r\nv -2.579059 1.084090 0.189000\r\nv -2.567450 2.014502 -0.189000\r\nv -2.567450 2.014502 0.189000\r\nv -2.558822 1.112731 0.216000\r\nv -2.558822 1.112731 -0.216000\r\nv -2.557650 1.330013 -0.144000\r\nv -2.557650 1.330013 0.144000\r\nv -2.550200 2.124450 -0.216000\r\nv -2.550200 2.124450 0.216000\r\nv -2.542925 1.344619 0.081000\r\nv -2.542925 1.344619 -0.081000\r\nv -2.539942 1.994746 -0.144000\r\nv -2.539942 1.994746 0.144000\r\nv -2.537500 1.350000 0.000000\r\nv -2.537500 1.350000 0.000000\r\nv -2.536800 1.143900 0.225000\r\nv -2.536800 1.143900 -0.225000\r\nv -2.521277 1.981339 -0.081000\r\nv -2.521277 1.981339 0.081000\r\nv -2.518750 2.095312 -0.225000\r\nv -2.518750 2.095312 0.225000\r\nv -2.514778 1.175069 0.216000\r\nv -2.514778 1.175069 -0.216000\r\nv -2.514400 1.976400 0.000000\r\nv -2.514400 1.976400 0.000000\r\nv -2.494541 1.203710 -0.189000\r\nv -2.494541 1.203710 0.189000\r\nv -2.487300 2.066175 -0.216000\r\nv -2.487300 2.066175 0.216000\r\nv -2.477875 1.227298 -0.144000\r\nv -2.477875 1.227298 0.144000\r\nv -2.468350 0.922987 0.000000\r\nv -2.466566 1.243303 0.081000\r\nv -2.466566 1.243303 -0.081000\r\nv -2.465644 0.929375 -0.081000\r\nv -2.465644 0.929375 0.081000\r\nv -2.462400 1.249200 0.000000\r\nv -2.462400 1.249200 0.000000\r\nv -2.460000 2.221200 0.000000\r\nv -2.460000 2.221200 0.000000\r\nv -2.458400 2.039400 -0.189000\r\nv -2.458400 2.039400 0.189000\r\nv -2.458298 0.946711 -0.144000\r\nv -2.458298 0.946711 0.144000\r\nv -2.455229 2.215303 -0.081000\r\nv -2.455229 2.215303 0.081000\r\nv -2.447474 0.972260 0.189000\r\nv -2.447474 0.972260 -0.189000\r\nv -2.442278 2.199298 -0.144000\r\nv -2.442278 2.199298 0.144000\r\nv -2.434600 2.017350 -0.144000\r\nv -2.434600 2.017350 0.144000\r\nv -2.434329 1.003283 -0.216000\r\nv -2.434329 1.003283 0.216000\r\nv -2.423194 2.175710 -0.189000\r\nv -2.423194 2.175710 0.189000\r\nv -2.420025 1.037044 -0.225000\r\nv -2.420025 1.037044 0.225000\r\nv -2.418450 2.002387 -0.081000\r\nv -2.418450 2.002388 0.081000\r\nv -2.412500 1.996875 0.000000\r\nv -2.412500 1.996875 0.000000\r\nv -2.405721 1.070804 -0.216000\r\nv -2.405721 1.070804 0.216000\r\nv -2.400019 2.147069 -0.216000\r\nv -2.400019 2.147069 0.216000\r\nv -2.392576 1.101828 -0.189000\r\nv -2.392576 1.101828 0.189000\r\nv -2.381752 1.127376 -0.144000\r\nv -2.381752 1.127376 0.144000\r\nv -2.374800 2.115900 -0.225000\r\nv -2.374800 2.115900 0.225000\r\nv -2.374406 1.144713 0.081000\r\nv -2.374406 1.144713 -0.081000\r\nv -2.371700 1.151100 0.000000\r\nv -2.349581 2.084731 -0.216000\r\nv -2.349581 2.084731 0.216000\r\nv -2.326406 2.056090 -0.189000\r\nv -2.326406 2.056090 0.189000\r\nv -2.307322 2.032502 -0.144000\r\nv -2.307322 2.032502 0.144000\r\nv -2.302400 0.811200 0.000000\r\nv -2.302400 0.811200 0.000000\r\nv -2.301347 0.818122 0.081000\r\nv -2.301347 0.818122 -0.081000\r\nv -2.298490 0.836909 0.144000\r\nv -2.298490 0.836909 -0.144000\r\nv -2.294371 2.016497 -0.081000\r\nv -2.294371 2.016497 0.081000\r\nv -2.294278 0.864595 0.189000\r\nv -2.294278 0.864595 -0.189000\r\nv -2.289600 2.010600 0.000000\r\nv -2.289600 2.010600 0.000000\r\nv -2.289165 0.898214 0.216000\r\nv -2.289165 0.898214 -0.216000\r\nv -2.283600 0.934800 0.225000\r\nv -2.283600 0.934800 -0.225000\r\nv -2.278035 0.971386 0.216000\r\nv -2.278035 0.971386 -0.216000\r\nv -2.272922 1.005005 0.189000\r\nv -2.272922 1.005005 -0.189000\r\nv -2.268710 1.032691 -0.144000\r\nv -2.268710 1.032691 0.144000\r\nv -2.265853 1.051478 0.081000\r\nv -2.265853 1.051478 -0.081000\r\nv -2.265000 2.237850 0.000000\r\nv -2.264800 1.058400 0.000000\r\nv -2.264800 1.058400 0.000000\r\nv -2.261676 2.231720 -0.081000\r\nv -2.261676 2.231720 0.081000\r\nv -2.252655 2.215082 -0.144000\r\nv -2.252655 2.215082 0.144000\r\nv -2.239361 2.190562 -0.189000\r\nv -2.239361 2.190562 0.189000\r\nv -2.223218 2.160788 -0.216000\r\nv -2.223218 2.160788 0.216000\r\nv -2.205650 2.128387 0.225000\r\nv -2.205650 2.128388 -0.225000\r\nv -2.188082 2.095987 -0.216000\r\nv -2.188082 2.095987 0.216000\r\nv -2.171939 2.066213 -0.189000\r\nv -2.171939 2.066213 0.189000\r\nv -2.158645 2.041693 -0.144000\r\nv -2.158645 2.041693 0.144000\r\nv -2.149624 2.025055 -0.081000\r\nv -2.149624 2.025055 0.081000\r\nv -2.146300 2.018925 0.000000\r\nv -2.141100 0.973800 0.000000\r\nv -2.141100 0.973800 0.000000\r\nv -2.140315 0.966231 0.081000\r\nv -2.140315 0.966231 -0.081000\r\nv -2.138183 0.945685 0.144000\r\nv -2.138183 0.945685 -0.144000\r\nv -2.135041 0.915407 0.189000\r\nv -2.135041 0.915407 -0.189000\r\nv -2.131226 0.878641 0.216000\r\nv -2.131226 0.878641 -0.216000\r\nv -2.127075 0.838631 0.225000\r\nv -2.127075 0.838631 -0.225000\r\nv -2.122924 0.798621 0.216000\r\nv -2.122924 0.798621 -0.216000\r\nv -2.119109 0.761855 0.189000\r\nv -2.119109 0.761855 -0.189000\r\nv -2.115967 0.731578 0.144000\r\nv -2.115967 0.731578 -0.144000\r\nv -2.113835 0.711032 0.081000\r\nv -2.113835 0.711032 -0.081000\r\nv -2.113050 0.703463 0.000000\r\nv -2.113050 0.703463 0.000000\r\nv -2.040000 2.246400 0.000000\r\nv -2.040000 2.246400 0.000000\r\nv -2.038410 2.240150 -0.081000\r\nv -2.038410 2.240150 0.081000\r\nv -2.034093 2.223187 -0.144000\r\nv -2.034093 2.223187 0.144000\r\nv -2.027731 2.198189 -0.189000\r\nv -2.027731 2.198189 0.189000\r\nv -2.020006 2.167834 0.216000\r\nv -2.020006 2.167834 -0.216000\r\nv -2.011600 2.134800 0.225000\r\nv -2.011600 2.134800 -0.225000\r\nv -2.003194 2.101766 0.216000\r\nv -2.003194 2.101766 -0.216000\r\nv -2.000000 0.900000 0.000000\r\nv -2.000000 0.900000 0.000000\r\nv -2.000000 0.900000 0.000000\r\nv -1.997200 0.891600 0.081000\r\nv -1.997200 0.891600 -0.081000\r\nv -1.995469 2.071411 -0.189000\r\nv -1.995469 2.071411 0.189000\r\nv -1.992750 1.037175 -0.000000\r\nv -1.992750 1.037175 0.000000\r\nv -1.989600 0.868800 0.144000\r\nv -1.989600 0.868800 -0.144000\r\nv -1.989107 2.046413 0.144000\r\nv -1.989107 2.046413 -0.144000\r\nv -1.986000 0.771675 0.000000\r\nv -1.986000 0.771675 0.000000\r\nv -1.984790 2.029450 -0.081000\r\nv -1.984790 2.029450 0.081000\r\nv -1.983200 2.023200 0.000000\r\nv -1.983200 2.023200 0.000000\r\nv -1.978400 0.835200 0.189000\r\nv -1.978400 0.835200 -0.189000\r\nv -1.974240 0.900000 -0.328160\r\nv -1.974240 0.900000 -0.328160\r\nv -1.974240 0.900000 0.328160\r\nv -1.972000 1.178400 -0.000000\r\nv -1.972000 1.178400 0.000000\r\nv -1.967083 1.037175 -0.326970\r\nv -1.967083 1.037175 0.326970\r\nv -1.964800 0.794400 0.216000\r\nv -1.964800 0.794400 -0.216000\r\nv -1.960420 0.771675 -0.325863\r\nv -1.960420 0.771675 0.325863\r\nv -1.950000 0.750000 -0.225000\r\nv -1.950000 0.750000 0.225000\r\nv -1.948000 0.656400 0.000000\r\nv -1.948000 0.656400 0.000000\r\nv -1.946601 1.178400 -0.323566\r\nv -1.946601 1.178400 0.323566\r\nv -1.939250 1.323225 0.000000\r\nv -1.939250 1.323225 0.000000\r\nv -1.935200 0.705600 0.216000\r\nv -1.935200 0.705600 -0.216000\r\nv -1.922910 0.656400 -0.319628\r\nv -1.922910 0.656400 0.319628\r\nv -1.921600 0.664800 0.189000\r\nv -1.921600 0.664800 -0.189000\r\nv -1.914272 1.323225 -0.318192\r\nv -1.914272 1.323225 0.318192\r\nv -1.910400 0.631200 0.144000\r\nv -1.910400 0.631200 -0.144000\r\nv -1.902800 0.608400 0.081000\r\nv -1.902800 0.608400 -0.081000\r\nv -1.900000 0.600000 0.000000\r\nv -1.900000 0.600000 0.000000\r\nv -1.899520 0.900000 -0.638080\r\nv -1.899520 0.900000 -0.638080\r\nv -1.899520 0.900000 0.638080\r\nv -1.899520 0.900000 0.638080\r\nv -1.896000 1.471200 0.000000\r\nv -1.896000 1.471200 0.000000\r\nv -1.892634 1.037175 -0.635767\r\nv -1.892634 1.037175 0.635767\r\nv -1.892000 0.553725 0.000000\r\nv -1.892000 0.553725 0.000000\r\nv -1.886223 0.771675 -0.633613\r\nv -1.886223 0.771675 0.633613\r\nv -1.872927 1.178400 -0.629147\r\nv -1.872927 1.178400 0.629147\r\nv -1.871580 1.471200 -0.311096\r\nv -1.871580 1.471200 0.311096\r\nv -1.867631 0.553725 -0.310439\r\nv -1.867631 0.553725 0.310439\r\nv -1.850132 0.656400 -0.621490\r\nv -1.850132 0.656400 0.621490\r\nv -1.843750 1.621875 0.000000\r\nv -1.843750 1.621875 0.000000\r\nv -1.841822 1.323225 -0.618698\r\nv -1.841822 1.323225 0.618698\r\nv -1.824000 0.463200 -0.000000\r\nv -1.824000 0.463200 0.000000\r\nv -1.820003 1.621875 -0.302522\r\nv -1.820003 1.621875 0.302523\r\nv -1.800900 2.024775 0.000000\r\nv -1.800745 1.471200 -0.604900\r\nv -1.800745 1.471200 0.604900\r\nv -1.800507 0.463200 -0.299282\r\nv -1.800507 0.463200 0.299282\r\nv -1.800455 2.031069 -0.081000\r\nv -1.800455 2.031069 0.081000\r\nv -1.799246 2.048152 -0.144000\r\nv -1.799246 2.048152 0.144000\r\nv -1.797466 2.073326 -0.189000\r\nv -1.797466 2.073326 0.189000\r\nv -1.796946 0.553725 -0.603624\r\nv -1.796946 0.553725 0.603624\r\nv -1.795303 2.103896 -0.216000\r\nv -1.795303 2.103896 0.216000\r\nv -1.792950 2.137163 -0.225000\r\nv -1.792950 2.137163 0.225000\r\nv -1.790597 2.170429 -0.216000\r\nv -1.790597 2.170429 0.216000\r\nv -1.788434 2.200999 -0.189000\r\nv -1.788434 2.200999 0.189000\r\nv -1.786654 2.226173 -0.144000\r\nv -1.786654 2.226173 0.144000\r\nv -1.785445 2.243256 -0.081000\r\nv -1.785445 2.243256 0.081000\r\nv -1.785000 2.249550 0.000000\r\nv -1.784000 1.774800 -0.000000\r\nv -1.784000 1.774800 0.000000\r\nv -1.779680 0.900000 -0.925920\r\nv -1.779680 0.900000 -0.925920\r\nv -1.779680 0.900000 0.925920\r\nv -1.779680 0.900000 0.925920\r\nv -1.773229 1.037175 -0.922564\r\nv -1.773229 1.037175 0.922564\r\nv -1.767222 0.771675 -0.919439\r\nv -1.767222 0.771675 0.919439\r\nv -1.761022 1.774800 -0.292719\r\nv -1.761022 1.774800 0.292719\r\nv -1.754764 1.178400 -0.912957\r\nv -1.754764 1.178400 0.912957\r\nv -1.751120 1.621875 -0.588230\r\nv -1.751120 1.621875 0.588230\r\nv -1.750000 0.384375 -0.000000\r\nv -1.750000 0.384375 0.000000\r\nv -1.733408 0.656400 -0.901846\r\nv -1.733408 0.656400 0.901846\r\nv -1.732362 0.463200 -0.581929\r\nv -1.732362 0.463200 0.581929\r\nv -1.727460 0.384375 -0.287140\r\nv -1.727460 0.384375 0.287140\r\nv -1.725622 1.323225 -0.897795\r\nv -1.725622 1.323225 0.897795\r\nv -1.718250 1.929525 -0.000000\r\nv -1.718250 1.929525 0.000000\r\nv -1.696119 1.929525 -0.281930\r\nv -1.696119 1.929525 0.281930\r\nv -1.694372 1.774800 -0.569167\r\nv -1.694372 1.774800 0.569167\r\nv -1.687137 1.471200 -0.877772\r\nv -1.687137 1.471200 0.877772\r\nv -1.683577 0.553725 -0.875920\r\nv -1.683577 0.553725 0.875920\r\nv -1.676000 0.316800 0.000000\r\nv -1.676000 0.316800 0.000000\r\nv -1.662080 0.384375 -0.558320\r\nv -1.662080 0.384375 0.558320\r\nv -1.654413 0.316800 -0.274998\r\nv -1.654413 0.316800 0.274998\r\nv -1.648000 2.085600 0.000000\r\nv -1.648000 2.085600 0.000000\r\nv -1.640643 1.621875 -0.853583\r\nv -1.640643 1.621875 0.853583\r\nv -1.631925 1.929525 -0.548190\r\nv -1.631925 1.929525 0.548190\r\nv -1.626774 2.085600 -0.270404\r\nv -1.626774 2.085600 0.270404\r\nv -1.623068 0.463200 -0.844439\r\nv -1.623068 0.463200 0.844439\r\nv -1.618560 0.900000 -1.187840\r\nv -1.618560 0.900000 -1.187840\r\nv -1.618560 0.900000 1.187840\r\nv -1.618560 0.900000 1.187840\r\nv -1.612693 1.037175 -1.183534\r\nv -1.612693 1.037175 1.183534\r\nv -1.608000 0.260025 -0.000000\r\nv -1.608000 0.260025 0.000000\r\nv -1.607230 0.771675 -1.179525\r\nv -1.607230 0.771675 1.179525\r\nv -1.600000 2.025000 0.000000\r\nv -1.597200 2.031300 -0.081000\r\nv -1.597200 2.031300 0.081000\r\nv -1.595900 1.178400 -1.171210\r\nv -1.595900 1.178400 1.171210\r\nv -1.591798 0.316800 -0.534711\r\nv -1.591798 0.316800 0.534711\r\nv -1.589600 2.048400 -0.144000\r\nv -1.589600 2.048400 0.144000\r\nv -1.587475 1.774800 -0.825921\r\nv -1.587475 1.774800 0.825921\r\nv -1.587289 0.260025 0.263841\r\nv -1.587289 0.260025 -0.263841\r\nv -1.578400 2.073600 -0.189000\r\nv -1.578400 2.073600 0.189000\r\nv -1.576477 0.656400 -1.156956\r\nv -1.576477 0.656400 1.156956\r\nv -1.574750 2.242575 0.000000\r\nv -1.574750 2.242575 0.000000\r\nv -1.569396 1.323225 -1.151759\r\nv -1.569396 1.323225 1.151759\r\nv -1.565204 2.085600 -0.525778\r\nv -1.565204 2.085600 0.525778\r\nv -1.564800 2.104200 -0.216000\r\nv -1.564800 2.104200 0.216000\r\nv -1.557220 0.384375 -0.810180\r\nv -1.557220 0.384375 0.810180\r\nv -1.554467 2.242575 -0.258385\r\nv -1.554467 2.242575 0.258385\r\nv -1.552000 0.213600 0.000000\r\nv -1.552000 0.213600 0.000000\r\nv -1.550000 2.137500 -0.225000\r\nv -1.550000 2.137500 0.225000\r\nv -1.535200 2.170800 -0.216000\r\nv -1.535200 2.170800 0.216000\r\nv -1.534395 1.471200 -1.126072\r\nv -1.534395 1.471200 1.126072\r\nv -1.532010 0.213600 0.254652\r\nv -1.532010 0.213600 -0.254652\r\nv -1.531158 0.553725 -1.123697\r\nv -1.531158 0.553725 1.123697\r\nv -1.528968 1.929525 -0.795481\r\nv -1.528968 1.929525 0.795481\r\nv -1.527214 0.260025 -0.513016\r\nv -1.527214 0.260025 0.513016\r\nv -1.521600 2.201400 -0.189000\r\nv -1.521600 2.201400 0.189000\r\nv -1.514000 0.177075 0.000000\r\nv -1.514000 0.177075 0.000000\r\nv -1.510400 2.226600 -0.144000\r\nv -1.510400 2.226600 0.144000\r\nv -1.502800 2.243700 -0.081000\r\nv -1.502800 2.243700 0.081000\r\nv -1.500000 2.400000 0.000000\r\nv -1.500000 0.150000 0.000000\r\nv -1.500000 2.250000 0.000000\r\nv -1.500000 2.400000 0.000000\r\nv -1.500000 0.150000 0.000000\r\nv -1.496475 0.127575 -0.000000\r\nv -1.496475 0.127575 0.000000\r\nv -1.495635 2.242575 -0.502408\r\nv -1.495635 2.242575 0.502408\r\nv -1.494500 0.177075 0.248417\r\nv -1.494500 0.177075 -0.248417\r\nv -1.492110 1.621875 -1.095040\r\nv -1.492110 1.621875 1.095040\r\nv -1.491372 0.316800 -0.775921\r\nv -1.491372 0.316800 0.775921\r\nv -1.480800 0.105600 0.000000\r\nv -1.480800 0.105600 -0.000000\r\nv -1.480680 2.400000 -0.246120\r\nv -1.480680 0.150000 0.246120\r\nv -1.480680 2.400000 0.246120\r\nv -1.480680 0.150000 -0.246120\r\nv -1.480680 0.150000 -0.246120\r\nv -1.480680 0.150000 0.246120\r\nv -1.480325 2.435437 0.000000\r\nv -1.480325 2.435437 0.000000\r\nv -1.477200 0.127575 0.245542\r\nv -1.477200 0.127575 -0.245542\r\nv -1.476127 0.463200 -1.083310\r\nv -1.476127 0.463200 1.083310\r\nv -1.474028 0.213600 0.495150\r\nv -1.474028 0.213600 -0.495150\r\nv -1.466456 2.085600 -0.762958\r\nv -1.466456 2.085600 0.762958\r\nv -1.461727 0.105600 -0.242970\r\nv -1.461727 0.105600 0.242970\r\nv -1.461258 2.435437 -0.242892\r\nv -1.461258 2.435437 0.242892\r\nv -1.459600 2.463000 0.000000\r\nv -1.459600 2.463000 0.000000\r\nv -1.445325 0.084525 0.000000\r\nv -1.445325 0.084525 0.000000\r\nv -1.443756 1.774800 -1.059553\r\nv -1.443756 1.774800 1.059553\r\nv -1.440800 2.463000 -0.239491\r\nv -1.440800 2.463000 0.239491\r\nv -1.439025 2.482687 0.000000\r\nv -1.437937 0.177075 0.483027\r\nv -1.437937 0.177075 -0.483027\r\nv -1.430863 0.260025 0.744440\r\nv -1.430863 0.260025 -0.744440\r\nv -1.426709 0.084525 -0.237149\r\nv -1.426709 0.084525 0.237149\r\nv -1.424640 2.400000 -0.478560\r\nv -1.424640 0.150000 -0.478560\r\nv -1.424640 0.150000 -0.478560\r\nv -1.424640 0.150000 0.478560\r\nv -1.424640 0.150000 0.478560\r\nv -1.424640 2.400000 0.478560\r\nv -1.421292 0.127575 0.477435\r\nv -1.421292 0.127575 -0.477435\r\nv -1.420490 2.482687 -0.236115\r\nv -1.420490 2.482687 0.236115\r\nv -1.420000 0.900000 -1.420000\r\nv -1.420000 0.900000 -1.420000\r\nv -1.420000 0.900000 1.420000\r\nv -1.420000 0.900000 1.420000\r\nv -1.419800 2.494500 0.000000\r\nv -1.419800 2.494500 0.000000\r\nv -1.416240 0.384375 -1.039360\r\nv -1.416240 0.384375 1.039360\r\nv -1.414853 1.037175 -1.414853\r\nv -1.414853 1.037175 1.414853\r\nv -1.410060 0.771675 -1.410060\r\nv -1.410060 0.771675 1.410060\r\nv -1.406405 0.105600 -0.472434\r\nv -1.406405 0.105600 0.472434\r\nv -1.405953 2.435437 -0.472283\r\nv -1.405953 2.435437 0.472283\r\nv -1.403125 2.498438 0.000000\r\nv -1.403125 2.498438 0.000000\r\nv -1.401513 2.494500 -0.232961\r\nv -1.401513 2.494500 0.232961\r\nv -1.401276 2.242575 -0.729046\r\nv -1.401276 2.242575 0.729046\r\nv -1.400120 1.178400 -1.400120\r\nv -1.400120 1.178400 1.400120\r\nv -1.400000 2.400000 0.000000\r\nv -1.400000 2.400000 0.000000\r\nv -1.390545 1.929525 -1.020503\r\nv -1.390545 1.929525 1.020503\r\nv -1.390200 2.494500 0.000000\r\nv -1.390200 2.494500 0.000000\r\nv -1.386270 2.463000 -0.465671\r\nv -1.386270 2.463000 0.465671\r\nv -1.385925 2.435437 0.000000\r\nv -1.385925 2.435437 0.000000\r\nv -1.385053 2.498438 -0.230225\r\nv -1.385053 2.498438 0.230225\r\nv -1.383080 0.656400 -1.383080\r\nv -1.383080 0.656400 1.383080\r\nv -1.382400 0.064800 -0.000000\r\nv -1.382400 0.064800 0.000000\r\nv -1.382225 2.482687 -0.000000\r\nv -1.382225 2.482687 0.000000\r\nv -1.381968 2.400000 -0.229712\r\nv -1.381968 2.400000 0.229712\r\nv -1.381032 0.213600 0.718514\r\nv -1.381032 0.213600 -0.718514\r\nv -1.380400 2.463000 0.000000\r\nv -1.380400 2.463000 0.000000\r\nv -1.376868 1.323225 -1.376867\r\nv -1.376867 1.323225 1.376868\r\nv -1.372712 0.084525 -0.461116\r\nv -1.372712 0.084525 0.461116\r\nv -1.372294 2.494500 -0.228104\r\nv -1.372294 2.494500 0.228104\r\nv -1.368074 2.435437 -0.227403\r\nv -1.368074 2.435437 0.227403\r\nv -1.366728 2.482687 -0.459107\r\nv -1.366728 2.482687 0.459107\r\nv -1.364595 0.064800 -0.226824\r\nv -1.364595 0.064800 0.226824\r\nv -1.364422 2.482687 -0.226795\r\nv -1.364422 2.482687 0.226795\r\nv -1.362620 2.463000 -0.226496\r\nv -1.362620 2.463000 0.226496\r\nv -1.356353 0.316800 -0.995410\r\nv -1.356353 0.316800 0.995410\r\nv -1.348469 2.494500 -0.452973\r\nv -1.348469 2.494500 0.452973\r\nv -1.347218 0.177075 0.700921\r\nv -1.347218 0.177075 -0.700921\r\nv -1.346160 1.471200 -1.346160\r\nv -1.346160 1.471200 1.346160\r\nv -1.343320 0.553725 -1.343320\r\nv -1.343320 0.553725 1.343320\r\nv -1.334760 2.400000 -0.694440\r\nv -1.334760 0.150000 -0.694440\r\nv -1.334760 0.150000 0.694440\r\nv -1.334760 0.150000 0.694440\r\nv -1.334760 2.400000 0.694440\r\nv -1.334760 0.150000 -0.694440\r\nv -1.333693 2.085600 -0.978780\r\nv -1.333693 2.085600 0.978780\r\nv -1.332632 2.498438 -0.447653\r\nv -1.332632 2.498438 0.447653\r\nv -1.331623 0.127575 0.692808\r\nv -1.331623 0.127575 -0.692808\r\nv -1.329664 2.400000 -0.446656\r\nv -1.329664 2.400000 0.446656\r\nv -1.320356 2.494500 -0.443529\r\nv -1.320356 2.494500 0.443529\r\nv -1.317675 0.105600 -0.685551\r\nv -1.317675 0.105600 0.685551\r\nv -1.317252 2.435437 -0.685331\r\nv -1.317252 2.435437 0.685331\r\nv -1.316296 2.435437 -0.442166\r\nv -1.316296 2.435437 0.442166\r\nv -1.312948 0.064800 0.441041\r\nv -1.312948 0.064800 -0.441041\r\nv -1.312782 2.482687 -0.440985\r\nv -1.312782 2.482687 0.440985\r\nv -1.311049 2.463000 -0.440403\r\nv -1.311049 2.463000 0.440403\r\nv -1.309063 1.621875 -1.309063\r\nv -1.309063 1.621875 1.309063\r\nv -1.301322 0.260025 0.955023\r\nv -1.301322 0.260025 -0.955023\r\nv -1.300000 2.400000 0.000000\r\nv -1.300000 2.400000 0.000000\r\nv -1.298810 2.463000 -0.675736\r\nv -1.298810 2.463000 0.675736\r\nv -1.295040 0.463200 -1.295040\r\nv -1.295040 0.463200 1.295040\r\nv -1.286108 0.084525 -0.669128\r\nv -1.286108 0.084525 0.669128\r\nv -1.284375 0.046875 0.000000\r\nv -1.284375 0.046875 0.000000\r\nv -1.283256 2.400000 -0.213304\r\nv -1.283256 2.400000 0.213304\r\nv -1.280502 2.482687 -0.666211\r\nv -1.280502 2.482687 0.666211\r\nv -1.274600 2.440800 0.000000\r\nv -1.274600 2.440800 0.000000\r\nv -1.274414 2.242575 -0.935276\r\nv -1.274414 2.242575 0.935276\r\nv -1.267832 0.046875 -0.210740\r\nv -1.267832 0.046875 0.210740\r\nv -1.266640 1.774800 -1.266640\r\nv -1.266640 1.774800 1.266640\r\nv -1.263395 2.494500 -0.657311\r\nv -1.263395 2.494500 0.657311\r\nv -1.258183 2.440800 0.209136\r\nv -1.258183 2.440800 -0.209136\r\nv -1.256003 0.213600 0.921764\r\nv -1.256003 0.213600 -0.921764\r\nv -1.248557 2.498438 -0.649591\r\nv -1.248557 2.498438 0.649591\r\nv -1.245776 2.400000 -0.648144\r\nv -1.245776 2.400000 0.648144\r\nv -1.242500 0.384375 -1.242500\r\nv -1.242500 0.384375 1.242500\r\nv -1.237056 2.494500 -0.643607\r\nv -1.237056 2.494500 0.643607\r\nv -1.234688 2.400000 -0.414752\r\nv -1.234688 2.400000 0.414752\r\nv -1.233252 2.435437 -0.641628\r\nv -1.233252 2.435437 0.641628\r\nv -1.230115 0.064800 -0.639996\r\nv -1.230115 0.064800 0.639996\r\nv -1.229959 2.482687 -0.639915\r\nv -1.229959 2.482687 0.639915\r\nv -1.228335 2.463000 -0.639070\r\nv -1.228335 2.463000 0.639070\r\nv -1.225250 0.177075 0.899195\r\nv -1.225250 0.177075 -0.899195\r\nv -1.219958 1.929525 1.219958\r\nv -1.219958 1.929525 -1.219958\r\nv -1.219848 0.046875 -0.409767\r\nv -1.219848 0.046875 0.409767\r\nv -1.213920 2.400000 -0.890880\r\nv -1.213920 0.150000 -0.890880\r\nv -1.213920 0.150000 -0.890880\r\nv -1.213920 0.150000 0.890880\r\nv -1.213920 0.150000 0.890880\r\nv -1.213920 2.400000 0.890880\r\nv -1.211067 0.127575 0.888786\r\nv -1.211067 0.127575 -0.888786\r\nv -1.210564 2.440800 0.406648\r\nv -1.210564 2.440800 -0.406648\r\nv -1.204800 2.474400 0.000000\r\nv -1.204800 2.474400 0.000000\r\nv -1.198382 0.105600 -0.879477\r\nv -1.198382 0.105600 0.879477\r\nv -1.197997 2.435437 -0.879195\r\nv -1.197997 2.435437 0.879195\r\nv -1.189960 0.316800 -1.189960\r\nv -1.189960 0.316800 1.189960\r\nv -1.189282 2.474400 -0.197684\r\nv -1.189282 2.474400 0.197684\r\nv -1.187840 0.900000 -1.618560\r\nv -1.187840 0.900000 -1.618560\r\nv -1.187840 0.900000 1.618560\r\nv -1.187840 0.900000 1.618560\r\nv -1.183534 1.037175 -1.612693\r\nv -1.183534 1.037175 1.612693\r\nv -1.181225 2.463000 -0.866886\r\nv -1.181225 2.463000 0.866886\r\nv -1.179525 0.771675 -1.607230\r\nv -1.179525 0.771675 1.607230\r\nv -1.171210 1.178400 -1.595900\r\nv -1.171210 1.178400 1.595900\r\nv -1.170080 2.085600 -1.170080\r\nv -1.170080 2.085600 1.170080\r\nv -1.169673 0.084525 -0.858407\r\nv -1.169673 0.084525 0.858407\r\nv -1.164574 2.482687 -0.854666\r\nv -1.164574 2.482687 0.854666\r\nv -1.156956 0.656400 -1.576477\r\nv -1.156956 0.656400 1.576477\r\nv -1.156792 2.400000 -0.601848\r\nv -1.156792 2.400000 0.601848\r\nv -1.151759 1.323225 -1.569396\r\nv -1.151759 1.323225 1.569396\r\nv -1.149016 2.494500 -0.843248\r\nv -1.149016 2.494500 0.843248\r\nv -1.144271 2.474400 -0.384379\r\nv -1.144271 2.474400 0.384379\r\nv -1.143600 0.031200 0.000000\r\nv -1.143600 0.031200 0.000000\r\nv -1.142888 0.046875 -0.594614\r\nv -1.142888 0.046875 0.594614\r\nv -1.141680 0.260025 1.141680\r\nv -1.141680 0.260025 -1.141680\r\nv -1.135521 2.498438 -0.833344\r\nv -1.135521 2.498438 0.833344\r\nv -1.134190 2.440800 0.590089\r\nv -1.134190 2.440800 -0.590089\r\nv -1.132992 2.400000 -0.831488\r\nv -1.132992 2.400000 0.831488\r\nv -1.128870 0.031200 -0.187642\r\nv -1.128870 0.031200 0.187642\r\nv -1.126072 1.471200 -1.534395\r\nv -1.126072 1.471200 1.534395\r\nv -1.125061 2.494500 -0.825668\r\nv -1.125061 2.494500 0.825668\r\nv -1.123697 0.553725 -1.531158\r\nv -1.123697 0.553725 1.531158\r\nv -1.121601 2.435437 -0.823129\r\nv -1.121601 2.435437 0.823129\r\nv -1.118749 0.064800 -0.821035\r\nv -1.118749 0.064800 0.821035\r\nv -1.118607 2.482687 -0.820931\r\nv -1.118607 2.482687 0.820931\r\nv -1.118073 2.242575 -1.118073\r\nv -1.118073 2.242575 1.118073\r\nv -1.117130 2.463000 -0.819847\r\nv -1.117130 2.463000 0.819847\r\nv -1.101920 0.213600 1.101920\r\nv -1.101920 0.213600 -1.101920\r\nv -1.100200 2.502600 0.000000\r\nv -1.100200 2.502600 0.000000\r\nv -1.095040 1.621875 -1.492110\r\nv -1.095040 1.621875 1.492110\r\nv -1.086146 0.031200 0.364854\r\nv -1.086146 0.031200 -0.364854\r\nv -1.086029 2.502600 0.180521\r\nv -1.086029 2.502600 -0.180521\r\nv -1.083310 0.463200 -1.476127\r\nv -1.083310 0.463200 1.476127\r\nv -1.074940 0.177075 -1.074940\r\nv -1.074940 0.177075 1.074940\r\nv -1.072079 2.474400 -0.557774\r\nv -1.072079 2.474400 0.557774\r\nv -1.065000 2.400000 -1.065000\r\nv -1.065000 0.150000 -1.065000\r\nv -1.065000 0.150000 1.065000\r\nv -1.065000 2.400000 1.065000\r\nv -1.062497 0.127575 1.062497\r\nv -1.062497 0.127575 -1.062497\r\nv -1.059553 1.774800 -1.443756\r\nv -1.059553 1.774800 1.443756\r\nv -1.052064 2.400000 -0.772096\r\nv -1.052064 2.400000 0.772096\r\nv -1.051368 0.105600 -1.051368\r\nv -1.051368 0.105600 1.051368\r\nv -1.051031 2.435437 -1.051031\r\nv -1.051031 2.435437 1.051031\r\nv -1.044926 2.502600 -0.351008\r\nv -1.044926 2.502600 0.351008\r\nv -1.039419 0.046875 -0.762816\r\nv -1.039419 0.046875 0.762816\r\nv -1.039360 0.384375 -1.416240\r\nv -1.039360 0.384375 1.416240\r\nv -1.036316 2.463000 -1.036316\r\nv -1.036316 2.463000 1.036316\r\nv -1.031508 2.440800 0.757010\r\nv -1.031508 2.440800 -0.757010\r\nv -1.026181 0.084525 -1.026181\r\nv -1.026181 0.084525 1.026181\r\nv -1.021708 2.482687 -1.021708\r\nv -1.021708 2.482687 1.021708\r\nv -1.020503 1.929525 -1.390545\r\nv -1.020503 1.929525 1.390545\r\nv -1.017621 0.031200 0.529441\r\nv -1.017621 0.031200 -0.529441\r\nv -1.008058 2.494500 -1.008058\r\nv -1.008058 2.494500 1.008058\r\nv -0.996219 2.498438 -0.996219\r\nv -0.996219 2.498438 0.996219\r\nv -0.995410 0.316800 -1.356353\r\nv -0.995410 0.316800 1.356353\r\nv -0.994000 2.400000 -0.994000\r\nv -0.994000 2.400000 0.994000\r\nv -0.987042 2.494500 -0.987042\r\nv -0.987042 2.494500 0.987042\r\nv -0.984007 2.435437 -0.984007\r\nv -0.984007 2.435437 0.984007\r\nv -0.981504 0.064800 0.981504\r\nv -0.981504 0.064800 -0.981504\r\nv -0.981380 2.482687 -0.981380\r\nv -0.981380 2.482687 0.981380\r\nv -0.980084 2.463000 -0.980084\r\nv -0.980084 2.463000 0.980084\r\nv -0.979002 2.502600 0.509349\r\nv -0.979002 2.502600 -0.509349\r\nv -0.978780 2.085600 -1.333693\r\nv -0.978780 2.085600 1.333693\r\nv -0.975021 2.474400 -0.715555\r\nv -0.975021 2.474400 0.715555\r\nv -0.970400 2.527200 0.000000\r\nv -0.970400 2.527200 0.000000\r\nv -0.957901 2.527200 -0.159223\r\nv -0.957901 2.527200 0.159223\r\nv -0.955023 0.260025 1.301322\r\nv -0.955023 0.260025 -1.301322\r\nv -0.952425 0.018225 -0.000000\r\nv -0.952425 0.018225 0.000000\r\nv -0.940158 0.018225 0.156274\r\nv -0.940158 0.018225 -0.156274\r\nv -0.935276 2.242575 -1.274414\r\nv -0.935276 2.242575 1.274414\r\nv -0.925920 0.900000 -1.779680\r\nv -0.925920 0.900000 1.779680\r\nv -0.925920 0.900000 1.779680\r\nv -0.925920 0.900000 -1.779680\r\nv -0.925493 0.031200 0.679207\r\nv -0.925493 0.031200 -0.679207\r\nv -0.923000 2.400000 -0.923000\r\nv -0.923000 2.400000 0.923000\r\nv -0.922564 1.037175 1.773229\r\nv -0.922564 1.037175 -1.773229\r\nv -0.921764 0.213600 1.256003\r\nv -0.921764 0.213600 -1.256003\r\nv -0.921647 2.527200 -0.309596\r\nv -0.921647 2.527200 0.309596\r\nv -0.919439 0.771675 -1.767222\r\nv -0.919439 0.771675 1.767222\r\nv -0.912957 1.178400 -1.754764\r\nv -0.912957 1.178400 1.754764\r\nv -0.911906 0.046875 -0.911906\r\nv -0.911906 0.046875 0.911906\r\nv -0.904966 2.440800 0.904966\r\nv -0.904966 2.440800 -0.904966\r\nv -0.904575 0.018225 0.303862\r\nv -0.904575 0.018225 -0.303862\r\nv -0.901846 0.656400 -1.733408\r\nv -0.901846 0.656400 1.733408\r\nv -0.899195 0.177075 1.225250\r\nv -0.899195 0.177075 -1.225250\r\nv -0.897795 1.323225 -1.725622\r\nv -0.897795 1.323225 1.725622\r\nv -0.890880 0.150000 -1.213920\r\nv -0.890880 0.150000 1.213920\r\nv -0.890880 2.400000 -1.213920\r\nv -0.890880 0.150000 -1.213920\r\nv -0.890880 0.150000 1.213920\r\nv -0.890880 2.400000 1.213920\r\nv -0.890370 2.502600 -0.653431\r\nv -0.890370 2.502600 0.653431\r\nv -0.888786 0.127575 1.211067\r\nv -0.888786 0.127575 -1.211067\r\nv -0.879477 0.105600 -1.198382\r\nv -0.879477 0.105600 1.198382\r\nv -0.879195 2.435437 -1.197997\r\nv -0.879195 2.435437 1.197997\r\nv -0.877772 1.471200 -1.687137\r\nv -0.877772 1.471200 1.687137\r\nv -0.875920 0.553725 -1.683577\r\nv -0.875920 0.553725 1.683577\r\nv -0.866886 2.463000 -1.181225\r\nv -0.866886 2.463000 1.181225\r\nv -0.863501 2.527200 -0.449256\r\nv -0.863501 2.527200 0.449256\r\nv -0.858407 0.084525 -1.169673\r\nv -0.858407 0.084525 1.169673\r\nv -0.855408 2.474400 -0.855408\r\nv -0.855408 2.474400 0.855408\r\nv -0.854666 2.482687 -1.164574\r\nv -0.854666 2.482687 1.164574\r\nv -0.853583 1.621875 -1.640643\r\nv -0.853583 1.621875 1.640643\r\nv -0.847506 0.018225 -0.440935\r\nv -0.847506 0.018225 0.440935\r\nv -0.844439 0.463200 1.623068\r\nv -0.844439 0.463200 -1.623068\r\nv -0.843248 2.494500 -1.149016\r\nv -0.843248 2.494500 1.149016\r\nv -0.833344 2.498438 -1.135521\r\nv -0.833344 2.498438 1.135521\r\nv -0.831488 2.400000 -1.132992\r\nv -0.831488 2.400000 1.132992\r\nv -0.825921 1.774800 1.587475\r\nv -0.825921 1.774800 -1.587475\r\nv -0.825668 2.494500 -1.125061\r\nv -0.825668 2.494500 1.125061\r\nv -0.825000 2.550000 0.000000\r\nv -0.825000 2.550000 0.000000\r\nv -0.823129 2.435437 -1.121601\r\nv -0.823129 2.435437 1.121601\r\nv -0.821035 0.064800 1.118749\r\nv -0.821035 0.064800 -1.118749\r\nv -0.820931 2.482687 1.118607\r\nv -0.820931 2.482687 -1.118607\r\nv -0.819847 2.463000 -1.117130\r\nv -0.819847 2.463000 1.117130\r\nv -0.814374 2.550000 -0.135366\r\nv -0.814374 2.550000 0.135366\r\nv -0.811956 0.031200 0.811956\r\nv -0.811956 0.031200 -0.811956\r\nv -0.810180 0.384375 1.557220\r\nv -0.810180 0.384375 -1.557220\r\nv -0.795481 1.929525 1.528968\r\nv -0.795481 1.929525 -1.528968\r\nv -0.785325 2.527200 -0.576340\r\nv -0.785325 2.527200 0.576340\r\nv -0.783552 2.550000 -0.263208\r\nv -0.783552 2.550000 0.263208\r\nv -0.781142 2.502600 -0.781142\r\nv -0.781142 2.502600 0.781142\r\nv -0.775921 0.316800 -1.491372\r\nv -0.775921 0.316800 1.491372\r\nv -0.772096 2.400000 -1.052064\r\nv -0.772096 2.400000 1.052064\r\nv -0.770779 0.018225 0.565664\r\nv -0.770779 0.018225 -0.565664\r\nv -0.762958 2.085600 -1.466456\r\nv -0.762958 2.085600 1.466456\r\nv -0.762816 0.046875 -1.039419\r\nv -0.762816 0.046875 1.039419\r\nv -0.757010 2.440800 1.031508\r\nv -0.757010 2.440800 -1.031508\r\nv -0.744440 0.260025 1.430863\r\nv -0.744440 0.260025 -1.430863\r\nv -0.734118 2.550000 -0.381942\r\nv -0.734118 2.550000 0.381942\r\nv -0.729046 2.242575 -1.401276\r\nv -0.729046 2.242575 1.401276\r\nv -0.718514 0.213600 1.381032\r\nv -0.718514 0.213600 -1.381032\r\nv -0.715555 2.474400 -0.975021\r\nv -0.715555 2.474400 0.975021\r\nv -0.703200 0.008400 0.000000\r\nv -0.700921 0.177075 1.347218\r\nv -0.700921 0.177075 -1.347218\r\nv -0.694440 0.150000 -1.334760\r\nv -0.694440 0.150000 1.334760\r\nv -0.694440 2.400000 1.334760\r\nv -0.694440 0.150000 1.334760\r\nv -0.694440 2.400000 -1.334760\r\nv -0.694440 0.150000 -1.334760\r\nv -0.694143 0.008400 -0.115381\r\nv -0.694143 0.008400 0.115381\r\nv -0.692808 0.127575 1.331623\r\nv -0.692808 0.127575 -1.331623\r\nv -0.688984 2.527200 -0.688984\r\nv -0.688984 2.527200 0.688984\r\nv -0.685551 0.105600 -1.317675\r\nv -0.685551 0.105600 1.317675\r\nv -0.685331 2.435437 -1.317252\r\nv -0.685331 2.435437 1.317252\r\nv -0.679207 0.031200 -0.925493\r\nv -0.679207 0.031200 0.925493\r\nv -0.676222 0.018225 0.676222\r\nv -0.676222 0.018225 -0.676222\r\nv -0.675736 2.463000 -1.298810\r\nv -0.675736 2.463000 1.298810\r\nv -0.673600 2.572800 0.000000\r\nv -0.673600 2.572800 0.000000\r\nv -0.669128 0.084525 -1.286108\r\nv -0.669128 0.084525 1.286108\r\nv -0.667871 0.008400 -0.224349\r\nv -0.667871 0.008400 0.224349\r\nv -0.667656 2.550000 -0.489984\r\nv -0.667656 2.550000 0.489984\r\nv -0.666211 2.482687 1.280502\r\nv -0.666211 2.482687 -1.280502\r\nv -0.664924 2.572800 -0.110524\r\nv -0.664924 2.572800 0.110524\r\nv -0.657311 2.494500 -1.263395\r\nv -0.657311 2.494500 1.263395\r\nv -0.653431 2.502600 -0.890370\r\nv -0.653431 2.502600 0.890370\r\nv -0.649591 2.498438 -1.248557\r\nv -0.649591 2.498438 1.248557\r\nv -0.648144 2.400000 -1.245776\r\nv -0.648144 2.400000 1.245776\r\nv -0.643607 2.494500 -1.237056\r\nv -0.643607 2.494500 1.237056\r\nv -0.641628 2.435437 -1.233252\r\nv -0.641628 2.435437 1.233252\r\nv -0.639996 0.064800 -1.230115\r\nv -0.639996 0.064800 1.230115\r\nv -0.639915 2.482687 1.229959\r\nv -0.639915 2.482687 -1.229959\r\nv -0.639758 2.572800 -0.214905\r\nv -0.639758 2.572800 0.214905\r\nv -0.639070 2.463000 -1.228335\r\nv -0.639070 2.463000 1.228335\r\nv -0.638080 0.900000 -1.899520\r\nv -0.638080 0.900000 -1.899520\r\nv -0.638080 0.900000 1.899520\r\nv -0.638080 0.900000 1.899520\r\nv -0.635767 1.037175 -1.892634\r\nv -0.635767 1.037175 1.892634\r\nv -0.633613 0.771675 -1.886223\r\nv -0.633613 0.771675 1.886223\r\nv -0.629147 1.178400 -1.872927\r\nv -0.629147 1.178400 1.872927\r\nv -0.625735 0.008400 0.325553\r\nv -0.625735 0.008400 -0.325553\r\nv -0.621490 0.656400 -1.850132\r\nv -0.621490 0.656400 1.850132\r\nv -0.618698 1.323225 -1.841822\r\nv -0.618698 1.323225 1.841822\r\nv -0.604900 1.471200 -1.800745\r\nv -0.604900 1.471200 1.800745\r\nv -0.603624 0.553725 -1.796946\r\nv -0.603624 0.553725 1.796946\r\nv -0.601848 2.400000 -1.156792\r\nv -0.601848 2.400000 1.156792\r\nv -0.599396 2.572800 -0.311850\r\nv -0.599396 2.572800 0.311850\r\nv -0.594614 0.046875 -1.142888\r\nv -0.594614 0.046875 1.142888\r\nv -0.590089 2.440800 1.134190\r\nv -0.590089 2.440800 -1.134190\r\nv -0.588230 1.621875 -1.751120\r\nv -0.588230 1.621875 1.751120\r\nv -0.585750 2.550000 -0.585750\r\nv -0.585750 2.550000 0.585750\r\nv -0.581929 0.463200 -1.732362\r\nv -0.581929 0.463200 1.732362\r\nv -0.576340 2.527200 -0.785325\r\nv -0.576340 2.527200 0.785325\r\nv -0.569167 1.774800 -1.694372\r\nv -0.569167 1.774800 1.694372\r\nv -0.569086 0.008400 -0.417645\r\nv -0.569086 0.008400 0.417645\r\nv -0.565664 0.018225 0.770779\r\nv -0.565664 0.018225 -0.770779\r\nv -0.558320 0.384375 -1.662080\r\nv -0.558320 0.384375 1.662080\r\nv -0.557774 2.474400 -1.072079\r\nv -0.557774 2.474400 1.072079\r\nv -0.548190 1.929525 -1.631925\r\nv -0.548190 1.929525 1.631925\r\nv -0.545131 2.572800 -0.400065\r\nv -0.545131 2.572800 0.400065\r\nv -0.534711 0.316800 -1.591798\r\nv -0.534711 0.316800 1.591798\r\nv -0.529441 0.031200 -1.017621\r\nv -0.529441 0.031200 1.017621\r\nv -0.525800 2.597400 0.000000\r\nv -0.525800 2.597400 0.000000\r\nv -0.525778 2.085600 -1.565204\r\nv -0.525778 2.085600 1.565204\r\nv -0.519028 2.597400 0.086273\r\nv -0.519028 2.597400 -0.086273\r\nv -0.513016 0.260025 -1.527214\r\nv -0.513016 0.260025 1.527214\r\nv -0.509349 2.502600 0.979002\r\nv -0.509349 2.502600 -0.979002\r\nv -0.502408 2.242575 -1.495635\r\nv -0.502408 2.242575 1.495635\r\nv -0.499384 2.597400 -0.167751\r\nv -0.499384 2.597400 0.167751\r\nv -0.499272 0.008400 -0.499272\r\nv -0.499272 0.008400 0.499272\r\nv -0.495150 0.213600 -1.474028\r\nv -0.495150 0.213600 1.474028\r\nv -0.489984 2.550000 -0.667656\r\nv -0.489984 2.550000 0.667656\r\nv -0.483027 0.177075 -1.437937\r\nv -0.483027 0.177075 1.437937\r\nv -0.478560 0.150000 1.424640\r\nv -0.478560 2.400000 -1.424640\r\nv -0.478560 0.150000 -1.424640\r\nv -0.478560 0.150000 -1.424640\r\nv -0.478560 0.150000 1.424640\r\nv -0.478560 2.400000 1.424640\r\nv -0.478256 2.572800 -0.478256\r\nv -0.478256 2.572800 0.478256\r\nv -0.477435 0.127575 1.421292\r\nv -0.477435 0.127575 -1.421292\r\nv -0.472434 0.105600 1.406405\r\nv -0.472434 0.105600 -1.406405\r\nv -0.472283 2.435437 -1.405953\r\nv -0.472283 2.435437 1.405953\r\nv -0.467878 2.597400 -0.243424\r\nv -0.467878 2.597400 0.243424\r\nv -0.465671 2.463000 -1.386270\r\nv -0.465671 2.463000 1.386270\r\nv -0.461116 0.084525 1.372712\r\nv -0.461116 0.084525 -1.372712\r\nv -0.459107 2.482687 -1.366728\r\nv -0.459107 2.482687 1.366728\r\nv -0.452973 2.494500 -1.348469\r\nv -0.452973 2.494500 1.348469\r\nv -0.449256 2.527200 -0.863501\r\nv -0.449256 2.527200 0.863501\r\nv -0.447653 2.498438 -1.332632\r\nv -0.447653 2.498438 1.332632\r\nv -0.446656 2.400000 -1.329664\r\nv -0.446656 2.400000 1.329664\r\nv -0.443529 2.494500 -1.320356\r\nv -0.443529 2.494500 1.320356\r\nv -0.442166 2.435437 -1.316296\r\nv -0.442166 2.435437 1.316296\r\nv -0.441041 0.064800 1.312948\r\nv -0.441041 0.064800 -1.312948\r\nv -0.440985 2.482687 -1.312782\r\nv -0.440985 2.482687 1.312782\r\nv -0.440935 0.018225 0.847506\r\nv -0.440935 0.018225 -0.847506\r\nv -0.440403 2.463000 -1.311049\r\nv -0.440403 2.463000 1.311049\r\nv -0.425519 2.597400 0.312283\r\nv -0.425519 2.597400 -0.312283\r\nv -0.417645 0.008400 -0.569086\r\nv -0.417645 0.008400 0.569086\r\nv -0.414752 2.400000 -1.234688\r\nv -0.414752 2.400000 1.234688\r\nv -0.409767 0.046875 1.219848\r\nv -0.409767 0.046875 -1.219848\r\nv -0.406648 2.440800 -1.210564\r\nv -0.406648 2.440800 1.210564\r\nv -0.400065 2.572800 -0.545131\r\nv -0.400065 2.572800 0.545131\r\nv -0.391200 2.625600 0.000000\r\nv -0.391200 2.625600 0.000000\r\nv -0.388275 0.002175 -0.000000\r\nv -0.388275 0.002175 0.000000\r\nv -0.386161 2.625600 -0.064188\r\nv -0.386161 2.625600 0.064188\r\nv -0.384379 2.474400 -1.144271\r\nv -0.384379 2.474400 1.144271\r\nv -0.383274 0.002175 -0.063708\r\nv -0.383274 0.002175 0.063708\r\nv -0.381942 2.550000 -0.734118\r\nv -0.381942 2.550000 0.734118\r\nv -0.373318 2.597400 -0.373318\r\nv -0.373318 2.597400 0.373318\r\nv -0.371546 2.625600 -0.124808\r\nv -0.371546 2.625600 0.124808\r\nv -0.368768 0.002175 -0.123875\r\nv -0.368768 0.002175 0.123875\r\nv -0.364854 0.031200 1.086146\r\nv -0.364854 0.031200 -1.086146\r\nv -0.358400 3.034800 0.000000\r\nv -0.358400 3.034800 0.000000\r\nv -0.358200 3.081150 0.000000\r\nv -0.358200 3.081150 0.000000\r\nv -0.353807 3.034800 -0.059016\r\nv -0.353807 3.034800 0.059016\r\nv -0.353610 3.081150 -0.058988\r\nv -0.353610 3.081150 0.058988\r\nv -0.351008 2.502600 -1.044926\r\nv -0.351008 2.502600 1.044926\r\nv -0.348105 2.625600 -0.181110\r\nv -0.348105 2.625600 0.181110\r\nv -0.345503 0.002175 -0.179756\r\nv -0.345503 0.002175 0.179756\r\nv -0.340477 3.034800 -0.114676\r\nv -0.340477 3.034800 0.114676\r\nv -0.340289 3.081150 -0.114619\r\nv -0.340289 3.081150 0.114619\r\nv -0.328160 0.900000 -1.974240\r\nv -0.328160 0.900000 1.974240\r\nv -0.328160 0.900000 1.974240\r\nv -0.326970 1.037175 -1.967083\r\nv -0.326970 1.037175 1.967083\r\nv -0.325863 0.771675 -1.960420\r\nv -0.325863 0.771675 1.960420\r\nv -0.325553 0.008400 -0.625735\r\nv -0.325553 0.008400 0.625735\r\nv -0.325000 2.981250 0.000000\r\nv -0.325000 2.981250 0.000000\r\nv -0.323566 1.178400 -1.946601\r\nv -0.323566 1.178400 1.946601\r\nv -0.320834 2.981250 -0.053508\r\nv -0.320834 2.981250 0.053508\r\nv -0.319628 0.656400 -1.922910\r\nv -0.319628 0.656400 1.922910\r\nv -0.319082 3.034800 -0.166306\r\nv -0.319082 3.034800 0.166306\r\nv -0.318907 3.081150 -0.166221\r\nv -0.318907 3.081150 0.166221\r\nv -0.318192 1.323225 -1.914272\r\nv -0.318192 1.323225 1.914272\r\nv -0.316590 2.625600 -0.232342\r\nv -0.316590 2.625600 0.232342\r\nv -0.314223 0.002175 -0.230604\r\nv -0.314223 0.002175 0.230604\r\nv -0.312283 2.597400 -0.425519\r\nv -0.312283 2.597400 0.425519\r\nv -0.311850 2.572800 -0.599396\r\nv -0.311850 2.572800 0.599396\r\nv -0.311096 1.471200 -1.871580\r\nv -0.311096 1.471200 1.871580\r\nv -0.310439 0.553725 -1.867631\r\nv -0.310439 0.553725 1.867631\r\nv -0.309596 2.527200 -0.921647\r\nv -0.309596 2.527200 0.921647\r\nv -0.308800 3.117600 0.000000\r\nv -0.308800 3.117600 0.000000\r\nv -0.308744 2.981250 -0.103976\r\nv -0.308744 2.981250 0.103976\r\nv -0.304843 3.117600 -0.050855\r\nv -0.304843 3.117600 0.050855\r\nv -0.303862 0.018225 0.904575\r\nv -0.303862 0.018225 -0.904575\r\nv -0.302523 1.621875 -1.820003\r\nv -0.302522 1.621875 1.820003\r\nv -0.299282 0.463200 -1.800507\r\nv -0.299282 0.463200 1.800507\r\nv -0.293360 3.117600 -0.098814\r\nv -0.293360 3.117600 0.098814\r\nv -0.292719 1.774800 -1.761022\r\nv -0.292719 1.774800 1.761022\r\nv -0.290295 3.034800 -0.213234\r\nv -0.290295 3.034800 0.213234\r\nv -0.290138 3.081150 -0.213123\r\nv -0.290138 3.081150 0.213123\r\nv -0.289340 2.981250 -0.150793\r\nv -0.289340 2.981250 0.150793\r\nv -0.287140 0.384375 -1.727460\r\nv -0.287140 0.384375 1.727460\r\nv -0.281930 1.929525 1.696119\r\nv -0.281930 1.929525 -1.696119\r\nv -0.279400 2.659200 0.000000\r\nv -0.277752 2.625600 -0.277752\r\nv -0.277752 2.625600 0.277752\r\nv -0.275801 2.659200 -0.045844\r\nv -0.275801 2.659200 0.045844\r\nv -0.275675 0.002175 -0.275675\r\nv -0.275675 0.002175 0.275675\r\nv -0.274998 0.316800 -1.654413\r\nv -0.274998 0.316800 1.654413\r\nv -0.274928 3.117600 -0.143301\r\nv -0.274928 3.117600 0.143301\r\nv -0.273600 2.923200 0.000000\r\nv -0.273600 2.923200 0.000000\r\nv -0.270404 2.085600 -1.626774\r\nv -0.270404 2.085600 1.626774\r\nv -0.270092 2.923200 -0.045032\r\nv -0.270092 2.923200 0.045032\r\nv -0.265363 2.659200 -0.089140\r\nv -0.265363 2.659200 0.089140\r\nv -0.263841 0.260025 1.587289\r\nv -0.263841 0.260025 -1.587289\r\nv -0.263232 2.981250 -0.193348\r\nv -0.263232 2.981250 0.193348\r\nv -0.263208 2.550000 -0.783552\r\nv -0.263208 2.550000 0.783552\r\nv -0.259910 2.923200 -0.087511\r\nv -0.259910 2.923200 0.087511\r\nv -0.258385 2.242575 -1.554467\r\nv -0.258385 2.242575 1.554467\r\nv -0.254788 3.034800 -0.254788\r\nv -0.254788 3.034800 0.254788\r\nv -0.254653 3.081150 -0.254653\r\nv -0.254653 3.081150 0.254653\r\nv -0.254652 0.213600 -1.532010\r\nv -0.254652 0.213600 1.532010\r\nv -0.250127 3.117600 -0.183734\r\nv -0.250127 3.117600 0.183734\r\nv -0.248621 2.659200 0.129351\r\nv -0.248621 2.659200 -0.129351\r\nv -0.248417 0.177075 -1.494500\r\nv -0.248417 0.177075 1.494500\r\nv -0.246120 0.150000 1.480680\r\nv -0.246120 2.400000 -1.480680\r\nv -0.246120 0.150000 -1.480680\r\nv -0.246120 0.150000 -1.480680\r\nv -0.246120 0.150000 1.480680\r\nv -0.246120 2.400000 1.480680\r\nv -0.245542 0.127575 1.477200\r\nv -0.245542 0.127575 -1.477200\r\nv -0.243569 2.923200 -0.126920\r\nv -0.243569 2.923200 0.126920\r\nv -0.243424 2.597400 0.467878\r\nv -0.243424 2.597400 -0.467878\r\nv -0.242970 0.105600 1.461727\r\nv -0.242970 0.105600 -1.461727\r\nv -0.242892 2.435437 -1.461258\r\nv -0.242892 2.435437 1.461258\r\nv -0.239491 2.463000 -1.440800\r\nv -0.239491 2.463000 1.440800\r\nv -0.237149 0.084525 1.426709\r\nv -0.237149 0.084525 -1.426709\r\nv -0.236115 2.482687 -1.420490\r\nv -0.236115 2.482687 1.420490\r\nv -0.232961 2.494500 -1.401513\r\nv -0.232961 2.494500 1.401513\r\nv -0.232342 2.625600 -0.316590\r\nv -0.232342 2.625600 0.316590\r\nv -0.231031 2.981250 -0.231031\r\nv -0.231031 2.981250 0.231031\r\nv -0.230604 0.002175 -0.314223\r\nv -0.230604 0.002175 0.314223\r\nv -0.230225 2.498438 -1.385053\r\nv -0.230225 2.498438 1.385053\r\nv -0.229712 2.400000 -1.381968\r\nv -0.229712 2.400000 1.381968\r\nv -0.228104 2.494500 -1.372294\r\nv -0.228104 2.494500 1.372294\r\nv -0.227403 2.435437 -1.368074\r\nv -0.227403 2.435437 1.368074\r\nv -0.226824 0.064800 1.364595\r\nv -0.226824 0.064800 -1.364595\r\nv -0.226795 2.482687 1.364422\r\nv -0.226795 2.482687 -1.364422\r\nv -0.226496 2.463000 -1.362620\r\nv -0.226496 2.463000 1.362620\r\nv -0.226113 2.659200 -0.165941\r\nv -0.226113 2.659200 0.165941\r\nv -0.224349 0.008400 0.667871\r\nv -0.224349 0.008400 -0.667871\r\nv -0.221585 2.923200 -0.162745\r\nv -0.221585 2.923200 0.162745\r\nv -0.219800 2.863350 0.000000\r\nv -0.219800 2.863350 0.000000\r\nv -0.219536 3.117600 -0.219536\r\nv -0.219536 3.117600 0.219536\r\nv -0.216979 2.863350 0.036157\r\nv -0.216979 2.863350 -0.036157\r\nv -0.214905 2.572800 -0.639758\r\nv -0.214905 2.572800 0.639758\r\nv -0.213304 2.400000 -1.283256\r\nv -0.213304 2.400000 1.283256\r\nv -0.213234 3.034800 -0.290295\r\nv -0.213234 3.034800 0.290295\r\nv -0.213123 3.081150 -0.290138\r\nv -0.213123 3.081150 0.290138\r\nv -0.210740 0.046875 -1.267832\r\nv -0.210740 0.046875 1.267832\r\nv -0.209136 2.440800 -1.258183\r\nv -0.209136 2.440800 1.258183\r\nv -0.208794 2.863350 0.070270\r\nv -0.208794 2.863350 -0.070270\r\nv -0.200000 2.700000 0.000000\r\nv -0.200000 2.700000 0.000000\r\nv -0.200000 2.700000 0.000000\r\nv -0.200000 2.700000 0.000000\r\nv -0.198374 2.659200 -0.198374\r\nv -0.198374 2.659200 0.198374\r\nv -0.197684 2.474400 -1.189282\r\nv -0.197684 2.474400 1.189282\r\nv -0.197424 2.700000 -0.032816\r\nv -0.197424 2.700000 0.032816\r\nv -0.197424 2.700000 0.032816\r\nv -0.197424 2.700000 -0.032816\r\nv -0.195658 2.863350 -0.101925\r\nv -0.195658 2.863350 0.101925\r\nv -0.194600 3.141450 0.000000\r\nv -0.194600 3.141450 0.000000\r\nv -0.194472 2.923200 -0.194472\r\nv -0.194472 2.923200 0.194472\r\nv -0.193348 2.981250 -0.263232\r\nv -0.193348 2.981250 0.263232\r\nv -0.192107 3.141450 -0.032048\r\nv -0.192107 3.141450 0.032048\r\nv -0.189952 2.700000 -0.063808\r\nv -0.189952 2.700000 0.063808\r\nv -0.189952 2.700000 0.063808\r\nv -0.189952 2.700000 -0.063808\r\nv -0.187642 0.031200 1.128870\r\nv -0.187642 0.031200 -1.128870\r\nv -0.184870 3.141450 -0.062272\r\nv -0.184870 3.141450 0.062272\r\nv -0.183734 3.117600 -0.250127\r\nv -0.183734 3.117600 0.250127\r\nv -0.181110 2.625600 0.348105\r\nv -0.181110 2.625600 -0.348105\r\nv -0.180521 2.502600 -1.086029\r\nv -0.180521 2.502600 1.086029\r\nv -0.179756 0.002175 -0.345503\r\nv -0.179756 0.002175 0.345503\r\nv -0.179200 2.804400 0.000000\r\nv -0.179200 2.804400 0.000000\r\nv -0.177989 2.863350 -0.130707\r\nv -0.177989 2.863350 0.130707\r\nv -0.177968 2.700000 -0.092592\r\nv -0.177968 2.700000 0.092592\r\nv -0.177968 2.700000 0.092592\r\nv -0.177968 2.700000 -0.092592\r\nv -0.176897 2.804400 0.029450\r\nv -0.176897 2.804400 -0.029450\r\nv -0.173255 3.141450 -0.090306\r\nv -0.173255 3.141450 0.090306\r\nv -0.170215 2.804400 0.057246\r\nv -0.170215 2.804400 -0.057246\r\nv -0.167751 2.597400 -0.499384\r\nv -0.167751 2.597400 0.499384\r\nv -0.167400 2.749050 0.000000\r\nv -0.167400 2.749050 0.000000\r\nv -0.166306 3.034800 -0.319082\r\nv -0.166306 3.034800 0.319082\r\nv -0.166221 3.081150 0.318907\r\nv -0.166221 3.081150 -0.318907\r\nv -0.165941 2.659200 -0.226113\r\nv -0.165941 2.659200 0.226113\r\nv -0.165245 2.749050 0.027480\r\nv -0.165245 2.749050 -0.027480\r\nv -0.162745 2.923200 -0.221585\r\nv -0.162745 2.923200 0.221585\r\nv -0.161856 2.700000 -0.118784\r\nv -0.161856 2.700000 0.118784\r\nv -0.161856 2.700000 0.118784\r\nv -0.161856 2.700000 -0.118784\r\nv -0.159496 2.804400 0.083047\r\nv -0.159496 2.804400 -0.083047\r\nv -0.159223 2.527200 -0.957901\r\nv -0.159223 2.527200 0.957901\r\nv -0.158995 2.749050 0.053428\r\nv -0.158995 2.749050 -0.053428\r\nv -0.157626 3.141450 -0.115787\r\nv -0.157626 3.141450 0.115787\r\nv -0.156274 0.018225 0.940158\r\nv -0.156274 0.018225 -0.940158\r\nv -0.156200 2.863350 -0.156200\r\nv -0.156200 2.863350 0.156200\r\nv -0.150793 2.981250 -0.289340\r\nv -0.150793 2.981250 0.289340\r\nv -0.148969 2.749050 0.077523\r\nv -0.148969 2.749050 -0.077523\r\nv -0.145078 2.804400 0.106513\r\nv -0.145078 2.804400 -0.106513\r\nv -0.143301 3.117600 -0.274928\r\nv -0.143301 3.117600 0.274928\r\nv -0.142000 2.700000 -0.142000\r\nv -0.142000 2.700000 0.142000\r\nv -0.142000 2.700000 0.142000\r\nv -0.142000 2.700000 -0.142000\r\nv -0.138348 3.141450 -0.138348\r\nv -0.138348 3.141450 0.138348\r\nv -0.135489 2.749050 0.099446\r\nv -0.135489 2.749050 -0.099446\r\nv -0.135366 2.550000 -0.814374\r\nv -0.135366 2.550000 0.814374\r\nv -0.130707 2.863350 -0.177989\r\nv -0.130707 2.863350 0.177989\r\nv -0.129351 2.659200 0.248621\r\nv -0.129351 2.659200 -0.248621\r\nv -0.127304 2.804400 0.127304\r\nv -0.127304 2.804400 -0.127304\r\nv -0.126920 2.923200 -0.243569\r\nv -0.126920 2.923200 0.243569\r\nv -0.124808 2.625600 -0.371546\r\nv -0.124808 2.625600 0.371546\r\nv -0.123875 0.002175 0.368768\r\nv -0.123875 0.002175 -0.368768\r\nv -0.118874 2.749050 0.118874\r\nv -0.118874 2.749050 -0.118874\r\nv -0.118784 2.700000 -0.161856\r\nv -0.118784 2.700000 0.161856\r\nv -0.118784 2.700000 0.161856\r\nv -0.118784 2.700000 -0.161856\r\nv -0.115787 3.141450 -0.157626\r\nv -0.115787 3.141450 0.157626\r\nv -0.115381 0.008400 0.694143\r\nv -0.115381 0.008400 -0.694143\r\nv -0.114676 3.034800 -0.340477\r\nv -0.114676 3.034800 0.340477\r\nv -0.114619 3.081150 -0.340289\r\nv -0.114619 3.081150 0.340289\r\nv -0.110524 2.572800 -0.664924\r\nv -0.110524 2.572800 0.664924\r\nv -0.106513 2.804400 -0.145078\r\nv -0.106513 2.804400 0.145078\r\nv -0.103976 2.981250 -0.308744\r\nv -0.103976 2.981250 0.308744\r\nv -0.101925 2.863350 -0.195658\r\nv -0.101925 2.863350 0.195658\r\nv -0.099446 2.749050 0.135489\r\nv -0.099446 2.749050 -0.135489\r\nv -0.098814 3.117600 -0.293360\r\nv -0.098814 3.117600 0.293360\r\nv -0.092592 2.700000 -0.177968\r\nv -0.092592 2.700000 0.177968\r\nv -0.092592 2.700000 -0.177968\r\nv -0.092592 2.700000 0.177968\r\nv -0.090306 3.141450 -0.173255\r\nv -0.090306 3.141450 0.173255\r\nv -0.089140 2.659200 -0.265363\r\nv -0.089140 2.659200 0.265363\r\nv -0.087511 2.923200 -0.259910\r\nv -0.087511 2.923200 0.259910\r\nv -0.086273 2.597400 -0.519028\r\nv -0.086273 2.597400 0.519028\r\nv -0.083047 2.804400 -0.159496\r\nv -0.083047 2.804400 0.159496\r\nv -0.077523 2.749050 -0.148969\r\nv -0.077523 2.749050 0.148969\r\nv -0.070270 2.863350 -0.208794\r\nv -0.070270 2.863350 0.208794\r\nv -0.064188 2.625600 -0.386161\r\nv -0.064188 2.625600 0.386161\r\nv -0.063808 2.700000 -0.189952\r\nv -0.063808 2.700000 0.189952\r\nv -0.063808 2.700000 -0.189952\r\nv -0.063808 2.700000 0.189952\r\nv -0.063708 0.002175 0.383274\r\nv -0.063708 0.002175 -0.383274\r\nv -0.062272 3.141450 -0.184870\r\nv -0.062272 3.141450 0.184870\r\nv -0.059016 3.034800 -0.353807\r\nv -0.059016 3.034800 0.353807\r\nv -0.058988 3.081150 -0.353610\r\nv -0.058988 3.081150 0.353610\r\nv -0.057246 2.804400 -0.170215\r\nv -0.057246 2.804400 0.170215\r\nv -0.053508 2.981250 -0.320834\r\nv -0.053508 2.981250 0.320834\r\nv -0.053428 2.749050 -0.158995\r\nv -0.053428 2.749050 0.158995\r\nv -0.050855 3.117600 -0.304843\r\nv -0.050855 3.117600 0.304843\r\nv -0.045844 2.659200 -0.275801\r\nv -0.045844 2.659200 0.275801\r\nv -0.045032 2.923200 -0.270092\r\nv -0.045032 2.923200 0.270092\r\nv -0.036157 2.863350 -0.216979\r\nv -0.036157 2.863350 0.216979\r\nv -0.032816 2.700000 -0.197424\r\nv -0.032816 2.700000 0.197424\r\nv -0.032816 2.700000 -0.197424\r\nv -0.032816 2.700000 0.197424\r\nv -0.032048 3.141450 -0.192107\r\nv -0.032048 3.141450 0.192107\r\nv -0.029450 2.804400 -0.176897\r\nv -0.029450 2.804400 0.176897\r\nv -0.027480 2.749050 -0.165245\r\nv -0.027480 2.749050 0.165245\r\nv -0.000000 0.260025 1.608000\r\nv -0.000000 1.929525 1.718250\r\nv -0.000000 2.085600 -1.648000\r\nv -0.000000 0.656400 -1.948000\r\nv -0.000000 0.771675 -1.986000\r\nv -0.000000 2.482687 1.382225\r\nv -0.000000 2.700000 -0.200000\r\nv -0.000000 0.127575 1.496475\r\nv -0.000000 2.474400 -1.204800\r\nv -0.000000 2.749050 -0.167400\r\nv -0.000000 0.018225 0.952425\r\nv -0.000000 0.046875 -1.284375\r\nv -0.000000 0.064800 1.382400\r\nv -0.000000 0.384375 1.750000\r\nv -0.000000 0.463200 1.824000\r\nv -0.000000 0.553725 -1.892000\r\nv -0.000000 1.037175 1.992750\r\nv -0.000000 1.178400 1.972000\r\nv -0.000000 1.323225 -1.939250\r\nv -0.000000 1.621875 -1.843750\r\nv -0.000000 1.774800 1.784000\r\nv -0.000000 2.400000 -1.300000\r\nv -0.000000 2.435437 -1.480325\r\nv -0.000000 2.435437 -1.385925\r\nv -0.000000 2.463000 -1.459600\r\nv -0.000000 2.463000 -1.380400\r\nv -0.000000 2.494500 -1.390200\r\nv -0.000000 2.502600 -1.100200\r\nv -0.000000 2.804400 -0.179200\r\nv -0.000000 2.863350 -0.219800\r\nv -0.000000 2.572800 -0.673600\r\nv -0.000000 0.105600 1.480800\r\nv -0.000000 0.177075 -1.514000\r\nv -0.000000 2.494500 -1.419800\r\nv -0.000000 2.527200 -0.970400\r\nv -0.000000 2.923200 -0.273600\r\nv -0.000000 3.117600 -0.308800\r\nv -0.000000 2.597400 -0.525800\r\nv -0.000000 2.700000 -0.200000\r\nv -0.000000 2.981250 -0.325000\r\nv -0.000000 3.141450 -0.194600\r\nv -0.000000 0.002175 0.388275\r\nv -0.000000 3.081150 -0.358200\r\nv 0.000000 0.000000 0.000000\r\nv 0.000000 0.002175 -0.388275\r\nv 0.000000 0.002175 0.388275\r\nv 0.000000 0.008400 -0.703200\r\nv 0.000000 0.008400 0.703200\r\nv 0.000000 0.018225 -0.952425\r\nv 0.000000 0.018225 0.952425\r\nv 0.000000 0.031200 -1.143600\r\nv 0.000000 0.031200 -1.143600\r\nv 0.000000 0.031200 1.143600\r\nv 0.000000 0.031200 1.143600\r\nv 0.000000 0.046875 -1.284375\r\nv 0.000000 0.046875 1.284375\r\nv 0.000000 0.064800 -1.382400\r\nv 0.000000 0.064800 1.382400\r\nv 0.000000 0.084525 -1.445325\r\nv 0.000000 0.084525 -1.445325\r\nv 0.000000 0.084525 1.445325\r\nv 0.000000 0.084525 1.445325\r\nv 0.000000 0.105600 -1.480800\r\nv 0.000000 0.105600 1.480800\r\nv 0.000000 0.127575 -1.496475\r\nv 0.000000 0.127575 1.496475\r\nv 0.000000 0.150000 -1.500000\r\nv 0.000000 0.150000 -1.500000\r\nv 0.000000 0.150000 1.500000\r\nv 0.000000 0.150000 1.500000\r\nv 0.000000 0.177075 -1.514000\r\nv 0.000000 0.177075 1.514000\r\nv 0.000000 0.213600 -1.552000\r\nv 0.000000 0.213600 -1.552000\r\nv 0.000000 0.213600 1.552000\r\nv 0.000000 0.213600 1.552000\r\nv 0.000000 0.260025 -1.608000\r\nv 0.000000 0.260025 1.608000\r\nv 0.000000 0.316800 -1.676000\r\nv 0.000000 0.316800 -1.676000\r\nv 0.000000 0.316800 1.676000\r\nv 0.000000 0.316800 1.676000\r\nv 0.000000 0.384375 -1.750000\r\nv 0.000000 0.384375 1.750000\r\nv 0.000000 0.463200 -1.824000\r\nv 0.000000 0.463200 1.824000\r\nv 0.000000 0.553725 -1.892000\r\nv 0.000000 0.553725 1.892000\r\nv 0.000000 0.656400 -1.948000\r\nv 0.000000 0.656400 1.948000\r\nv 0.000000 0.771675 -1.986000\r\nv 0.000000 0.771675 1.986000\r\nv 0.000000 0.900000 -2.000000\r\nv 0.000000 0.900000 -2.000000\r\nv 0.000000 0.900000 2.000000\r\nv 0.000000 0.900000 2.000000\r\nv 0.000000 1.037175 -1.992750\r\nv 0.000000 1.037175 1.992750\r\nv 0.000000 1.178400 -1.972000\r\nv 0.000000 1.178400 1.972000\r\nv 0.000000 1.323225 -1.939250\r\nv 0.000000 1.323225 1.939250\r\nv 0.000000 1.471200 -1.896000\r\nv 0.000000 1.471200 -1.896000\r\nv 0.000000 1.471200 1.896000\r\nv 0.000000 1.471200 1.896000\r\nv 0.000000 1.621875 -1.843750\r\nv 0.000000 1.621875 1.843750\r\nv 0.000000 1.774800 -1.784000\r\nv 0.000000 1.774800 1.784000\r\nv 0.000000 1.929525 -1.718250\r\nv 0.000000 1.929525 1.718250\r\nv 0.000000 2.085600 -1.648000\r\nv 0.000000 2.085600 1.648000\r\nv 0.000000 2.242575 -1.574750\r\nv 0.000000 2.242575 -1.574750\r\nv 0.000000 2.242575 1.574750\r\nv 0.000000 2.242575 1.574750\r\nv 0.000000 2.400000 -1.500000\r\nv 0.000000 2.400000 -1.500000\r\nv 0.000000 2.400000 -1.400000\r\nv 0.000000 2.400000 -1.400000\r\nv 0.000000 2.400000 -1.300000\r\nv 0.000000 2.400000 1.300000\r\nv 0.000000 2.400000 1.400000\r\nv 0.000000 2.400000 1.400000\r\nv 0.000000 2.400000 1.500000\r\nv 0.000000 2.400000 1.500000\r\nv 0.000000 2.435437 -1.480325\r\nv 0.000000 2.435437 -1.385925\r\nv 0.000000 2.435437 1.385925\r\nv 0.000000 2.435437 1.480325\r\nv 0.000000 2.440800 -1.274600\r\nv 0.000000 2.440800 -1.274600\r\nv 0.000000 2.440800 1.274600\r\nv 0.000000 2.440800 1.274600\r\nv 0.000000 2.463000 -1.459600\r\nv 0.000000 2.463000 -1.380400\r\nv 0.000000 2.463000 1.380400\r\nv 0.000000 2.463000 1.459600\r\nv 0.000000 2.474400 -1.204800\r\nv 0.000000 2.474400 1.204800\r\nv 0.000000 2.482687 -1.439025\r\nv 0.000000 2.482687 -1.382225\r\nv 0.000000 2.482687 1.382225\r\nv 0.000000 2.482687 1.439025\r\nv 0.000000 2.494500 -1.419800\r\nv 0.000000 2.494500 -1.390200\r\nv 0.000000 2.494500 1.390200\r\nv 0.000000 2.494500 1.419800\r\nv 0.000000 2.498438 -1.403125\r\nv 0.000000 2.498438 -1.403125\r\nv 0.000000 2.498438 1.403125\r\nv 0.000000 2.498438 1.403125\r\nv 0.000000 2.502600 -1.100200\r\nv 0.000000 2.502600 1.100200\r\nv 0.000000 2.527200 -0.970400\r\nv 0.000000 2.527200 0.970400\r\nv 0.000000 2.550000 -0.825000\r\nv 0.000000 2.550000 -0.825000\r\nv 0.000000 2.550000 0.825000\r\nv 0.000000 2.550000 0.825000\r\nv 0.000000 2.572800 -0.673600\r\nv 0.000000 2.572800 0.673600\r\nv 0.000000 2.597400 -0.525800\r\nv 0.000000 2.597400 0.525800\r\nv 0.000000 2.625600 -0.391200\r\nv 0.000000 2.625600 -0.391200\r\nv 0.000000 2.625600 0.391200\r\nv 0.000000 2.625600 0.391200\r\nv 0.000000 2.659200 -0.279400\r\nv 0.000000 2.659200 0.279400\r\nv 0.000000 2.700000 -0.200000\r\nv 0.000000 2.700000 -0.200000\r\nv 0.000000 2.700000 0.200000\r\nv 0.000000 2.700000 0.200000\r\nv 0.000000 2.749050 -0.167400\r\nv 0.000000 2.749050 0.167400\r\nv 0.000000 2.804400 -0.179200\r\nv 0.000000 2.804400 0.179200\r\nv 0.000000 2.863350 -0.219800\r\nv 0.000000 2.863350 0.219800\r\nv 0.000000 2.923200 -0.273600\r\nv 0.000000 2.923200 0.273600\r\nv 0.000000 2.981250 -0.325000\r\nv 0.000000 2.981250 0.325000\r\nv 0.000000 3.034800 -0.358400\r\nv 0.000000 3.034800 -0.358400\r\nv 0.000000 3.034800 0.358400\r\nv 0.000000 3.034800 0.358400\r\nv 0.000000 3.081150 -0.358200\r\nv 0.000000 3.081150 0.358200\r\nv 0.000000 3.117600 -0.308800\r\nv 0.000000 3.117600 0.308800\r\nv 0.000000 3.141450 -0.194600\r\nv 0.000000 3.141450 0.194600\r\nv 0.000000 3.150000 0.000000\r\nv 0.000000 0.002175 -0.388275\r\nv 0.000000 3.081150 0.358200\r\nv 0.000000 2.597400 0.525800\r\nv 0.000000 2.700000 0.200000\r\nv 0.000000 2.981250 0.325000\r\nv 0.000000 3.141450 0.194600\r\nv 0.000000 3.117600 0.308800\r\nv 0.000000 0.105600 -1.480800\r\nv 0.000000 0.177075 1.514000\r\nv 0.000000 2.494500 1.419800\r\nv 0.000000 2.527200 0.970400\r\nv 0.000000 2.923200 0.273600\r\nv 0.000000 2.572800 0.673600\r\nv 0.000000 2.863350 0.219800\r\nv 0.000000 0.018225 -0.952425\r\nv 0.000000 0.046875 1.284375\r\nv 0.000000 0.064800 -1.382400\r\nv 0.000000 0.384375 -1.750000\r\nv 0.000000 0.463200 -1.824000\r\nv 0.000000 0.553725 1.892000\r\nv 0.000000 1.037175 -1.992750\r\nv 0.000000 1.178400 -1.972000\r\nv 0.000000 1.323225 1.939250\r\nv 0.000000 1.621875 1.843750\r\nv 0.000000 1.774800 -1.784000\r\nv 0.000000 2.400000 1.300000\r\nv 0.000000 2.435437 1.385925\r\nv 0.000000 2.435437 1.480325\r\nv 0.000000 2.463000 1.380400\r\nv 0.000000 2.463000 1.459600\r\nv 0.000000 2.494500 1.390200\r\nv 0.000000 2.502600 1.100200\r\nv 0.000000 2.804400 0.179200\r\nv 0.000000 2.749050 0.167400\r\nv 0.000000 0.127575 -1.496475\r\nv 0.000000 2.474400 1.204800\r\nv 0.000000 0.656400 1.948000\r\nv 0.000000 0.771675 1.986000\r\nv 0.000000 2.482687 -1.382225\r\nv 0.000000 2.700000 0.200000\r\nv 0.000000 0.260025 -1.608000\r\nv 0.000000 1.929525 -1.718250\r\nv 0.000000 2.085600 1.648000\r\nv 0.027480 2.749050 -0.165245\r\nv 0.027480 2.749050 0.165245\r\nv 0.029450 2.804400 -0.176897\r\nv 0.029450 2.804400 0.176897\r\nv 0.032048 3.141450 -0.192107\r\nv 0.032048 3.141450 0.192107\r\nv 0.032816 2.700000 -0.197424\r\nv 0.032816 2.700000 0.197424\r\nv 0.032816 2.700000 -0.197424\r\nv 0.032816 2.700000 0.197424\r\nv 0.036157 2.863350 -0.216979\r\nv 0.036157 2.863350 0.216979\r\nv 0.045032 2.923200 -0.270092\r\nv 0.045032 2.923200 0.270092\r\nv 0.045844 2.659200 -0.275801\r\nv 0.045844 2.659200 0.275801\r\nv 0.050855 3.117600 -0.304843\r\nv 0.050855 3.117600 0.304843\r\nv 0.053428 2.749050 -0.158995\r\nv 0.053428 2.749050 0.158995\r\nv 0.053508 2.981250 -0.320834\r\nv 0.053508 2.981250 0.320834\r\nv 0.057246 2.804400 -0.170215\r\nv 0.057246 2.804400 0.170215\r\nv 0.058988 3.081150 -0.353610\r\nv 0.058988 3.081150 0.353610\r\nv 0.059016 3.034800 -0.353807\r\nv 0.059016 3.034800 0.353807\r\nv 0.062272 3.141450 -0.184870\r\nv 0.062272 3.141450 0.184870\r\nv 0.063708 0.002175 0.383274\r\nv 0.063708 0.002175 -0.383274\r\nv 0.063808 2.700000 -0.189952\r\nv 0.063808 2.700000 0.189952\r\nv 0.063808 2.700000 -0.189952\r\nv 0.063808 2.700000 0.189952\r\nv 0.064188 2.625600 -0.386161\r\nv 0.064188 2.625600 0.386161\r\nv 0.070270 2.863350 -0.208794\r\nv 0.070270 2.863350 0.208794\r\nv 0.077523 2.749050 -0.148969\r\nv 0.077523 2.749050 0.148969\r\nv 0.083047 2.804400 -0.159496\r\nv 0.083047 2.804400 0.159496\r\nv 0.086273 2.597400 -0.519028\r\nv 0.086273 2.597400 0.519028\r\nv 0.087511 2.923200 -0.259910\r\nv 0.087511 2.923200 0.259910\r\nv 0.089140 2.659200 -0.265363\r\nv 0.089140 2.659200 0.265363\r\nv 0.090306 3.141450 -0.173255\r\nv 0.090306 3.141450 0.173255\r\nv 0.092592 2.700000 -0.177968\r\nv 0.092592 2.700000 0.177968\r\nv 0.092592 2.700000 -0.177968\r\nv 0.092592 2.700000 0.177968\r\nv 0.098814 3.117600 -0.293360\r\nv 0.098814 3.117600 0.293360\r\nv 0.099446 2.749050 0.135489\r\nv 0.099446 2.749050 -0.135489\r\nv 0.101925 2.863350 -0.195658\r\nv 0.101925 2.863350 0.195658\r\nv 0.103976 2.981250 -0.308744\r\nv 0.103976 2.981250 0.308744\r\nv 0.106513 2.804400 -0.145078\r\nv 0.106513 2.804400 0.145078\r\nv 0.110524 2.572800 -0.664924\r\nv 0.110524 2.572800 0.664924\r\nv 0.114619 3.081150 -0.340289\r\nv 0.114619 3.081150 0.340289\r\nv 0.114676 3.034800 -0.340477\r\nv 0.114676 3.034800 0.340477\r\nv 0.115381 0.008400 0.694143\r\nv 0.115381 0.008400 -0.694143\r\nv 0.115787 3.141450 -0.157626\r\nv 0.115787 3.141450 0.157626\r\nv 0.118784 2.700000 0.161856\r\nv 0.118784 2.700000 -0.161856\r\nv 0.118784 2.700000 -0.161856\r\nv 0.118784 2.700000 0.161856\r\nv 0.118874 2.749050 0.118874\r\nv 0.118874 2.749050 -0.118874\r\nv 0.123875 0.002175 0.368768\r\nv 0.123875 0.002175 -0.368768\r\nv 0.124808 2.625600 -0.371546\r\nv 0.124808 2.625600 0.371546\r\nv 0.126920 2.923200 -0.243569\r\nv 0.126920 2.923200 0.243569\r\nv 0.127304 2.804400 0.127304\r\nv 0.127304 2.804400 -0.127304\r\nv 0.129351 2.659200 0.248621\r\nv 0.129351 2.659200 -0.248621\r\nv 0.130707 2.863350 -0.177989\r\nv 0.130707 2.863350 0.177989\r\nv 0.135366 2.550000 -0.814374\r\nv 0.135366 2.550000 0.814374\r\nv 0.135489 2.749050 0.099446\r\nv 0.135489 2.749050 -0.099446\r\nv 0.138348 3.141450 -0.138348\r\nv 0.138348 3.141450 0.138348\r\nv 0.142000 2.700000 0.142000\r\nv 0.142000 2.700000 -0.142000\r\nv 0.142000 2.700000 -0.142000\r\nv 0.142000 2.700000 0.142000\r\nv 0.143301 3.117600 -0.274928\r\nv 0.143301 3.117600 0.274928\r\nv 0.145078 2.804400 0.106513\r\nv 0.145078 2.804400 -0.106513\r\nv 0.148969 2.749050 0.077523\r\nv 0.148969 2.749050 -0.077523\r\nv 0.150793 2.981250 -0.289340\r\nv 0.150793 2.981250 0.289340\r\nv 0.156200 2.863350 -0.156200\r\nv 0.156200 2.863350 0.156200\r\nv 0.156274 0.018225 0.940158\r\nv 0.156274 0.018225 -0.940158\r\nv 0.157626 3.141450 -0.115787\r\nv 0.157626 3.141450 0.115787\r\nv 0.158995 2.749050 0.053428\r\nv 0.158995 2.749050 -0.053428\r\nv 0.159223 2.527200 -0.957901\r\nv 0.159223 2.527200 0.957901\r\nv 0.159496 2.804400 0.083047\r\nv 0.159496 2.804400 -0.083047\r\nv 0.161856 2.700000 0.118784\r\nv 0.161856 2.700000 -0.118784\r\nv 0.161856 2.700000 -0.118784\r\nv 0.161856 2.700000 0.118784\r\nv 0.162745 2.923200 -0.221585\r\nv 0.162745 2.923200 0.221585\r\nv 0.165245 2.749050 0.027480\r\nv 0.165245 2.749050 -0.027480\r\nv 0.165941 2.659200 -0.226113\r\nv 0.165941 2.659200 0.226113\r\nv 0.166221 3.081150 0.318907\r\nv 0.166221 3.081150 -0.318907\r\nv 0.166306 3.034800 -0.319082\r\nv 0.166306 3.034800 0.319082\r\nv 0.167400 2.749050 -0.000000\r\nv 0.167400 2.749050 0.000000\r\nv 0.167751 2.597400 -0.499384\r\nv 0.167751 2.597400 0.499384\r\nv 0.170215 2.804400 0.057246\r\nv 0.170215 2.804400 -0.057246\r\nv 0.173255 3.141450 -0.090306\r\nv 0.173255 3.141450 0.090306\r\nv 0.176897 2.804400 0.029450\r\nv 0.176897 2.804400 -0.029450\r\nv 0.177968 2.700000 0.092592\r\nv 0.177968 2.700000 -0.092592\r\nv 0.177968 2.700000 -0.092592\r\nv 0.177968 2.700000 0.092592\r\nv 0.177989 2.863350 -0.130707\r\nv 0.177989 2.863350 0.130707\r\nv 0.179200 2.804400 -0.000000\r\nv 0.179200 2.804400 0.000000\r\nv 0.179756 0.002175 -0.345503\r\nv 0.179756 0.002175 0.345503\r\nv 0.180521 2.502600 -1.086029\r\nv 0.180521 2.502600 1.086029\r\nv 0.181110 2.625600 0.348105\r\nv 0.181110 2.625600 -0.348105\r\nv 0.183734 3.117600 -0.250127\r\nv 0.183734 3.117600 0.250127\r\nv 0.184870 3.141450 -0.062272\r\nv 0.184870 3.141450 0.062272\r\nv 0.187642 0.031200 1.128870\r\nv 0.187642 0.031200 -1.128870\r\nv 0.189952 2.700000 0.063808\r\nv 0.189952 2.700000 -0.063808\r\nv 0.189952 2.700000 -0.063808\r\nv 0.189952 2.700000 0.063808\r\nv 0.192107 3.141450 -0.032048\r\nv 0.192107 3.141450 0.032048\r\nv 0.193348 2.981250 -0.263232\r\nv 0.193348 2.981250 0.263232\r\nv 0.194472 2.923200 -0.194472\r\nv 0.194472 2.923200 0.194472\r\nv 0.194600 3.141450 0.000000\r\nv 0.194600 3.141450 -0.000000\r\nv 0.195658 2.863350 -0.101925\r\nv 0.195658 2.863350 0.101925\r\nv 0.197424 2.700000 0.032816\r\nv 0.197424 2.700000 -0.032816\r\nv 0.197424 2.700000 -0.032816\r\nv 0.197424 2.700000 0.032816\r\nv 0.197684 2.474400 -1.189282\r\nv 0.197684 2.474400 1.189282\r\nv 0.198374 2.659200 -0.198374\r\nv 0.198374 2.659200 0.198374\r\nv 0.200000 2.700000 -0.000000\r\nv 0.200000 2.700000 0.000000\r\nv 0.200000 2.700000 0.000000\r\nv 0.200000 2.700000 -0.000000\r\nv 0.208794 2.863350 0.070270\r\nv 0.208794 2.863350 -0.070270\r\nv 0.209136 2.440800 -1.258183\r\nv 0.209136 2.440800 1.258183\r\nv 0.210740 0.046875 -1.267832\r\nv 0.210740 0.046875 1.267832\r\nv 0.213123 3.081150 -0.290138\r\nv 0.213123 3.081150 0.290138\r\nv 0.213234 3.034800 -0.290295\r\nv 0.213234 3.034800 0.290295\r\nv 0.213304 2.400000 -1.283256\r\nv 0.213304 2.400000 1.283256\r\nv 0.214905 2.572800 -0.639758\r\nv 0.214905 2.572800 0.639758\r\nv 0.216979 2.863350 0.036157\r\nv 0.216979 2.863350 -0.036157\r\nv 0.219536 3.117600 -0.219536\r\nv 0.219536 3.117600 0.219536\r\nv 0.219800 2.863350 -0.000000\r\nv 0.219800 2.863350 0.000000\r\nv 0.221585 2.923200 -0.162745\r\nv 0.221585 2.923200 0.162745\r\nv 0.224349 0.008400 0.667871\r\nv 0.224349 0.008400 -0.667871\r\nv 0.226113 2.659200 -0.165941\r\nv 0.226113 2.659200 0.165941\r\nv 0.226496 2.463000 -1.362620\r\nv 0.226496 2.463000 1.362620\r\nv 0.226795 2.482687 1.364422\r\nv 0.226795 2.482687 -1.364422\r\nv 0.226824 0.064800 1.364595\r\nv 0.226824 0.064800 -1.364595\r\nv 0.227403 2.435437 -1.368074\r\nv 0.227403 2.435437 1.368074\r\nv 0.228104 2.494500 -1.372294\r\nv 0.228104 2.494500 1.372294\r\nv 0.229712 2.400000 -1.381968\r\nv 0.229712 2.400000 1.381968\r\nv 0.230225 2.498438 -1.385053\r\nv 0.230225 2.498438 1.385053\r\nv 0.230604 0.002175 -0.314223\r\nv 0.230604 0.002175 0.314223\r\nv 0.231031 2.981250 -0.231031\r\nv 0.231031 2.981250 0.231031\r\nv 0.232342 2.625600 -0.316590\r\nv 0.232342 2.625600 0.316590\r\nv 0.232961 2.494500 -1.401513\r\nv 0.232961 2.494500 1.401513\r\nv 0.236115 2.482687 -1.420490\r\nv 0.236115 2.482687 1.420490\r\nv 0.237149 0.084525 1.426709\r\nv 0.237149 0.084525 -1.426709\r\nv 0.239491 2.463000 -1.440800\r\nv 0.239491 2.463000 1.440800\r\nv 0.242892 2.435437 -1.461258\r\nv 0.242892 2.435437 1.461258\r\nv 0.242970 0.105600 1.461727\r\nv 0.242970 0.105600 -1.461727\r\nv 0.243424 2.597400 0.467878\r\nv 0.243424 2.597400 -0.467878\r\nv 0.243569 2.923200 -0.126920\r\nv 0.243569 2.923200 0.126920\r\nv 0.245542 0.127575 1.477200\r\nv 0.245542 0.127575 -1.477200\r\nv 0.246120 0.150000 -1.480680\r\nv 0.246120 2.400000 -1.480680\r\nv 0.246120 0.150000 1.480680\r\nv 0.246120 0.150000 1.480680\r\nv 0.246120 2.400000 1.480680\r\nv 0.246120 0.150000 -1.480680\r\nv 0.248417 0.177075 -1.494500\r\nv 0.248417 0.177075 1.494500\r\nv 0.248621 2.659200 0.129351\r\nv 0.248621 2.659200 -0.129351\r\nv 0.250127 3.117600 -0.183734\r\nv 0.250127 3.117600 0.183734\r\nv 0.254652 0.213600 -1.532010\r\nv 0.254652 0.213600 1.532010\r\nv 0.254653 3.081150 -0.254653\r\nv 0.254653 3.081150 0.254653\r\nv 0.254788 3.034800 -0.254788\r\nv 0.254788 3.034800 0.254788\r\nv 0.258385 2.242575 -1.554467\r\nv 0.258385 2.242575 1.554467\r\nv 0.259910 2.923200 -0.087511\r\nv 0.259910 2.923200 0.087511\r\nv 0.263208 2.550000 -0.783552\r\nv 0.263208 2.550000 0.783552\r\nv 0.263232 2.981250 -0.193348\r\nv 0.263232 2.981250 0.193348\r\nv 0.263841 0.260025 1.587289\r\nv 0.263841 0.260025 -1.587289\r\nv 0.265363 2.659200 -0.089140\r\nv 0.265363 2.659200 0.089140\r\nv 0.270092 2.923200 -0.045032\r\nv 0.270092 2.923200 0.045032\r\nv 0.270404 2.085600 -1.626774\r\nv 0.270404 2.085600 1.626774\r\nv 0.273600 2.923200 -0.000000\r\nv 0.273600 2.923200 0.000000\r\nv 0.274928 3.117600 -0.143301\r\nv 0.274928 3.117600 0.143301\r\nv 0.274998 0.316800 -1.654413\r\nv 0.274998 0.316800 1.654413\r\nv 0.275675 0.002175 -0.275675\r\nv 0.275675 0.002175 0.275675\r\nv 0.275801 2.659200 -0.045844\r\nv 0.275801 2.659200 0.045844\r\nv 0.277752 2.625600 -0.277752\r\nv 0.277752 2.625600 0.277752\r\nv 0.279400 2.659200 0.000000\r\nv 0.281930 1.929525 1.696119\r\nv 0.281930 1.929525 -1.696119\r\nv 0.287140 0.384375 -1.727460\r\nv 0.287140 0.384375 1.727460\r\nv 0.289340 2.981250 -0.150793\r\nv 0.289340 2.981250 0.150793\r\nv 0.290138 3.081150 -0.213123\r\nv 0.290138 3.081150 0.213123\r\nv 0.290295 3.034800 -0.213234\r\nv 0.290295 3.034800 0.213234\r\nv 0.292719 1.774800 -1.761022\r\nv 0.292719 1.774800 1.761022\r\nv 0.293360 3.117600 -0.098814\r\nv 0.293360 3.117600 0.098814\r\nv 0.299282 0.463200 -1.800507\r\nv 0.299282 0.463200 1.800507\r\nv 0.302522 1.621875 -1.820003\r\nv 0.302523 1.621875 1.820003\r\nv 0.303862 0.018225 0.904575\r\nv 0.303862 0.018225 -0.904575\r\nv 0.304843 3.117600 -0.050855\r\nv 0.304843 3.117600 0.050855\r\nv 0.308744 2.981250 -0.103976\r\nv 0.308744 2.981250 0.103976\r\nv 0.308800 3.117600 0.000000\r\nv 0.308800 3.117600 -0.000000\r\nv 0.309596 2.527200 -0.921647\r\nv 0.309596 2.527200 0.921647\r\nv 0.310439 0.553725 -1.867631\r\nv 0.310439 0.553725 1.867631\r\nv 0.311096 1.471200 -1.871580\r\nv 0.311096 1.471200 1.871580\r\nv 0.311850 2.572800 -0.599396\r\nv 0.311850 2.572800 0.599396\r\nv 0.312283 2.597400 -0.425519\r\nv 0.312283 2.597400 0.425519\r\nv 0.314223 0.002175 -0.230604\r\nv 0.314223 0.002175 0.230604\r\nv 0.316590 2.625600 -0.232342\r\nv 0.316590 2.625600 0.232342\r\nv 0.318192 1.323225 -1.914272\r\nv 0.318192 1.323225 1.914272\r\nv 0.318907 3.081150 -0.166221\r\nv 0.318907 3.081150 0.166221\r\nv 0.319082 3.034800 -0.166306\r\nv 0.319082 3.034800 0.166306\r\nv 0.319628 0.656400 -1.922910\r\nv 0.319628 0.656400 1.922910\r\nv 0.320834 2.981250 -0.053508\r\nv 0.320834 2.981250 0.053508\r\nv 0.323566 1.178400 -1.946601\r\nv 0.323566 1.178400 1.946601\r\nv 0.325000 2.981250 0.000000\r\nv 0.325000 2.981250 -0.000000\r\nv 0.325553 0.008400 -0.625735\r\nv 0.325553 0.008400 0.625735\r\nv 0.325863 0.771675 -1.960420\r\nv 0.325863 0.771675 1.960420\r\nv 0.326970 1.037175 -1.967083\r\nv 0.326970 1.037175 1.967083\r\nv 0.328160 0.900000 -1.974240\r\nv 0.328160 0.900000 -1.974240\r\nv 0.328160 0.900000 1.974240\r\nv 0.340289 3.081150 -0.114619\r\nv 0.340289 3.081150 0.114619\r\nv 0.340477 3.034800 -0.114676\r\nv 0.340477 3.034800 0.114676\r\nv 0.345503 0.002175 -0.179756\r\nv 0.345503 0.002175 0.179756\r\nv 0.348105 2.625600 -0.181110\r\nv 0.348105 2.625600 0.181110\r\nv 0.351008 2.502600 -1.044926\r\nv 0.351008 2.502600 1.044926\r\nv 0.353610 3.081150 -0.058988\r\nv 0.353610 3.081150 0.058988\r\nv 0.353807 3.034800 -0.059016\r\nv 0.353807 3.034800 0.059016\r\nv 0.358200 3.081150 -0.000000\r\nv 0.358200 3.081150 0.000000\r\nv 0.358400 3.034800 0.000000\r\nv 0.358400 3.034800 0.000000\r\nv 0.364854 0.031200 1.086146\r\nv 0.364854 0.031200 -1.086146\r\nv 0.368768 0.002175 -0.123875\r\nv 0.368768 0.002175 0.123875\r\nv 0.371546 2.625600 -0.124808\r\nv 0.371546 2.625600 0.124808\r\nv 0.373318 2.597400 -0.373318\r\nv 0.373318 2.597400 0.373318\r\nv 0.381942 2.550000 -0.734118\r\nv 0.381942 2.550000 0.734118\r\nv 0.383274 0.002175 -0.063708\r\nv 0.383274 0.002175 0.063708\r\nv 0.384379 2.474400 -1.144271\r\nv 0.384379 2.474400 1.144271\r\nv 0.386161 2.625600 -0.064188\r\nv 0.386161 2.625600 0.064188\r\nv 0.388275 0.002175 0.000000\r\nv 0.388275 0.002175 0.000000\r\nv 0.391200 2.625600 0.000000\r\nv 0.391200 2.625600 0.000000\r\nv 0.400065 2.572800 -0.545131\r\nv 0.400065 2.572800 0.545131\r\nv 0.406648 2.440800 -1.210564\r\nv 0.406648 2.440800 1.210564\r\nv 0.409767 0.046875 1.219848\r\nv 0.409767 0.046875 -1.219848\r\nv 0.414752 2.400000 -1.234688\r\nv 0.414752 2.400000 1.234688\r\nv 0.417645 0.008400 -0.569086\r\nv 0.417645 0.008400 0.569086\r\nv 0.425519 2.597400 0.312283\r\nv 0.425519 2.597400 -0.312283\r\nv 0.440403 2.463000 -1.311049\r\nv 0.440403 2.463000 1.311049\r\nv 0.440935 0.018225 0.847506\r\nv 0.440935 0.018225 -0.847506\r\nv 0.440985 2.482687 -1.312782\r\nv 0.440985 2.482687 1.312782\r\nv 0.441041 0.064800 1.312948\r\nv 0.441041 0.064800 -1.312948\r\nv 0.442166 2.435437 -1.316296\r\nv 0.442166 2.435437 1.316296\r\nv 0.443529 2.494500 -1.320356\r\nv 0.443529 2.494500 1.320356\r\nv 0.446656 2.400000 -1.329664\r\nv 0.446656 2.400000 1.329664\r\nv 0.447653 2.498438 -1.332632\r\nv 0.447653 2.498438 1.332632\r\nv 0.449256 2.527200 -0.863501\r\nv 0.449256 2.527200 0.863501\r\nv 0.452973 2.494500 -1.348469\r\nv 0.452973 2.494500 1.348469\r\nv 0.459107 2.482687 -1.366728\r\nv 0.459107 2.482687 1.366728\r\nv 0.461116 0.084525 1.372712\r\nv 0.461116 0.084525 -1.372712\r\nv 0.465671 2.463000 -1.386270\r\nv 0.465671 2.463000 1.386270\r\nv 0.467878 2.597400 -0.243424\r\nv 0.467878 2.597400 0.243424\r\nv 0.472283 2.435437 -1.405953\r\nv 0.472283 2.435437 1.405953\r\nv 0.472434 0.105600 1.406405\r\nv 0.472434 0.105600 -1.406405\r\nv 0.477435 0.127575 1.421292\r\nv 0.477435 0.127575 -1.421292\r\nv 0.478256 2.572800 -0.478256\r\nv 0.478256 2.572800 0.478256\r\nv 0.478560 0.150000 -1.424640\r\nv 0.478560 2.400000 -1.424640\r\nv 0.478560 0.150000 1.424640\r\nv 0.478560 0.150000 1.424640\r\nv 0.478560 0.150000 -1.424640\r\nv 0.478560 2.400000 1.424640\r\nv 0.483027 0.177075 -1.437937\r\nv 0.483027 0.177075 1.437937\r\nv 0.489984 2.550000 -0.667656\r\nv 0.489984 2.550000 0.667656\r\nv 0.495150 0.213600 -1.474028\r\nv 0.495150 0.213600 1.474028\r\nv 0.499272 0.008400 -0.499272\r\nv 0.499272 0.008400 0.499272\r\nv 0.499384 2.597400 -0.167751\r\nv 0.499384 2.597400 0.167751\r\nv 0.502408 2.242575 -1.495635\r\nv 0.502408 2.242575 1.495635\r\nv 0.509349 2.502600 0.979002\r\nv 0.509349 2.502600 -0.979002\r\nv 0.513016 0.260025 -1.527214\r\nv 0.513016 0.260025 1.527214\r\nv 0.519028 2.597400 0.086273\r\nv 0.519028 2.597400 -0.086273\r\nv 0.525778 2.085600 -1.565204\r\nv 0.525778 2.085600 1.565204\r\nv 0.525800 2.597400 -0.000000\r\nv 0.525800 2.597400 0.000000\r\nv 0.529441 0.031200 -1.017621\r\nv 0.529441 0.031200 1.017621\r\nv 0.534711 0.316800 -1.591798\r\nv 0.534711 0.316800 1.591798\r\nv 0.545131 2.572800 -0.400065\r\nv 0.545131 2.572800 0.400065\r\nv 0.548190 1.929525 -1.631925\r\nv 0.548190 1.929525 1.631925\r\nv 0.557774 2.474400 -1.072079\r\nv 0.557774 2.474400 1.072079\r\nv 0.558320 0.384375 -1.662080\r\nv 0.558320 0.384375 1.662080\r\nv 0.565664 0.018225 0.770779\r\nv 0.565664 0.018225 -0.770779\r\nv 0.569086 0.008400 -0.417645\r\nv 0.569086 0.008400 0.417645\r\nv 0.569167 1.774800 -1.694372\r\nv 0.569167 1.774800 1.694372\r\nv 0.576340 2.527200 -0.785325\r\nv 0.576340 2.527200 0.785325\r\nv 0.581929 0.463200 -1.732362\r\nv 0.581929 0.463200 1.732362\r\nv 0.585750 2.550000 -0.585750\r\nv 0.585750 2.550000 0.585750\r\nv 0.588230 1.621875 -1.751120\r\nv 0.588230 1.621875 1.751120\r\nv 0.590089 2.440800 1.134190\r\nv 0.590089 2.440800 -1.134190\r\nv 0.594614 0.046875 -1.142888\r\nv 0.594614 0.046875 1.142888\r\nv 0.599396 2.572800 -0.311850\r\nv 0.599396 2.572800 0.311850\r\nv 0.601848 2.400000 -1.156792\r\nv 0.601848 2.400000 1.156792\r\nv 0.603624 0.553725 -1.796946\r\nv 0.603624 0.553725 1.796946\r\nv 0.604900 1.471200 -1.800745\r\nv 0.604900 1.471200 1.800745\r\nv 0.618698 1.323225 -1.841822\r\nv 0.618698 1.323225 1.841822\r\nv 0.621490 0.656400 -1.850132\r\nv 0.621490 0.656400 1.850132\r\nv 0.625735 0.008400 0.325553\r\nv 0.625735 0.008400 -0.325553\r\nv 0.629147 1.178400 -1.872927\r\nv 0.629147 1.178400 1.872927\r\nv 0.633613 0.771675 -1.886223\r\nv 0.633613 0.771675 1.886223\r\nv 0.635767 1.037175 -1.892634\r\nv 0.635767 1.037175 1.892634\r\nv 0.638080 0.900000 -1.899520\r\nv 0.638080 0.900000 -1.899520\r\nv 0.638080 0.900000 1.899520\r\nv 0.638080 0.900000 1.899520\r\nv 0.639070 2.463000 -1.228335\r\nv 0.639070 2.463000 1.228335\r\nv 0.639758 2.572800 -0.214905\r\nv 0.639758 2.572800 0.214905\r\nv 0.639915 2.482687 1.229959\r\nv 0.639915 2.482687 -1.229959\r\nv 0.639996 0.064800 -1.230115\r\nv 0.639996 0.064800 1.230115\r\nv 0.641628 2.435437 -1.233252\r\nv 0.641628 2.435437 1.233252\r\nv 0.643607 2.494500 -1.237056\r\nv 0.643607 2.494500 1.237056\r\nv 0.648144 2.400000 -1.245776\r\nv 0.648144 2.400000 1.245776\r\nv 0.649591 2.498438 -1.248557\r\nv 0.649591 2.498438 1.248557\r\nv 0.653431 2.502600 -0.890370\r\nv 0.653431 2.502600 0.890370\r\nv 0.657311 2.494500 -1.263395\r\nv 0.657311 2.494500 1.263395\r\nv 0.664924 2.572800 -0.110524\r\nv 0.664924 2.572800 0.110524\r\nv 0.666211 2.482687 1.280502\r\nv 0.666211 2.482687 -1.280502\r\nv 0.667656 2.550000 -0.489984\r\nv 0.667656 2.550000 0.489984\r\nv 0.667871 0.008400 -0.224349\r\nv 0.667871 0.008400 0.224349\r\nv 0.669128 0.084525 -1.286108\r\nv 0.669128 0.084525 1.286108\r\nv 0.673600 2.572800 0.000000\r\nv 0.673600 2.572800 -0.000000\r\nv 0.675736 2.463000 -1.298810\r\nv 0.675736 2.463000 1.298810\r\nv 0.676222 0.018225 0.676222\r\nv 0.676222 0.018225 -0.676222\r\nv 0.679207 0.031200 -0.925493\r\nv 0.679207 0.031200 0.925493\r\nv 0.685331 2.435437 -1.317252\r\nv 0.685331 2.435437 1.317252\r\nv 0.685551 0.105600 -1.317675\r\nv 0.685551 0.105600 1.317675\r\nv 0.688984 2.527200 -0.688984\r\nv 0.688984 2.527200 0.688984\r\nv 0.692808 0.127575 1.331623\r\nv 0.692808 0.127575 -1.331623\r\nv 0.694143 0.008400 -0.115381\r\nv 0.694143 0.008400 0.115381\r\nv 0.694440 0.150000 1.334760\r\nv 0.694440 0.150000 -1.334760\r\nv 0.694440 2.400000 1.334760\r\nv 0.694440 0.150000 -1.334760\r\nv 0.694440 0.150000 1.334760\r\nv 0.694440 2.400000 -1.334760\r\nv 0.700921 0.177075 1.347218\r\nv 0.700921 0.177075 -1.347218\r\nv 0.703200 0.008400 0.000000\r\nv 0.715555 2.474400 -0.975021\r\nv 0.715555 2.474400 0.975021\r\nv 0.718514 0.213600 1.381032\r\nv 0.718514 0.213600 -1.381032\r\nv 0.729046 2.242575 -1.401276\r\nv 0.729046 2.242575 1.401276\r\nv 0.734118 2.550000 -0.381942\r\nv 0.734118 2.550000 0.381942\r\nv 0.744440 0.260025 1.430863\r\nv 0.744440 0.260025 -1.430863\r\nv 0.757010 2.440800 1.031508\r\nv 0.757010 2.440800 -1.031508\r\nv 0.762816 0.046875 -1.039419\r\nv 0.762816 0.046875 1.039419\r\nv 0.762958 2.085600 -1.466456\r\nv 0.762958 2.085600 1.466456\r\nv 0.770779 0.018225 0.565664\r\nv 0.770779 0.018225 -0.565664\r\nv 0.772096 2.400000 -1.052064\r\nv 0.772096 2.400000 1.052064\r\nv 0.775921 0.316800 -1.491372\r\nv 0.775921 0.316800 1.491372\r\nv 0.781142 2.502600 -0.781142\r\nv 0.781142 2.502600 0.781142\r\nv 0.783552 2.550000 -0.263208\r\nv 0.783552 2.550000 0.263208\r\nv 0.785325 2.527200 -0.576340\r\nv 0.785325 2.527200 0.576340\r\nv 0.795481 1.929525 1.528968\r\nv 0.795481 1.929525 -1.528968\r\nv 0.810180 0.384375 1.557220\r\nv 0.810180 0.384375 -1.557220\r\nv 0.811956 0.031200 0.811956\r\nv 0.811956 0.031200 -0.811956\r\nv 0.814374 2.550000 -0.135366\r\nv 0.814374 2.550000 0.135366\r\nv 0.819847 2.463000 -1.117130\r\nv 0.819847 2.463000 1.117130\r\nv 0.820931 2.482687 1.118607\r\nv 0.820931 2.482687 -1.118607\r\nv 0.821035 0.064800 1.118749\r\nv 0.821035 0.064800 -1.118749\r\nv 0.823129 2.435437 -1.121601\r\nv 0.823129 2.435437 1.121601\r\nv 0.825000 2.550000 0.000000\r\nv 0.825000 2.550000 0.000000\r\nv 0.825668 2.494500 -1.125061\r\nv 0.825668 2.494500 1.125061\r\nv 0.825921 1.774800 1.587475\r\nv 0.825921 1.774800 -1.587475\r\nv 0.831488 2.400000 -1.132992\r\nv 0.831488 2.400000 1.132992\r\nv 0.833344 2.498438 -1.135521\r\nv 0.833344 2.498438 1.135521\r\nv 0.843248 2.494500 -1.149016\r\nv 0.843248 2.494500 1.149016\r\nv 0.844439 0.463200 1.623068\r\nv 0.844439 0.463200 -1.623068\r\nv 0.847506 0.018225 -0.440935\r\nv 0.847506 0.018225 0.440935\r\nv 0.853583 1.621875 -1.640643\r\nv 0.853583 1.621875 1.640643\r\nv 0.854666 2.482687 -1.164574\r\nv 0.854666 2.482687 1.164574\r\nv 0.855408 2.474400 -0.855408\r\nv 0.855408 2.474400 0.855408\r\nv 0.858407 0.084525 -1.169673\r\nv 0.858407 0.084525 1.169673\r\nv 0.863501 2.527200 -0.449256\r\nv 0.863501 2.527200 0.449256\r\nv 0.866886 2.463000 -1.181225\r\nv 0.866886 2.463000 1.181225\r\nv 0.875920 0.553725 -1.683577\r\nv 0.875920 0.553725 1.683577\r\nv 0.877772 1.471200 -1.687137\r\nv 0.877772 1.471200 1.687137\r\nv 0.879195 2.435437 -1.197997\r\nv 0.879195 2.435437 1.197997\r\nv 0.879477 0.105600 -1.198382\r\nv 0.879477 0.105600 1.198382\r\nv 0.888786 0.127575 1.211067\r\nv 0.888786 0.127575 -1.211067\r\nv 0.890370 2.502600 -0.653431\r\nv 0.890370 2.502600 0.653431\r\nv 0.890880 0.150000 -1.213920\r\nv 0.890880 0.150000 1.213920\r\nv 0.890880 2.400000 -1.213920\r\nv 0.890880 0.150000 -1.213920\r\nv 0.890880 0.150000 1.213920\r\nv 0.890880 2.400000 1.213920\r\nv 0.897795 1.323225 -1.725622\r\nv 0.897795 1.323225 1.725622\r\nv 0.899195 0.177075 1.225250\r\nv 0.899195 0.177075 -1.225250\r\nv 0.901846 0.656400 -1.733408\r\nv 0.901846 0.656400 1.733408\r\nv 0.904575 0.018225 0.303862\r\nv 0.904575 0.018225 -0.303862\r\nv 0.904966 2.440800 0.904966\r\nv 0.904966 2.440800 -0.904966\r\nv 0.911906 0.046875 -0.911906\r\nv 0.911906 0.046875 0.911906\r\nv 0.912957 1.178400 -1.754764\r\nv 0.912957 1.178400 1.754764\r\nv 0.919439 0.771675 -1.767222\r\nv 0.919439 0.771675 1.767222\r\nv 0.921647 2.527200 -0.309596\r\nv 0.921647 2.527200 0.309596\r\nv 0.921764 0.213600 1.256003\r\nv 0.921764 0.213600 -1.256003\r\nv 0.922564 1.037175 1.773229\r\nv 0.922564 1.037175 -1.773229\r\nv 0.923000 2.400000 -0.923000\r\nv 0.923000 2.400000 0.923000\r\nv 0.925493 0.031200 0.679207\r\nv 0.925493 0.031200 -0.679207\r\nv 0.925920 0.900000 1.779680\r\nv 0.925920 0.900000 -1.779680\r\nv 0.925920 0.900000 -1.779680\r\nv 0.925920 0.900000 1.779680\r\nv 0.935276 2.242575 -1.274414\r\nv 0.935276 2.242575 1.274414\r\nv 0.940158 0.018225 0.156274\r\nv 0.940158 0.018225 -0.156274\r\nv 0.952425 0.018225 0.000000\r\nv 0.952425 0.018225 0.000000\r\nv 0.955023 0.260025 1.301322\r\nv 0.955023 0.260025 -1.301322\r\nv 0.957901 2.527200 -0.159223\r\nv 0.957901 2.527200 0.159223\r\nv 0.970400 2.527200 0.000000\r\nv 0.970400 2.527200 -0.000000\r\nv 0.975021 2.474400 -0.715555\r\nv 0.975021 2.474400 0.715555\r\nv 0.978780 2.085600 -1.333693\r\nv 0.978780 2.085600 1.333693\r\nv 0.979002 2.502600 0.509349\r\nv 0.979002 2.502600 -0.509349\r\nv 0.980084 2.463000 -0.980084\r\nv 0.980084 2.463000 0.980084\r\nv 0.981380 2.482687 -0.981380\r\nv 0.981380 2.482687 0.981380\r\nv 0.981504 0.064800 0.981504\r\nv 0.981504 0.064800 -0.981504\r\nv 0.984007 2.435437 -0.984007\r\nv 0.984007 2.435437 0.984007\r\nv 0.987042 2.494500 -0.987042\r\nv 0.987042 2.494500 0.987042\r\nv 0.994000 2.400000 -0.994000\r\nv 0.994000 2.400000 0.994000\r\nv 0.995410 0.316800 -1.356353\r\nv 0.995410 0.316800 1.356353\r\nv 0.996219 2.498438 -0.996219\r\nv 0.996219 2.498438 0.996219\r\nv 1.008058 2.494500 -1.008058\r\nv 1.008058 2.494500 1.008058\r\nv 1.017621 0.031200 0.529441\r\nv 1.017621 0.031200 -0.529441\r\nv 1.020503 1.929525 -1.390545\r\nv 1.020503 1.929525 1.390545\r\nv 1.021708 2.482687 -1.021708\r\nv 1.021708 2.482687 1.021708\r\nv 1.026181 0.084525 -1.026181\r\nv 1.026181 0.084525 1.026181\r\nv 1.031508 2.440800 0.757010\r\nv 1.031508 2.440800 -0.757010\r\nv 1.036316 2.463000 -1.036316\r\nv 1.036316 2.463000 1.036316\r\nv 1.039360 0.384375 -1.416240\r\nv 1.039360 0.384375 1.416240\r\nv 1.039419 0.046875 -0.762816\r\nv 1.039419 0.046875 0.762816\r\nv 1.044926 2.502600 -0.351008\r\nv 1.044926 2.502600 0.351008\r\nv 1.051031 2.435437 -1.051031\r\nv 1.051031 2.435437 1.051031\r\nv 1.051368 0.105600 -1.051368\r\nv 1.051368 0.105600 1.051368\r\nv 1.052064 2.400000 -0.772096\r\nv 1.052064 2.400000 0.772096\r\nv 1.059553 1.774800 -1.443756\r\nv 1.059553 1.774800 1.443756\r\nv 1.062497 0.127575 1.062497\r\nv 1.062497 0.127575 -1.062497\r\nv 1.065000 0.150000 -1.065000\r\nv 1.065000 0.150000 1.065000\r\nv 1.065000 2.400000 -1.065000\r\nv 1.065000 2.400000 1.065000\r\nv 1.072079 2.474400 -0.557774\r\nv 1.072079 2.474400 0.557774\r\nv 1.074940 0.177075 -1.074940\r\nv 1.074940 0.177075 1.074940\r\nv 1.083310 0.463200 -1.476127\r\nv 1.083310 0.463200 1.476127\r\nv 1.086029 2.502600 0.180521\r\nv 1.086029 2.502600 -0.180521\r\nv 1.086146 0.031200 0.364854\r\nv 1.086146 0.031200 -0.364854\r\nv 1.095040 1.621875 -1.492110\r\nv 1.095040 1.621875 1.492110\r\nv 1.100200 2.502600 -0.000000\r\nv 1.100200 2.502600 0.000000\r\nv 1.101920 0.213600 1.101920\r\nv 1.101920 0.213600 -1.101920\r\nv 1.117130 2.463000 -0.819847\r\nv 1.117130 2.463000 0.819847\r\nv 1.118073 2.242575 -1.118073\r\nv 1.118073 2.242575 1.118073\r\nv 1.118607 2.482687 -0.820931\r\nv 1.118607 2.482687 0.820931\r\nv 1.118749 0.064800 -0.821035\r\nv 1.118749 0.064800 0.821035\r\nv 1.121601 2.435437 -0.823129\r\nv 1.121601 2.435437 0.823129\r\nv 1.123697 0.553725 -1.531158\r\nv 1.123697 0.553725 1.531158\r\nv 1.125061 2.494500 -0.825668\r\nv 1.125061 2.494500 0.825668\r\nv 1.126072 1.471200 -1.534395\r\nv 1.126072 1.471200 1.534395\r\nv 1.128870 0.031200 -0.187642\r\nv 1.128870 0.031200 0.187642\r\nv 1.132992 2.400000 -0.831488\r\nv 1.132992 2.400000 0.831488\r\nv 1.134190 2.440800 0.590089\r\nv 1.134190 2.440800 -0.590089\r\nv 1.135521 2.498438 -0.833344\r\nv 1.135521 2.498438 0.833344\r\nv 1.141680 0.260025 1.141680\r\nv 1.141680 0.260025 -1.141680\r\nv 1.142888 0.046875 -0.594614\r\nv 1.142888 0.046875 0.594614\r\nv 1.143600 0.031200 0.000000\r\nv 1.143600 0.031200 0.000000\r\nv 1.144271 2.474400 -0.384379\r\nv 1.144271 2.474400 0.384379\r\nv 1.149016 2.494500 -0.843248\r\nv 1.149016 2.494500 0.843248\r\nv 1.151759 1.323225 -1.569396\r\nv 1.151759 1.323225 1.569396\r\nv 1.156792 2.400000 -0.601848\r\nv 1.156792 2.400000 0.601848\r\nv 1.156956 0.656400 -1.576477\r\nv 1.156956 0.656400 1.576477\r\nv 1.164574 2.482687 -0.854666\r\nv 1.164574 2.482687 0.854666\r\nv 1.169673 0.084525 -0.858407\r\nv 1.169673 0.084525 0.858407\r\nv 1.170080 2.085600 -1.170080\r\nv 1.170080 2.085600 1.170080\r\nv 1.171210 1.178400 -1.595900\r\nv 1.171210 1.178400 1.595900\r\nv 1.179525 0.771675 -1.607230\r\nv 1.179525 0.771675 1.607230\r\nv 1.181225 2.463000 -0.866886\r\nv 1.181225 2.463000 0.866886\r\nv 1.183534 1.037175 -1.612693\r\nv 1.183534 1.037175 1.612693\r\nv 1.187840 0.900000 -1.618560\r\nv 1.187840 0.900000 -1.618560\r\nv 1.187840 0.900000 1.618560\r\nv 1.187840 0.900000 1.618560\r\nv 1.189282 2.474400 -0.197684\r\nv 1.189282 2.474400 0.197684\r\nv 1.189960 0.316800 -1.189960\r\nv 1.189960 0.316800 1.189960\r\nv 1.197997 2.435437 -0.879195\r\nv 1.197997 2.435437 0.879195\r\nv 1.198382 0.105600 -0.879477\r\nv 1.198382 0.105600 0.879477\r\nv 1.204800 2.474400 0.000000\r\nv 1.204800 2.474400 -0.000000\r\nv 1.210564 2.440800 0.406648\r\nv 1.210564 2.440800 -0.406648\r\nv 1.211067 0.127575 0.888786\r\nv 1.211067 0.127575 -0.888786\r\nv 1.213920 0.150000 -0.890880\r\nv 1.213920 0.150000 -0.890880\r\nv 1.213920 0.150000 0.890880\r\nv 1.213920 0.150000 0.890880\r\nv 1.213920 2.400000 -0.890880\r\nv 1.213920 2.400000 0.890880\r\nv 1.219848 0.046875 -0.409767\r\nv 1.219848 0.046875 0.409767\r\nv 1.219958 1.929525 1.219958\r\nv 1.219958 1.929525 -1.219958\r\nv 1.225250 0.177075 0.899195\r\nv 1.225250 0.177075 -0.899195\r\nv 1.228335 2.463000 -0.639070\r\nv 1.228335 2.463000 0.639070\r\nv 1.229959 2.482687 -0.639915\r\nv 1.229959 2.482687 0.639915\r\nv 1.230115 0.064800 -0.639996\r\nv 1.230115 0.064800 0.639996\r\nv 1.233252 2.435437 -0.641628\r\nv 1.233252 2.435437 0.641628\r\nv 1.234688 2.400000 -0.414752\r\nv 1.234688 2.400000 0.414752\r\nv 1.237056 2.494500 -0.643607\r\nv 1.237056 2.494500 0.643607\r\nv 1.242500 0.384375 -1.242500\r\nv 1.242500 0.384375 1.242500\r\nv 1.245776 2.400000 -0.648144\r\nv 1.245776 2.400000 0.648144\r\nv 1.248557 2.498438 -0.649591\r\nv 1.248557 2.498438 0.649591\r\nv 1.256003 0.213600 0.921764\r\nv 1.256003 0.213600 -0.921764\r\nv 1.258183 2.440800 0.209136\r\nv 1.258183 2.440800 -0.209136\r\nv 1.263395 2.494500 -0.657311\r\nv 1.263395 2.494500 0.657311\r\nv 1.266640 1.774800 -1.266640\r\nv 1.266640 1.774800 1.266640\r\nv 1.267832 0.046875 -0.210740\r\nv 1.267832 0.046875 0.210740\r\nv 1.274414 2.242575 -0.935276\r\nv 1.274414 2.242575 0.935276\r\nv 1.274600 2.440800 0.000000\r\nv 1.274600 2.440800 0.000000\r\nv 1.280502 2.482687 -0.666211\r\nv 1.280502 2.482687 0.666211\r\nv 1.283256 2.400000 -0.213304\r\nv 1.283256 2.400000 0.213304\r\nv 1.284375 0.046875 0.000000\r\nv 1.284375 0.046875 -0.000000\r\nv 1.286108 0.084525 -0.669128\r\nv 1.286108 0.084525 0.669128\r\nv 1.295040 0.463200 -1.295040\r\nv 1.295040 0.463200 1.295040\r\nv 1.298810 2.463000 -0.675736\r\nv 1.298810 2.463000 0.675736\r\nv 1.300000 2.400000 0.000000\r\nv 1.300000 2.400000 -0.000000\r\nv 1.301322 0.260025 0.955023\r\nv 1.301322 0.260025 -0.955023\r\nv 1.309063 1.621875 -1.309063\r\nv 1.309063 1.621875 1.309063\r\nv 1.311049 2.463000 -0.440403\r\nv 1.311049 2.463000 0.440403\r\nv 1.312782 2.482687 -0.440985\r\nv 1.312782 2.482687 0.440985\r\nv 1.312948 0.064800 0.441041\r\nv 1.312948 0.064800 -0.441041\r\nv 1.316296 2.435437 -0.442166\r\nv 1.316296 2.435437 0.442166\r\nv 1.317252 2.435437 -0.685331\r\nv 1.317252 2.435437 0.685331\r\nv 1.317675 0.105600 -0.685551\r\nv 1.317675 0.105600 0.685551\r\nv 1.320356 2.494500 -0.443529\r\nv 1.320356 2.494500 0.443529\r\nv 1.329664 2.400000 -0.446656\r\nv 1.329664 2.400000 0.446656\r\nv 1.331623 0.127575 0.692808\r\nv 1.331623 0.127575 -0.692808\r\nv 1.332632 2.498438 -0.447653\r\nv 1.332632 2.498438 0.447653\r\nv 1.333693 2.085600 -0.978780\r\nv 1.333693 2.085600 0.978780\r\nv 1.334760 0.150000 0.694440\r\nv 1.334760 0.150000 -0.694440\r\nv 1.334760 0.150000 -0.694440\r\nv 1.334760 0.150000 0.694440\r\nv 1.334760 2.400000 -0.694440\r\nv 1.334760 2.400000 0.694440\r\nv 1.343320 0.553725 -1.343320\r\nv 1.343320 0.553725 1.343320\r\nv 1.346160 1.471200 -1.346160\r\nv 1.346160 1.471200 1.346160\r\nv 1.347218 0.177075 0.700921\r\nv 1.347218 0.177075 -0.700921\r\nv 1.348469 2.494500 -0.452973\r\nv 1.348469 2.494500 0.452973\r\nv 1.356353 0.316800 -0.995410\r\nv 1.356353 0.316800 0.995410\r\nv 1.362620 2.463000 -0.226496\r\nv 1.362620 2.463000 0.226496\r\nv 1.364422 2.482687 -0.226795\r\nv 1.364422 2.482687 0.226795\r\nv 1.364595 0.064800 -0.226824\r\nv 1.364595 0.064800 0.226824\r\nv 1.366728 2.482687 -0.459107\r\nv 1.366728 2.482687 0.459107\r\nv 1.368074 2.435437 -0.227403\r\nv 1.368074 2.435437 0.227403\r\nv 1.372294 2.494500 -0.228104\r\nv 1.372294 2.494500 0.228104\r\nv 1.372712 0.084525 -0.461116\r\nv 1.372712 0.084525 0.461116\r\nv 1.376867 1.323225 -1.376868\r\nv 1.376868 1.323225 1.376867\r\nv 1.380400 2.463000 0.000000\r\nv 1.380400 2.463000 -0.000000\r\nv 1.381032 0.213600 0.718514\r\nv 1.381032 0.213600 -0.718514\r\nv 1.381968 2.400000 -0.229712\r\nv 1.381968 2.400000 0.229712\r\nv 1.382225 2.482687 0.000000\r\nv 1.382225 2.482687 0.000000\r\nv 1.382400 0.064800 0.000000\r\nv 1.382400 0.064800 0.000000\r\nv 1.383080 0.656400 -1.383080\r\nv 1.383080 0.656400 1.383080\r\nv 1.385053 2.498438 -0.230225\r\nv 1.385053 2.498438 0.230225\r\nv 1.385925 2.435437 0.000000\r\nv 1.385925 2.435437 -0.000000\r\nv 1.386270 2.463000 -0.465671\r\nv 1.386270 2.463000 0.465671\r\nv 1.390200 2.494500 0.000000\r\nv 1.390200 2.494500 -0.000000\r\nv 1.390545 1.929525 -1.020503\r\nv 1.390545 1.929525 1.020503\r\nv 1.400000 2.400000 0.000000\r\nv 1.400000 2.400000 0.000000\r\nv 1.400120 1.178400 -1.400120\r\nv 1.400120 1.178400 1.400120\r\nv 1.401276 2.242575 -0.729046\r\nv 1.401276 2.242575 0.729046\r\nv 1.401513 2.494500 -0.232961\r\nv 1.401513 2.494500 0.232961\r\nv 1.403125 2.498438 0.000000\r\nv 1.403125 2.498438 0.000000\r\nv 1.405953 2.435437 -0.472283\r\nv 1.405953 2.435437 0.472283\r\nv 1.406405 0.105600 -0.472434\r\nv 1.406405 0.105600 0.472434\r\nv 1.410060 0.771675 -1.410060\r\nv 1.410060 0.771675 1.410060\r\nv 1.414853 1.037175 -1.414853\r\nv 1.414853 1.037175 1.414853\r\nv 1.416240 0.384375 -1.039360\r\nv 1.416240 0.384375 1.039360\r\nv 1.419800 2.494500 0.000000\r\nv 1.419800 2.494500 -0.000000\r\nv 1.420000 0.900000 -1.420000\r\nv 1.420000 0.900000 -1.420000\r\nv 1.420000 0.900000 1.420000\r\nv 1.420000 0.900000 1.420000\r\nv 1.420490 2.482687 -0.236115\r\nv 1.420490 2.482687 0.236115\r\nv 1.421292 0.127575 0.477435\r\nv 1.421292 0.127575 -0.477435\r\nv 1.424640 0.150000 -0.478560\r\nv 1.424640 0.150000 -0.478560\r\nv 1.424640 0.150000 0.478560\r\nv 1.424640 0.150000 0.478560\r\nv 1.424640 2.400000 -0.478560\r\nv 1.424640 2.400000 0.478560\r\nv 1.426709 0.084525 -0.237149\r\nv 1.426709 0.084525 0.237149\r\nv 1.430863 0.260025 0.744440\r\nv 1.430863 0.260025 -0.744440\r\nv 1.437937 0.177075 0.483027\r\nv 1.437937 0.177075 -0.483027\r\nv 1.439025 2.482687 0.000000\r\nv 1.440800 2.463000 -0.239491\r\nv 1.440800 2.463000 0.239491\r\nv 1.443756 1.774800 -1.059553\r\nv 1.443756 1.774800 1.059553\r\nv 1.445325 0.084525 0.000000\r\nv 1.445325 0.084525 0.000000\r\nv 1.459600 2.463000 0.000000\r\nv 1.459600 2.463000 -0.000000\r\nv 1.461258 2.435437 -0.242892\r\nv 1.461258 2.435437 0.242892\r\nv 1.461727 0.105600 -0.242970\r\nv 1.461727 0.105600 0.242970\r\nv 1.466456 2.085600 -0.762958\r\nv 1.466456 2.085600 0.762958\r\nv 1.474028 0.213600 0.495150\r\nv 1.474028 0.213600 -0.495150\r\nv 1.476127 0.463200 -1.083310\r\nv 1.476127 0.463200 1.083310\r\nv 1.477200 0.127575 0.245542\r\nv 1.477200 0.127575 -0.245542\r\nv 1.480325 2.435437 0.000000\r\nv 1.480325 2.435437 -0.000000\r\nv 1.480680 0.150000 -0.246120\r\nv 1.480680 0.150000 0.246120\r\nv 1.480680 0.150000 0.246120\r\nv 1.480680 0.150000 -0.246120\r\nv 1.480680 2.400000 -0.246120\r\nv 1.480680 2.400000 0.246120\r\nv 1.480800 0.105600 0.000000\r\nv 1.480800 0.105600 0.000000\r\nv 1.491372 0.316800 -0.775921\r\nv 1.491372 0.316800 0.775921\r\nv 1.492110 1.621875 -1.095040\r\nv 1.492110 1.621875 1.095040\r\nv 1.494500 0.177075 0.248417\r\nv 1.494500 0.177075 -0.248417\r\nv 1.495635 2.242575 -0.502408\r\nv 1.495635 2.242575 0.502408\r\nv 1.496475 0.127575 0.000000\r\nv 1.496475 0.127575 0.000000\r\nv 1.500000 0.150000 0.000000\r\nv 1.500000 0.150000 0.000000\r\nv 1.500000 2.400000 0.000000\r\nv 1.500000 2.400000 0.000000\r\nv 1.514000 0.177075 -0.000000\r\nv 1.514000 0.177075 0.000000\r\nv 1.527214 0.260025 -0.513016\r\nv 1.527214 0.260025 0.513016\r\nv 1.528968 1.929525 -0.795481\r\nv 1.528968 1.929525 0.795481\r\nv 1.531158 0.553725 -1.123697\r\nv 1.531158 0.553725 1.123697\r\nv 1.532010 0.213600 0.254652\r\nv 1.532010 0.213600 -0.254652\r\nv 1.534395 1.471200 -1.126072\r\nv 1.534395 1.471200 1.126072\r\nv 1.552000 0.213600 0.000000\r\nv 1.552000 0.213600 0.000000\r\nv 1.554467 2.242575 -0.258385\r\nv 1.554467 2.242575 0.258385\r\nv 1.557220 0.384375 -0.810180\r\nv 1.557220 0.384375 0.810180\r\nv 1.565204 2.085600 -0.525778\r\nv 1.565204 2.085600 0.525778\r\nv 1.569396 1.323225 -1.151759\r\nv 1.569396 1.323225 1.151759\r\nv 1.574750 2.242575 0.000000\r\nv 1.574750 2.242575 0.000000\r\nv 1.576477 0.656400 -1.156956\r\nv 1.576477 0.656400 1.156956\r\nv 1.587289 0.260025 0.263841\r\nv 1.587289 0.260025 -0.263841\r\nv 1.587475 1.774800 -0.825921\r\nv 1.587475 1.774800 0.825921\r\nv 1.591798 0.316800 -0.534711\r\nv 1.591798 0.316800 0.534711\r\nv 1.595900 1.178400 -1.171210\r\nv 1.595900 1.178400 1.171210\r\nv 1.607230 0.771675 -1.179525\r\nv 1.607230 0.771675 1.179525\r\nv 1.608000 0.260025 0.000000\r\nv 1.608000 0.260025 0.000000\r\nv 1.612693 1.037175 -1.183534\r\nv 1.612693 1.037175 1.183534\r\nv 1.618560 0.900000 -1.187840\r\nv 1.618560 0.900000 -1.187840\r\nv 1.618560 0.900000 1.187840\r\nv 1.618560 0.900000 1.187840\r\nv 1.623068 0.463200 -0.844439\r\nv 1.623068 0.463200 0.844439\r\nv 1.626774 2.085600 -0.270404\r\nv 1.626774 2.085600 0.270404\r\nv 1.631925 1.929525 -0.548190\r\nv 1.631925 1.929525 0.548190\r\nv 1.640643 1.621875 -0.853583\r\nv 1.640643 1.621875 0.853583\r\nv 1.648000 2.085600 0.000000\r\nv 1.648000 2.085600 -0.000000\r\nv 1.654413 0.316800 -0.274998\r\nv 1.654413 0.316800 0.274998\r\nv 1.662080 0.384375 -0.558320\r\nv 1.662080 0.384375 0.558320\r\nv 1.676000 0.316800 0.000000\r\nv 1.676000 0.316800 0.000000\r\nv 1.683577 0.553725 -0.875920\r\nv 1.683577 0.553725 0.875920\r\nv 1.687137 1.471200 -0.877772\r\nv 1.687137 1.471200 0.877772\r\nv 1.694372 1.774800 -0.569167\r\nv 1.694372 1.774800 0.569167\r\nv 1.696119 1.929525 -0.281930\r\nv 1.696119 1.929525 0.281930\r\nv 1.700000 0.600000 0.000000\r\nv 1.700000 0.600000 0.000000\r\nv 1.700000 0.623100 0.178200\r\nv 1.700000 0.623100 -0.178200\r\nv 1.700000 0.685800 -0.316800\r\nv 1.700000 0.685800 0.316800\r\nv 1.700000 0.778200 0.415800\r\nv 1.700000 0.778200 -0.415800\r\nv 1.700000 0.890400 -0.475200\r\nv 1.700000 0.890400 0.475200\r\nv 1.700000 1.012500 -0.495000\r\nv 1.700000 1.012500 0.495000\r\nv 1.700000 1.134600 -0.475200\r\nv 1.700000 1.134600 0.475200\r\nv 1.700000 1.246800 0.415800\r\nv 1.700000 1.246800 -0.415800\r\nv 1.700000 1.339200 -0.316800\r\nv 1.700000 1.339200 0.316800\r\nv 1.700000 1.401900 0.178200\r\nv 1.700000 1.401900 -0.178200\r\nv 1.700000 1.425000 0.000000\r\nv 1.700000 1.425000 0.000000\r\nv 1.718250 1.929525 0.000000\r\nv 1.718250 1.929525 0.000000\r\nv 1.725622 1.323225 -0.897795\r\nv 1.725622 1.323225 0.897795\r\nv 1.727460 0.384375 -0.287140\r\nv 1.727460 0.384375 0.287140\r\nv 1.732362 0.463200 -0.581929\r\nv 1.732362 0.463200 0.581929\r\nv 1.733408 0.656400 -0.901846\r\nv 1.733408 0.656400 0.901846\r\nv 1.750000 0.384375 0.000000\r\nv 1.750000 0.384375 0.000000\r\nv 1.751120 1.621875 -0.588230\r\nv 1.751120 1.621875 0.588230\r\nv 1.754764 1.178400 -0.912957\r\nv 1.754764 1.178400 0.912957\r\nv 1.761022 1.774800 -0.292719\r\nv 1.761022 1.774800 0.292719\r\nv 1.767222 0.771675 -0.919439\r\nv 1.767222 0.771675 0.919439\r\nv 1.773229 1.037175 -0.922564\r\nv 1.773229 1.037175 0.922564\r\nv 1.779680 0.900000 -0.925920\r\nv 1.779680 0.900000 -0.925920\r\nv 1.779680 0.900000 0.925920\r\nv 1.779680 0.900000 0.925920\r\nv 1.784000 1.774800 0.000000\r\nv 1.784000 1.774800 0.000000\r\nv 1.796946 0.553725 -0.603624\r\nv 1.796946 0.553725 0.603624\r\nv 1.800507 0.463200 -0.299282\r\nv 1.800507 0.463200 0.299282\r\nv 1.800745 1.471200 -0.604900\r\nv 1.800745 1.471200 0.604900\r\nv 1.820003 1.621875 -0.302523\r\nv 1.820003 1.621875 0.302522\r\nv 1.824000 0.463200 0.000000\r\nv 1.824000 0.463200 0.000000\r\nv 1.841822 1.323225 -0.618698\r\nv 1.841822 1.323225 0.618698\r\nv 1.843750 1.621875 0.000000\r\nv 1.843750 1.621875 -0.000000\r\nv 1.850132 0.656400 -0.621490\r\nv 1.850132 0.656400 0.621490\r\nv 1.867631 0.553725 -0.310439\r\nv 1.867631 0.553725 0.310439\r\nv 1.871580 1.471200 -0.311096\r\nv 1.871580 1.471200 0.311096\r\nv 1.872927 1.178400 -0.629147\r\nv 1.872927 1.178400 0.629147\r\nv 1.886223 0.771675 -0.633613\r\nv 1.886223 0.771675 0.633613\r\nv 1.892000 0.553725 0.000000\r\nv 1.892000 0.553725 -0.000000\r\nv 1.892634 1.037175 -0.635767\r\nv 1.892634 1.037175 0.635767\r\nv 1.896000 1.471200 0.000000\r\nv 1.896000 1.471200 0.000000\r\nv 1.899520 0.900000 -0.638080\r\nv 1.899520 0.900000 -0.638080\r\nv 1.899520 0.900000 0.638080\r\nv 1.899520 0.900000 0.638080\r\nv 1.914272 1.323225 -0.318192\r\nv 1.914272 1.323225 0.318192\r\nv 1.922910 0.656400 -0.319628\r\nv 1.922910 0.656400 0.319628\r\nv 1.935900 1.444200 0.000000\r\nv 1.935900 1.444200 0.000000\r\nv 1.939250 1.323225 0.000000\r\nv 1.939250 1.323225 -0.000000\r\nv 1.939394 1.423221 -0.175100\r\nv 1.939394 1.423221 0.175100\r\nv 1.946601 1.178400 -0.323566\r\nv 1.946601 1.178400 0.323566\r\nv 1.948000 0.656400 0.000000\r\nv 1.948000 0.656400 -0.000000\r\nv 1.948879 1.366278 -0.311290\r\nv 1.948879 1.366278 0.311290\r\nv 1.960420 0.771675 -0.325863\r\nv 1.960420 0.771675 0.325863\r\nv 1.962857 1.282362 -0.408568\r\nv 1.962857 1.282362 0.408568\r\nv 1.967083 1.037175 -0.326970\r\nv 1.967083 1.037175 0.326970\r\nv 1.972000 1.178400 0.000000\r\nv 1.972000 1.178400 0.000000\r\nv 1.974240 0.900000 -0.328160\r\nv 1.974240 0.900000 0.328160\r\nv 1.974240 0.900000 0.328160\r\nv 1.979830 1.180464 -0.466934\r\nv 1.979830 1.180464 0.466934\r\nv 1.986000 0.771675 0.000000\r\nv 1.986000 0.771675 -0.000000\r\nv 1.992750 1.037175 0.000000\r\nv 1.992750 1.037175 0.000000\r\nv 1.998300 1.069575 -0.486390\r\nv 1.998300 1.069575 0.486390\r\nv 2.000000 0.900000 0.000000\r\nv 2.000000 0.900000 0.000000\r\nv 2.016770 0.958686 -0.466934\r\nv 2.016770 0.958686 0.466934\r\nv 2.033743 0.856788 -0.408568\r\nv 2.033743 0.856788 0.408568\r\nv 2.047721 0.772872 0.311290\r\nv 2.047721 0.772872 -0.311290\r\nv 2.057206 0.715929 0.175100\r\nv 2.057206 0.715929 -0.175100\r\nv 2.060700 0.694950 0.000000\r\nv 2.060700 0.694950 0.000000\r\nv 2.111200 1.497600 0.000000\r\nv 2.111200 1.497600 0.000000\r\nv 2.116979 1.479120 -0.166687\r\nv 2.116979 1.479120 0.166687\r\nv 2.132666 1.428960 -0.296333\r\nv 2.132666 1.428960 0.296333\r\nv 2.155782 1.355040 -0.388937\r\nv 2.155782 1.355040 0.388937\r\nv 2.183853 1.265280 -0.444499\r\nv 2.183853 1.265280 0.444499\r\nv 2.214400 1.167600 -0.463020\r\nv 2.214400 1.167600 0.463020\r\nv 2.237300 1.578900 0.000000\r\nv 2.237300 1.578900 0.000000\r\nv 2.244457 1.563171 -0.154289\r\nv 2.244457 1.563171 0.154289\r\nv 2.244947 1.069920 -0.444499\r\nv 2.244947 1.069920 0.444499\r\nv 2.263882 1.520478 -0.274291\r\nv 2.263882 1.520478 0.274291\r\nv 2.273018 0.980160 -0.388937\r\nv 2.273018 0.980160 0.388937\r\nv 2.292510 1.457562 -0.360007\r\nv 2.292510 1.457562 0.360007\r\nv 2.296134 0.906240 -0.296333\r\nv 2.296134 0.906240 0.296333\r\nv 2.311821 0.856080 -0.166687\r\nv 2.311821 0.856080 0.166687\r\nv 2.317600 0.837600 0.000000\r\nv 2.317600 0.837600 0.000000\r\nv 2.325600 1.681800 0.000000\r\nv 2.325600 1.681800 0.000000\r\nv 2.327271 1.381164 -0.411437\r\nv 2.327271 1.381164 0.411437\r\nv 2.333530 1.668948 -0.139234\r\nv 2.333530 1.668948 0.139234\r\nv 2.355053 1.634064 -0.247526\r\nv 2.355053 1.634064 0.247526\r\nv 2.365100 1.298025 -0.428580\r\nv 2.365100 1.298025 0.428580\r\nv 2.386771 1.582656 -0.324878\r\nv 2.386771 1.582656 0.324878\r\nv 2.387500 1.800000 0.000000\r\nv 2.387500 1.800000 0.000000\r\nv 2.395900 1.790025 0.122850\r\nv 2.395900 1.790025 -0.122850\r\nv 2.402929 1.214886 -0.411437\r\nv 2.402929 1.214886 0.411437\r\nv 2.418700 1.762950 -0.218400\r\nv 2.418700 1.762950 0.218400\r\nv 2.425286 1.520232 -0.371290\r\nv 2.425286 1.520232 0.371290\r\nv 2.434400 1.927200 0.000000\r\nv 2.434400 1.927200 0.000000\r\nv 2.437690 1.138488 -0.360007\r\nv 2.437690 1.138488 0.360007\r\nv 2.443270 1.919976 0.106466\r\nv 2.443270 1.919976 -0.106466\r\nv 2.452300 1.723050 -0.286650\r\nv 2.452300 1.723050 0.286650\r\nv 2.466318 1.075572 -0.274291\r\nv 2.466318 1.075572 0.274291\r\nv 2.467200 1.452300 -0.386760\r\nv 2.467200 1.452300 0.386760\r\nv 2.467347 1.900368 0.189274\r\nv 2.467347 1.900368 -0.189274\r\nv 2.477700 2.057100 0.000000\r\nv 2.477700 2.057100 0.000000\r\nv 2.485743 1.032879 -0.154289\r\nv 2.485743 1.032879 0.154289\r\nv 2.487343 2.052375 -0.091411\r\nv 2.487343 2.052375 0.091411\r\nv 2.492900 1.017150 0.000000\r\nv 2.492900 1.017150 0.000000\r\nv 2.493100 1.674600 -0.327600\r\nv 2.493100 1.674600 0.327600\r\nv 2.502829 1.871472 0.248422\r\nv 2.502829 1.871472 -0.248422\r\nv 2.509114 1.384368 -0.371290\r\nv 2.509114 1.384368 0.371290\r\nv 2.513518 2.039550 0.162509\r\nv 2.513518 2.039550 -0.162509\r\nv 2.528800 2.183400 0.000000\r\nv 2.537500 1.621875 -0.341250\r\nv 2.537500 1.621875 0.341250\r\nv 2.539821 2.180796 -0.079013\r\nv 2.539821 2.180796 0.079013\r\nv 2.545914 1.836384 -0.283910\r\nv 2.545914 1.836384 0.283910\r\nv 2.547629 1.321944 -0.324878\r\nv 2.547629 1.321944 0.324878\r\nv 2.552090 2.020650 -0.213293\r\nv 2.552090 2.020650 0.213293\r\nv 2.569734 2.173728 -0.140467\r\nv 2.569734 2.173728 0.140467\r\nv 2.579347 1.270536 -0.247526\r\nv 2.579347 1.270536 0.247526\r\nv 2.581900 1.569150 -0.327600\r\nv 2.581900 1.569150 0.327600\r\nv 2.592800 1.798200 -0.295740\r\nv 2.592800 1.798200 0.295740\r\nv 2.598929 1.997700 -0.243763\r\nv 2.598929 1.997700 0.243763\r\nv 2.599100 2.299800 0.000000\r\nv 2.599100 2.299800 0.000000\r\nv 2.600870 1.235652 -0.139234\r\nv 2.600870 1.235652 0.139234\r\nv 2.608800 1.222800 0.000000\r\nv 2.608800 1.222800 0.000000\r\nv 2.612406 2.298813 0.070600\r\nv 2.612406 2.298813 -0.070600\r\nv 2.613818 2.163312 -0.184363\r\nv 2.613818 2.163312 0.184363\r\nv 2.622700 1.520700 -0.286650\r\nv 2.622700 1.520700 0.286650\r\nv 2.639686 1.760016 -0.283910\r\nv 2.639686 1.760016 0.283910\r\nv 2.648521 2.296134 0.125510\r\nv 2.648521 2.296134 -0.125510\r\nv 2.649900 1.972725 0.253920\r\nv 2.649900 1.972725 -0.253920\r\nv 2.656300 1.480800 -0.218400\r\nv 2.656300 1.480800 0.218400\r\nv 2.667347 2.150664 -0.210701\r\nv 2.667347 2.150664 0.210701\r\nv 2.679100 1.453725 0.122850\r\nv 2.679100 1.453725 -0.122850\r\nv 2.682771 1.724928 0.248422\r\nv 2.682771 1.724928 -0.248422\r\nv 2.687500 1.443750 0.000000\r\nv 2.687500 1.443750 0.000000\r\nv 2.700000 2.400000 0.000000\r\nv 2.700000 2.400000 0.000000\r\nv 2.700000 2.400000 0.000000\r\nv 2.700871 1.947750 -0.243763\r\nv 2.700871 1.947750 0.243763\r\nv 2.701743 2.292186 0.164732\r\nv 2.701743 2.292186 -0.164732\r\nv 2.716800 2.400000 0.067500\r\nv 2.716800 2.400000 -0.067500\r\nv 2.716800 2.400000 -0.067500\r\nv 2.716800 2.400000 0.067500\r\nv 2.718253 1.696032 0.189274\r\nv 2.718253 1.696032 -0.189274\r\nv 2.725600 2.136900 -0.219480\r\nv 2.725600 2.136900 0.219480\r\nv 2.729800 2.420250 0.000000\r\nv 2.742330 1.676424 0.106466\r\nv 2.742330 1.676424 -0.106466\r\nv 2.747407 2.420406 -0.066744\r\nv 2.747407 2.420406 0.066744\r\nv 2.747710 1.924800 -0.213293\r\nv 2.747710 1.924800 0.213293\r\nv 2.751200 1.669200 0.000000\r\nv 2.751200 1.669200 0.000000\r\nv 2.758400 2.436000 0.000000\r\nv 2.762400 2.400000 0.120000\r\nv 2.762400 2.400000 -0.120000\r\nv 2.762400 2.400000 -0.120000\r\nv 2.762400 2.400000 0.120000\r\nv 2.766370 2.287392 0.188266\r\nv 2.766370 2.287392 -0.188266\r\nv 2.776365 2.436302 -0.064692\r\nv 2.776365 2.436302 0.064692\r\nv 2.783853 2.123136 -0.210701\r\nv 2.783853 2.123136 0.210701\r\nv 2.784600 2.447250 0.000000\r\nv 2.784600 2.447250 0.000000\r\nv 2.786282 1.905900 0.162509\r\nv 2.786282 1.905900 -0.162509\r\nv 2.795198 2.420829 -0.118656\r\nv 2.795198 2.420829 0.118656\r\nv 2.800000 2.400000 0.000000\r\nv 2.802528 2.447680 -0.061668\r\nv 2.802528 2.447680 0.061668\r\nv 2.807200 2.454000 0.000000\r\nv 2.811200 2.400000 -0.040500\r\nv 2.811200 2.400000 0.040500\r\nv 2.812457 1.893075 0.091411\r\nv 2.812457 1.893075 -0.091411\r\nv 2.822100 1.888350 0.000000\r\nv 2.822100 1.888350 0.000000\r\nv 2.824200 2.420250 0.000000\r\nv 2.824200 2.420250 0.000000\r\nv 2.824750 2.454529 -0.057996\r\nv 2.824750 2.454529 0.057996\r\nv 2.825000 2.456250 0.000000\r\nv 2.825000 2.456250 0.000000\r\nv 2.825126 2.437123 -0.115008\r\nv 2.825126 2.437123 0.115008\r\nv 2.829600 2.400000 0.157500\r\nv 2.829600 2.400000 -0.157500\r\nv 2.829600 2.400000 -0.157500\r\nv 2.829600 2.400000 0.157500\r\nv 2.836672 2.420519 -0.041256\r\nv 2.836672 2.420519 0.041256\r\nv 2.836700 2.282175 0.196110\r\nv 2.836700 2.282175 -0.196110\r\nv 2.836800 2.454000 0.000000\r\nv 2.836800 2.454000 0.000000\r\nv 2.837382 2.110488 -0.184363\r\nv 2.837382 2.110488 0.184363\r\nv 2.837600 2.436000 0.000000\r\nv 2.837600 2.436000 0.000000\r\nv 2.841400 2.447250 0.000000\r\nv 2.841400 2.447250 0.000000\r\nv 2.841600 2.400000 -0.072000\r\nv 2.841600 2.400000 0.072000\r\nv 2.841887 2.456841 -0.054000\r\nv 2.841887 2.456841 0.054000\r\nv 2.851189 2.448847 -0.109632\r\nv 2.851189 2.448847 0.109632\r\nv 2.851331 2.436454 -0.043308\r\nv 2.851331 2.436454 0.043308\r\nv 2.852794 2.454605 -0.050004\r\nv 2.852794 2.454605 0.050004\r\nv 2.856323 2.447812 -0.046332\r\nv 2.856323 2.447812 0.046332\r\nv 2.865626 2.421453 -0.155736\r\nv 2.865626 2.421453 0.155736\r\nv 2.870524 2.421250 -0.073344\r\nv 2.870524 2.421250 0.073344\r\nv 2.872387 2.455966 -0.103104\r\nv 2.872387 2.455966 0.103104\r\nv 2.881466 2.100072 -0.140467\r\nv 2.881466 2.100072 0.140467\r\nv 2.886400 2.400000 -0.094500\r\nv 2.886400 2.400000 0.094500\r\nv 2.887725 2.458444 -0.096000\r\nv 2.887725 2.458444 0.096000\r\nv 2.888602 2.437685 -0.076992\r\nv 2.888602 2.437685 0.076992\r\nv 2.896205 2.456246 0.088896\r\nv 2.896205 2.456246 -0.088896\r\nv 2.896829 2.449338 -0.082368\r\nv 2.896829 2.449338 0.082368\r\nv 2.896986 2.438333 -0.150948\r\nv 2.896986 2.438333 0.150948\r\nv 2.907030 2.276958 0.188266\r\nv 2.907030 2.276958 -0.188266\r\nv 2.911200 2.400000 -0.180000\r\nv 2.911200 2.400000 -0.180000\r\nv 2.911200 2.400000 0.180000\r\nv 2.911379 2.093004 -0.079013\r\nv 2.911379 2.093004 0.079013\r\nv 2.920412 2.422328 -0.096264\r\nv 2.920412 2.422328 0.096264\r\nv 2.922400 2.090400 0.000000\r\nv 2.922899 2.450567 -0.143892\r\nv 2.922899 2.450567 0.143892\r\nv 2.940800 2.400000 -0.108000\r\nv 2.940800 2.400000 0.108000\r\nv 2.942589 2.458082 -0.135324\r\nv 2.942589 2.458082 0.135324\r\nv 2.943526 2.439499 -0.101052\r\nv 2.943526 2.439499 0.101052\r\nv 2.951146 2.422210 -0.177984\r\nv 2.951146 2.422210 0.177984\r\nv 2.955275 2.460806 -0.126000\r\nv 2.955275 2.460806 0.126000\r\nv 2.956523 2.451588 -0.108108\r\nv 2.956523 2.451588 0.108108\r\nv 2.960179 2.458666 -0.116676\r\nv 2.960179 2.458666 0.116676\r\nv 2.971657 2.272164 0.164732\r\nv 2.971657 2.272164 -0.164732\r\nv 2.980990 2.423636 0.110016\r\nv 2.980990 2.423636 -0.110016\r\nv 2.984243 2.439802 -0.172512\r\nv 2.984243 2.439802 0.172512\r\nv 3.000000 2.400000 -0.187500\r\nv 3.000000 2.400000 -0.187500\r\nv 3.000000 2.400000 -0.112500\r\nv 3.000000 2.400000 0.112500\r\nv 3.000000 2.400000 0.187500\r\nv 3.009977 2.452655 -0.164448\r\nv 3.009977 2.452655 0.164448\r\nv 3.010221 2.441702 -0.115488\r\nv 3.010221 2.441702 0.115488\r\nv 3.024879 2.268216 0.125510\r\nv 3.024879 2.268216 -0.125510\r\nv 3.027834 2.460653 -0.154656\r\nv 3.027834 2.460653 0.154656\r\nv 3.029007 2.454319 -0.123552\r\nv 3.029007 2.454319 0.123552\r\nv 3.037300 2.463675 -0.144000\r\nv 3.037300 2.463675 0.144000\r\nv 3.037862 2.461603 0.133344\r\nv 3.037862 2.461603 -0.133344\r\nv 3.044212 2.423034 -0.185400\r\nv 3.044212 2.423034 0.185400\r\nv 3.046912 2.425059 0.114600\r\nv 3.046912 2.425059 -0.114600\r\nv 3.059200 2.400000 -0.108000\r\nv 3.059200 2.400000 0.108000\r\nv 3.060994 2.265537 0.070600\r\nv 3.060994 2.265537 -0.070600\r\nv 3.074300 2.264550 0.000000\r\nv 3.074300 2.264550 0.000000\r\nv 3.079200 2.441400 -0.179700\r\nv 3.079200 2.441400 0.179700\r\nv 3.082800 2.444100 -0.120300\r\nv 3.082800 2.444100 0.120300\r\nv 3.088800 2.400000 -0.180000\r\nv 3.088800 2.400000 -0.180000\r\nv 3.088800 2.400000 0.180000\r\nv 3.104737 2.454928 -0.171300\r\nv 3.104738 2.454928 0.171300\r\nv 3.107887 2.457291 -0.128700\r\nv 3.107887 2.457291 0.128700\r\nv 3.112835 2.426483 0.110016\r\nv 3.112835 2.426483 -0.110016\r\nv 3.113600 2.400000 -0.094500\r\nv 3.113600 2.400000 0.094500\r\nv 3.120600 2.463450 0.161100\r\nv 3.120600 2.463450 -0.161100\r\nv 3.122400 2.464800 0.138900\r\nv 3.122400 2.464800 -0.138900\r\nv 3.126562 2.466797 -0.150000\r\nv 3.126562 2.466797 0.150000\r\nv 3.137279 2.423859 -0.177984\r\nv 3.137279 2.423859 0.177984\r\nv 3.155379 2.446498 -0.115488\r\nv 3.155379 2.446498 0.115488\r\nv 3.158400 2.400000 -0.072000\r\nv 3.158400 2.400000 0.072000\r\nv 3.170400 2.400000 -0.157500\r\nv 3.170400 2.400000 0.157500\r\nv 3.170400 2.400000 -0.157500\r\nv 3.173413 2.427791 -0.096264\r\nv 3.173413 2.427791 0.096264\r\nv 3.174157 2.442998 -0.172512\r\nv 3.174157 2.442998 0.172512\r\nv 3.186768 2.460263 -0.123552\r\nv 3.186768 2.460263 0.123552\r\nv 3.188800 2.400000 -0.040500\r\nv 3.188800 2.400000 0.040500\r\nv 3.199498 2.457201 -0.164448\r\nv 3.199498 2.457201 0.164448\r\nv 3.200000 2.400000 0.000000\r\nv 3.206938 2.467997 0.133344\r\nv 3.206938 2.467997 -0.133344\r\nv 3.213366 2.466247 -0.154656\r\nv 3.213366 2.466247 0.154656\r\nv 3.215825 2.469919 -0.144000\r\nv 3.215825 2.469919 0.144000\r\nv 3.222074 2.448701 -0.101052\r\nv 3.222074 2.448701 0.101052\r\nv 3.222799 2.424616 -0.155736\r\nv 3.222799 2.424616 0.155736\r\nv 3.223301 2.428868 -0.073344\r\nv 3.223301 2.428868 0.073344\r\nv 3.237600 2.400000 -0.120000\r\nv 3.237600 2.400000 0.120000\r\nv 3.237600 2.400000 -0.120000\r\nv 3.257153 2.429599 -0.041256\r\nv 3.257153 2.429599 0.041256\r\nv 3.259252 2.462994 -0.108108\r\nv 3.259252 2.462994 0.108108\r\nv 3.261414 2.444467 -0.150948\r\nv 3.261414 2.444467 0.150948\r\nv 3.269625 2.429869 0.000000\r\nv 3.269625 2.429869 0.000000\r\nv 3.276998 2.450515 -0.076992\r\nv 3.276998 2.450515 0.076992\r\nv 3.283200 2.400000 -0.067500\r\nv 3.283200 2.400000 0.067500\r\nv 3.283200 2.400000 -0.067500\r\nv 3.284621 2.470934 -0.116676\r\nv 3.284621 2.470934 0.116676\r\nv 3.286576 2.459289 -0.143892\r\nv 3.286576 2.459289 0.143892\r\nv 3.293227 2.425240 -0.118656\r\nv 3.293227 2.425240 0.118656\r\nv 3.297850 2.472787 -0.126000\r\nv 3.297850 2.472788 0.126000\r\nv 3.298611 2.468818 -0.135324\r\nv 3.298611 2.468818 0.135324\r\nv 3.300000 2.400000 0.000000\r\nv 3.300000 2.400000 0.000000\r\nv 3.314269 2.451746 -0.043308\r\nv 3.314269 2.451746 0.043308\r\nv 3.318946 2.465243 -0.082368\r\nv 3.318946 2.465243 0.082368\r\nv 3.328000 2.452200 0.000000\r\nv 3.328000 2.452200 0.000000\r\nv 3.333274 2.445677 -0.115008\r\nv 3.333274 2.445677 0.115008\r\nv 3.341018 2.425663 -0.066744\r\nv 3.341018 2.425663 0.066744\r\nv 3.348595 2.473354 0.088896\r\nv 3.348595 2.473354 -0.088896\r\nv 3.358286 2.461009 -0.109632\r\nv 3.358286 2.461009 0.109632\r\nv 3.358625 2.425819 0.000000\r\nv 3.359452 2.466769 -0.046332\r\nv 3.359452 2.466769 0.046332\r\nv 3.365400 2.475150 -0.096000\r\nv 3.365400 2.475150 0.096000\r\nv 3.368813 2.470934 -0.103104\r\nv 3.368813 2.470934 0.103104\r\nv 3.374375 2.467331 0.000000\r\nv 3.374375 2.467331 0.000000\r\nv 3.382035 2.446498 -0.064692\r\nv 3.382035 2.446498 0.064692\r\nv 3.392006 2.474995 -0.050004\r\nv 3.392006 2.474995 0.050004\r\nv 3.400000 2.446800 0.000000\r\nv 3.406947 2.462176 -0.061668\r\nv 3.406947 2.462176 0.061668\r\nv 3.408000 2.475600 0.000000\r\nv 3.408000 2.475600 0.000000\r\nv 3.411237 2.476753 -0.054000\r\nv 3.411237 2.476753 0.054000\r\nv 3.416450 2.472371 -0.057996\r\nv 3.416450 2.472371 0.057996\r\nv 3.424875 2.462606 0.000000\r\nv 3.428125 2.477344 0.000000\r\nv 3.428125 2.477344 0.000000\r\nv 3.434000 2.472900 0.000000\r\n\r\nf 2909 2921 2939\r\nf 2939 2931 2909\r\nf 2869 2877 2921\r\nf 2921 2909 2869\r\nf 2819 2827 2877\r\nf 2877 2869 2819\r\nf 2737 2747 2827\r\nf 2827 2819 2737\r\nf 2669 2673 2747\r\nf 2747 2737 2669\r\nf 2567 2575 2673\r\nf 2673 2669 2567\r\nf 2476 2480 2575\r\nf 2575 2567 2476\r\nf 2358 2362 2480\r\nf 2480 2476 2358\r\nf 2158 2162 2362\r\nf 2362 2358 2158\r\nf 1715 1812 2162\r\nf 2162 2158 1715\r\nf 2901 2909 2931\r\nf 2931 2917 2901\r\nf 2863 2869 2909\r\nf 2909 2901 2863\r\nf 2813 2819 2869\r\nf 2869 2863 2813\r\nf 2729 2737 2819\r\nf 2819 2813 2729\r\nf 2663 2669 2737\r\nf 2737 2729 2663\r\nf 2561 2567 2669\r\nf 2669 2663 2561\r\nf 2468 2476 2567\r\nf 2567 2561 2468\r\nf 2350 2358 2476\r\nf 2476 2468 2350\r\nf 2152 2158 2358\r\nf 2358 2350 2152\r\nf 1717 1715 2158\r\nf 2158 2152 1717\r\nf 2903 2901 2917\r\nf 2917 2923 2903\r\nf 2865 2863 2901\r\nf 2901 2903 2865\r\nf 2815 2813 2863\r\nf 2863 2865 2815\r\nf 2733 2729 2813\r\nf 2813 2815 2733\r\nf 2665 2663 2729\r\nf 2729 2733 2665\r\nf 2564 2561 2663\r\nf 2663 2665 2564\r\nf 2473 2468 2561\r\nf 2561 2564 2473\r\nf 2354 2350 2468\r\nf 2468 2473 2354\r\nf 2155 2152 2350\r\nf 2350 2354 2155\r\nf 1927 1717 2152\r\nf 2152 2155 1927\r\nf 2911 2903 2923\r\nf 2923 2935 2911\r\nf 2875 2865 2903\r\nf 2903 2911 2875\r\nf 2823 2815 2865\r\nf 2865 2875 2823\r\nf 2741 2733 2815\r\nf 2815 2823 2741\r\nf 2671 2665 2733\r\nf 2733 2741 2671\r\nf 2571 2564 2665\r\nf 2665 2671 2571\r\nf 2478 2473 2564\r\nf 2564 2571 2478\r\nf 2360 2354 2473\r\nf 2473 2478 2360\r\nf 2160 2155 2354\r\nf 2354 2360 2160\r\nf 1718 1927 2155\r\nf 2155 2160 1718\r\nf 2929 2911 2935\r\nf 2935 2947 2929\r\nf 2881 2875 2911\r\nf 2911 2929 2881\r\nf 2829 2823 2875\r\nf 2875 2881 2829\r\nf 2751 2741 2823\r\nf 2823 2829 2751\r\nf 2677 2671 2741\r\nf 2741 2751 2677\r\nf 2577 2571 2671\r\nf 2671 2677 2577\r\nf 2482 2478 2571\r\nf 2571 2577 2482\r\nf 2364 2360 2478\r\nf 2478 2482 2364\r\nf 2164 2160 2360\r\nf 2360 2364 2164\r\nf 1842 1718 2160\r\nf 2160 2164 1842\r\nf 2945 2929 2947\r\nf 2947 2959 2945\r\nf 2897 2881 2929\r\nf 2929 2945 2897\r\nf 2835 2829 2881\r\nf 2881 2897 2835\r\nf 2761 2751 2829\r\nf 2829 2835 2761\r\nf 2679 2677 2751\r\nf 2751 2761 2679\r\nf 2579 2577 2677\r\nf 2677 2679 2579\r\nf 2486 2482 2577\r\nf 2577 2579 2486\r\nf 2368 2364 2482\r\nf 2482 2486 2368\r\nf 2172 2164 2364\r\nf 2364 2368 2172\r\nf 1725 1842 2164\r\nf 2164 2172 1725\r\nf 2965 2945 2959\r\nf 2959 2981 2965\r\nf 2907 2897 2945\r\nf 2945 2965 2907\r\nf 2845 2835 2897\r\nf 2897 2907 2845\r\nf 2769 2761 2835\r\nf 2835 2845 2769\r\nf 2685 2679 2761\r\nf 2761 2769 2685\r\nf 2587 2579 2679\r\nf 2679 2685 2587\r\nf 2491 2486 2579\r\nf 2579 2587 2491\r\nf 2370 2368 2486\r\nf 2486 2491 2370\r\nf 2174 2172 2368\r\nf 2368 2370 2174\r\nf 1834 1725 2172\r\nf 2172 2174 1834\r\nf 2982 2965 2981\r\nf 2981 2988 2982\r\nf 2933 2907 2965\r\nf 2965 2982 2933\r\nf 2855 2845 2907\r\nf 2907 2933 2855\r\nf 2779 2769 2845\r\nf 2845 2855 2779\r\nf 2691 2685 2769\r\nf 2769 2779 2691\r\nf 2595 2587 2685\r\nf 2685 2691 2595\r\nf 2500 2491 2587\r\nf 2587 2595 2500\r\nf 2374 2370 2491\r\nf 2491 2500 2374\r\nf 2178 2174 2370\r\nf 2370 2374 2178\r\nf 1716 1834 2174\r\nf 2174 2178 1716\r\nf 2990 2982 2988\r\nf 2988 3002 2990\r\nf 2949 2933 2982\r\nf 2982 2990 2949\r\nf 2871 2855 2933\r\nf 2933 2949 2871\r\nf 2791 2779 2855\r\nf 2855 2871 2791\r\nf 2699 2691 2779\r\nf 2779 2791 2699\r\nf 2601 2595 2691\r\nf 2691 2699 2601\r\nf 2506 2500 2595\r\nf 2595 2601 2506\r\nf 2378 2374 2500\r\nf 2500 2506 2378\r\nf 2180 2178 2374\r\nf 2374 2378 2180\r\nf 1714 1716 2178\r\nf 2178 2180 1714\r\nf 3008 2990 3002\r\nf 3002 3024 3008\r\nf 2973 2949 2990\r\nf 2990 3008 2973\r\nf 2889 2871 2949\r\nf 2949 2973 2889\r\nf 2805 2791 2871\r\nf 2871 2889 2805\r\nf 2711 2699 2791\r\nf 2791 2805 2711\r\nf 2611 2601 2699\r\nf 2699 2711 2611\r\nf 2521 2506 2601\r\nf 2601 2611 2521\r\nf 2387 2378 2506\r\nf 2506 2521 2387\r\nf 2191 2180 2378\r\nf 2378 2387 2191\r\nf 1810 1714 2180\r\nf 2180 2191 1810\r\nf 1464 1460 1813\r\nf 1813 1821 1464\r\nf 1264 1260 1460\r\nf 1460 1464 1264\r\nf 1146 1142 1260\r\nf 1260 1264 1146\r\nf 1055 1047 1142\r\nf 1142 1146 1055\r\nf 953 949 1047\r\nf 1047 1055 953\r\nf 885 875 949\r\nf 949 953 885\r\nf 803 795 875\r\nf 875 885 803\r\nf 753 745 795\r\nf 795 803 753\r\nf 713 701 745\r\nf 745 753 713\r\nf 691 683 701\r\nf 701 713 691\r\nf 1470 1464 1821\r\nf 1821 1829 1470\r\nf 1272 1264 1464\r\nf 1464 1470 1272\r\nf 1154 1146 1264\r\nf 1264 1272 1154\r\nf 1061 1055 1146\r\nf 1146 1154 1061\r\nf 959 953 1055\r\nf 1055 1061 959\r\nf 893 885 953\r\nf 953 959 893\r\nf 809 803 885\r\nf 885 893 809\r\nf 759 753 803\r\nf 803 809 759\r\nf 721 713 753\r\nf 753 759 721\r\nf 705 691 713\r\nf 713 721 705\r\nf 1469 1470 1829\r\nf 1829 1835 1469\r\nf 1268 1272 1470\r\nf 1470 1469 1268\r\nf 1151 1154 1272\r\nf 1272 1268 1151\r\nf 1060 1061 1154\r\nf 1154 1151 1060\r\nf 957 959 1061\r\nf 1061 1060 957\r\nf 889 893 959\r\nf 959 957 889\r\nf 807 809 893\r\nf 893 889 807\r\nf 757 759 809\r\nf 809 807 757\r\nf 719 721 759\r\nf 759 757 719\r\nf 699 705 721\r\nf 721 719 699\r\nf 1462 1469 1835\r\nf 1835 1839 1462\r\nf 1262 1268 1469\r\nf 1469 1462 1262\r\nf 1144 1151 1268\r\nf 1268 1262 1144\r\nf 1051 1060 1151\r\nf 1151 1144 1051\r\nf 951 957 1060\r\nf 1060 1051 951\r\nf 881 889 957\r\nf 957 951 881\r\nf 799 807 889\r\nf 889 881 799\r\nf 747 757 807\r\nf 807 799 747\r\nf 711 719 757\r\nf 757 747 711\r\nf 687 699 719\r\nf 719 711 687\r\nf 1458 1462 1839\r\nf 1839 1843 1458\r\nf 1258 1262 1462\r\nf 1462 1458 1258\r\nf 1140 1144 1262\r\nf 1262 1258 1140\r\nf 1045 1051 1144\r\nf 1144 1140 1045\r\nf 945 951 1051\r\nf 1051 1045 945\r\nf 871 881 951\r\nf 951 945 871\r\nf 793 799 881\r\nf 881 871 793\r\nf 741 747 799\r\nf 799 793 741\r\nf 693 711 747\r\nf 747 741 693\r\nf 675 687 711\r\nf 711 693 675\r\nf 1450 1458 1843\r\nf 1843 1838 1450\r\nf 1254 1258 1458\r\nf 1458 1450 1254\r\nf 1136 1140 1258\r\nf 1258 1254 1136\r\nf 1043 1045 1140\r\nf 1140 1136 1043\r\nf 943 945 1045\r\nf 1045 1043 943\r\nf 861 871 945\r\nf 945 943 861\r\nf 787 793 871\r\nf 871 861 787\r\nf 725 741 793\r\nf 793 787 725\r\nf 677 693 741\r\nf 741 725 677\r\nf 663 675 693\r\nf 693 677 663\r\nf 1448 1450 1838\r\nf 1838 1834 1448\r\nf 1252 1254 1450\r\nf 1450 1448 1252\r\nf 1133 1136 1254\r\nf 1254 1252 1133\r\nf 1035 1043 1136\r\nf 1136 1133 1035\r\nf 937 943 1043\r\nf 1043 1035 937\r\nf 853 861 943\r\nf 943 937 853\r\nf 777 787 861\r\nf 861 853 777\r\nf 715 725 787\r\nf 787 777 715\r\nf 657 677 725\r\nf 725 715 657\r\nf 642 663 677\r\nf 677 657 642\r\nf 1444 1448 1834\r\nf 1834 1828 1444\r\nf 1248 1252 1448\r\nf 1448 1444 1248\r\nf 1122 1133 1252\r\nf 1252 1248 1122\r\nf 1027 1035 1133\r\nf 1133 1122 1027\r\nf 931 937 1035\r\nf 1035 1027 931\r\nf 843 853 937\r\nf 937 931 843\r\nf 767 777 853\r\nf 853 843 767\r\nf 689 715 777\r\nf 777 767 689\r\nf 640 657 715\r\nf 715 689 640\r\nf 634 642 657\r\nf 657 640 634\r\nf 1442 1444 1828\r\nf 1828 1820 1442\r\nf 1244 1248 1444\r\nf 1444 1442 1244\r\nf 1116 1122 1248\r\nf 1248 1244 1116\r\nf 1021 1027 1122\r\nf 1122 1116 1021\r\nf 923 931 1027\r\nf 1027 1021 923\r\nf 831 843 931\r\nf 931 923 831\r\nf 751 767 843\r\nf 843 831 751\r\nf 673 689 767\r\nf 767 751 673\r\nf 632 640 689\r\nf 689 673 632\r\nf 620 634 640\r\nf 640 632 620\r\nf 1429 1442 1820\r\nf 1820 1811 1429\r\nf 1233 1244 1442\r\nf 1442 1429 1233\r\nf 1106 1116 1244\r\nf 1244 1233 1106\r\nf 1011 1021 1116\r\nf 1116 1106 1011\r\nf 911 923 1021\r\nf 1021 1011 911\r\nf 817 831 923\r\nf 923 911 817\r\nf 733 751 831\r\nf 831 817 733\r\nf 649 673 751\r\nf 751 733 649\r\nf 614 632 673\r\nf 673 649 614\r\nf 597 620 632\r\nf 632 614 597\r\nf 714 702 684\r\nf 684 692 714\r\nf 754 746 702\r\nf 702 714 754\r\nf 804 796 746\r\nf 746 754 804\r\nf 886 876 796\r\nf 796 804 886\r\nf 954 950 876\r\nf 876 886 954\r\nf 1056 1048 950\r\nf 950 954 1056\r\nf 1147 1143 1048\r\nf 1048 1056 1147\r\nf 1265 1261 1143\r\nf 1143 1147 1265\r\nf 1465 1461 1261\r\nf 1261 1265 1465\r\nf 1915 1817 1461\r\nf 1461 1465 1915\r\nf 722 714 692\r\nf 692 706 722\r\nf 760 754 714\r\nf 714 722 760\r\nf 810 804 754\r\nf 754 760 810\r\nf 894 886 804\r\nf 804 810 894\r\nf 960 954 886\r\nf 886 894 960\r\nf 1062 1056 954\r\nf 954 960 1062\r\nf 1155 1147 1056\r\nf 1056 1062 1155\r\nf 1273 1265 1147\r\nf 1147 1155 1273\r\nf 1471 1465 1265\r\nf 1265 1273 1471\r\nf 1917 1915 1465\r\nf 1465 1471 1917\r\nf 720 722 706\r\nf 706 700 720\r\nf 758 760 722\r\nf 722 720 758\r\nf 808 810 760\r\nf 760 758 808\r\nf 890 894 810\r\nf 810 808 890\r\nf 958 960 894\r\nf 894 890 958\r\nf 1059 1062 960\r\nf 960 958 1059\r\nf 1150 1155 1062\r\nf 1062 1059 1150\r\nf 1269 1273 1155\r\nf 1155 1150 1269\r\nf 1468 1471 1273\r\nf 1273 1269 1468\r\nf 1697 1917 1471\r\nf 1471 1468 1697\r\nf 712 720 700\r\nf 700 688 712\r\nf 748 758 720\r\nf 720 712 748\r\nf 800 808 758\r\nf 758 748 800\r\nf 882 890 808\r\nf 808 800 882\r\nf 952 958 890\r\nf 890 882 952\r\nf 1052 1059 958\r\nf 958 952 1052\r\nf 1145 1150 1059\r\nf 1059 1052 1145\r\nf 1263 1269 1150\r\nf 1150 1145 1263\r\nf 1463 1468 1269\r\nf 1269 1263 1463\r\nf 1919 1697 1468\r\nf 1468 1463 1919\r\nf 694 712 688\r\nf 688 676 694\r\nf 742 748 712\r\nf 712 694 742\r\nf 794 800 748\r\nf 748 742 794\r\nf 872 882 800\r\nf 800 794 872\r\nf 946 952 882\r\nf 882 872 946\r\nf 1046 1052 952\r\nf 952 946 1046\r\nf 1141 1145 1052\r\nf 1052 1046 1141\r\nf 1259 1263 1145\r\nf 1145 1141 1259\r\nf 1459 1463 1263\r\nf 1263 1259 1459\r\nf 1845 1919 1463\r\nf 1463 1459 1845\r\nf 678 694 676\r\nf 676 664 678\r\nf 726 742 694\r\nf 694 678 726\r\nf 788 794 742\r\nf 742 726 788\r\nf 862 872 794\r\nf 794 788 862\r\nf 944 946 872\r\nf 872 862 944\r\nf 1044 1046 946\r\nf 946 944 1044\r\nf 1137 1141 1046\r\nf 1046 1044 1137\r\nf 1255 1259 1141\r\nf 1141 1137 1255\r\nf 1451 1459 1259\r\nf 1259 1255 1451\r\nf 1898 1845 1459\r\nf 1459 1451 1898\r\nf 658 678 664\r\nf 664 642 658\r\nf 716 726 678\r\nf 678 658 716\r\nf 778 788 726\r\nf 726 716 778\r\nf 854 862 788\r\nf 788 778 854\r\nf 938 944 862\r\nf 862 854 938\r\nf 1036 1044 944\r\nf 944 938 1036\r\nf 1132 1137 1044\r\nf 1044 1036 1132\r\nf 1253 1255 1137\r\nf 1137 1132 1253\r\nf 1449 1451 1255\r\nf 1255 1253 1449\r\nf 1837 1898 1451\r\nf 1451 1449 1837\r\nf 641 658 642\r\nf 642 635 641\r\nf 690 716 658\r\nf 658 641 690\r\nf 768 778 716\r\nf 716 690 768\r\nf 844 854 778\r\nf 778 768 844\r\nf 932 938 854\r\nf 854 844 932\r\nf 1028 1036 938\r\nf 938 932 1028\r\nf 1123 1132 1036\r\nf 1036 1028 1123\r\nf 1249 1253 1132\r\nf 1132 1123 1249\r\nf 1445 1449 1253\r\nf 1253 1249 1445\r\nf 1918 1837 1449\r\nf 1449 1445 1918\r\nf 633 641 635\r\nf 635 621 633\r\nf 674 690 641\r\nf 641 633 674\r\nf 752 768 690\r\nf 690 674 752\r\nf 832 844 768\r\nf 768 752 832\r\nf 924 932 844\r\nf 844 832 924\r\nf 1022 1028 932\r\nf 932 924 1022\r\nf 1117 1123 1028\r\nf 1028 1022 1117\r\nf 1245 1249 1123\r\nf 1123 1117 1245\r\nf 1443 1445 1249\r\nf 1249 1245 1443\r\nf 1916 1918 1445\r\nf 1445 1443 1916\r\nf 616 633 621\r\nf 621 600 616\r\nf 654 674 633\r\nf 633 616 654\r\nf 737 752 674\r\nf 674 654 737\r\nf 822 832 752\r\nf 752 737 822\r\nf 914 924 832\r\nf 832 822 914\r\nf 1014 1022 924\r\nf 924 914 1014\r\nf 1104 1117 1022\r\nf 1022 1014 1104\r\nf 1237 1245 1117\r\nf 1117 1104 1237\r\nf 1433 1443 1245\r\nf 1245 1237 1433\r\nf 1819 1916 1443\r\nf 1443 1433 1819\r\nf 2159 2163 1816\r\nf 1816 1822 2159\r\nf 2359 2363 2163\r\nf 2163 2159 2359\r\nf 2477 2481 2363\r\nf 2363 2359 2477\r\nf 2568 2576 2481\r\nf 2481 2477 2568\r\nf 2670 2674 2576\r\nf 2576 2568 2670\r\nf 2738 2748 2674\r\nf 2674 2670 2738\r\nf 2820 2828 2748\r\nf 2748 2738 2820\r\nf 2870 2878 2828\r\nf 2828 2820 2870\r\nf 2910 2922 2878\r\nf 2878 2870 2910\r\nf 2932 2940 2922\r\nf 2922 2910 2932\r\nf 2153 2159 1822\r\nf 1822 1830 2153\r\nf 2351 2359 2159\r\nf 2159 2153 2351\r\nf 2469 2477 2359\r\nf 2359 2351 2469\r\nf 2562 2568 2477\r\nf 2477 2469 2562\r\nf 2664 2670 2568\r\nf 2568 2562 2664\r\nf 2730 2738 2670\r\nf 2670 2664 2730\r\nf 2814 2820 2738\r\nf 2738 2730 2814\r\nf 2864 2870 2820\r\nf 2820 2814 2864\r\nf 2902 2910 2870\r\nf 2870 2864 2902\r\nf 2918 2932 2910\r\nf 2910 2902 2918\r\nf 2154 2153 1830\r\nf 1830 1836 2154\r\nf 2355 2351 2153\r\nf 2153 2154 2355\r\nf 2472 2469 2351\r\nf 2351 2355 2472\r\nf 2563 2562 2469\r\nf 2469 2472 2563\r\nf 2666 2664 2562\r\nf 2562 2563 2666\r\nf 2734 2730 2664\r\nf 2664 2666 2734\r\nf 2816 2814 2730\r\nf 2730 2734 2816\r\nf 2866 2864 2814\r\nf 2814 2816 2866\r\nf 2904 2902 2864\r\nf 2864 2866 2904\r\nf 2924 2918 2902\r\nf 2902 2904 2924\r\nf 2161 2154 1836\r\nf 1836 1840 2161\r\nf 2361 2355 2154\r\nf 2154 2161 2361\r\nf 2479 2472 2355\r\nf 2355 2361 2479\r\nf 2572 2563 2472\r\nf 2472 2479 2572\r\nf 2672 2666 2563\r\nf 2563 2572 2672\r\nf 2742 2734 2666\r\nf 2666 2672 2742\r\nf 2824 2816 2734\r\nf 2734 2742 2824\r\nf 2876 2866 2816\r\nf 2816 2824 2876\r\nf 2912 2904 2866\r\nf 2866 2876 2912\r\nf 2936 2924 2904\r\nf 2904 2912 2936\r\nf 2165 2161 1840\r\nf 1840 1844 2165\r\nf 2365 2361 2161\r\nf 2161 2165 2365\r\nf 2483 2479 2361\r\nf 2361 2365 2483\r\nf 2578 2572 2479\r\nf 2479 2483 2578\r\nf 2678 2672 2572\r\nf 2572 2578 2678\r\nf 2752 2742 2672\r\nf 2672 2678 2752\r\nf 2830 2824 2742\r\nf 2742 2752 2830\r\nf 2882 2876 2824\r\nf 2824 2830 2882\r\nf 2930 2912 2876\r\nf 2876 2882 2930\r\nf 2948 2936 2912\r\nf 2912 2930 2948\r\nf 2173 2165 1844\r\nf 1844 1841 2173\r\nf 2369 2365 2165\r\nf 2165 2173 2369\r\nf 2487 2483 2365\r\nf 2365 2369 2487\r\nf 2580 2578 2483\r\nf 2483 2487 2580\r\nf 2680 2678 2578\r\nf 2578 2580 2680\r\nf 2762 2752 2678\r\nf 2678 2680 2762\r\nf 2836 2830 2752\r\nf 2752 2762 2836\r\nf 2898 2882 2830\r\nf 2830 2836 2898\r\nf 2946 2930 2882\r\nf 2882 2898 2946\r\nf 2960 2948 2930\r\nf 2930 2946 2960\r\nf 2175 2173 1841\r\nf 1841 1837 2175\r\nf 2371 2369 2173\r\nf 2173 2175 2371\r\nf 2490 2487 2369\r\nf 2369 2371 2490\r\nf 2588 2580 2487\r\nf 2487 2490 2588\r\nf 2686 2680 2580\r\nf 2580 2588 2686\r\nf 2770 2762 2680\r\nf 2680 2686 2770\r\nf 2846 2836 2762\r\nf 2762 2770 2846\r\nf 2908 2898 2836\r\nf 2836 2846 2908\r\nf 2966 2946 2898\r\nf 2898 2908 2966\r\nf 2981 2960 2946\r\nf 2946 2966 2981\r\nf 2179 2175 1837\r\nf 1837 1831 2179\r\nf 2375 2371 2175\r\nf 2175 2179 2375\r\nf 2501 2490 2371\r\nf 2371 2375 2501\r\nf 2596 2588 2490\r\nf 2490 2501 2596\r\nf 2692 2686 2588\r\nf 2588 2596 2692\r\nf 2780 2770 2686\r\nf 2686 2692 2780\r\nf 2856 2846 2770\r\nf 2770 2780 2856\r\nf 2934 2908 2846\r\nf 2846 2856 2934\r\nf 2983 2966 2908\r\nf 2908 2934 2983\r\nf 2989 2981 2966\r\nf 2966 2983 2989\r\nf 2181 2179 1831\r\nf 1831 1823 2181\r\nf 2379 2375 2179\r\nf 2179 2181 2379\r\nf 2507 2501 2375\r\nf 2375 2379 2507\r\nf 2602 2596 2501\r\nf 2501 2507 2602\r\nf 2700 2692 2596\r\nf 2596 2602 2700\r\nf 2792 2780 2692\r\nf 2692 2700 2792\r\nf 2872 2856 2780\r\nf 2780 2792 2872\r\nf 2950 2934 2856\r\nf 2856 2872 2950\r\nf 2991 2983 2934\r\nf 2934 2950 2991\r\nf 3003 2989 2983\r\nf 2983 2991 3003\r\nf 2194 2181 1823\r\nf 1823 1818 2194\r\nf 2391 2379 2181\r\nf 2181 2194 2391\r\nf 2518 2507 2379\r\nf 2379 2391 2518\r\nf 2614 2602 2507\r\nf 2507 2518 2614\r\nf 2712 2700 2602\r\nf 2602 2614 2712\r\nf 2806 2792 2700\r\nf 2700 2712 2806\r\nf 2890 2872 2792\r\nf 2792 2806 2890\r\nf 2974 2950 2872\r\nf 2872 2890 2974\r\nf 3009 2991 2950\r\nf 2950 2974 3009\r\nf 3025 3003 2991\r\nf 2991 3009 3025\r\nf 3040 3008 3024\r\nf 3024 3048 3040\r\nf 3018 2973 3008\r\nf 3008 3040 3018\r\nf 2943 2889 2973\r\nf 2973 3018 2943\r\nf 2841 2805 2889\r\nf 2889 2943 2841\r\nf 2731 2711 2805\r\nf 2805 2841 2731\r\nf 2645 2611 2711\r\nf 2711 2731 2645\r\nf 2529 2521 2611\r\nf 2611 2645 2529\r\nf 2402 2387 2521\r\nf 2521 2529 2402\r\nf 2208 2191 2387\r\nf 2387 2402 2208\r\nf 1806 1810 2191\r\nf 2191 2208 1806\r\nf 3072 3040 3048\r\nf 3048 3078 3072\r\nf 3044 3018 3040\r\nf 3040 3072 3044\r\nf 2994 2943 3018\r\nf 3018 3044 2994\r\nf 2883 2841 2943\r\nf 2943 2994 2883\r\nf 2773 2731 2841\r\nf 2841 2883 2773\r\nf 2659 2645 2731\r\nf 2731 2773 2659\r\nf 2539 2529 2645\r\nf 2645 2659 2539\r\nf 2410 2402 2529\r\nf 2529 2539 2410\r\nf 2222 2208 2402\r\nf 2402 2410 2222\r\nf 1694 1806 2208\r\nf 2208 2222 1694\r\nf 3092 3072 3078\r\nf 3078 3116 3092\r\nf 3074 3044 3072\r\nf 3072 3092 3074\r\nf 3030 2994 3044\r\nf 3044 3074 3030\r\nf 2937 2883 2994\r\nf 2994 3030 2937\r\nf 2810 2773 2883\r\nf 2883 2937 2810\r\nf 2683 2659 2773\r\nf 2773 2810 2683\r\nf 2554 2539 2659\r\nf 2659 2683 2554\r\nf 2420 2410 2539\r\nf 2539 2554 2420\r\nf 2238 2222 2410\r\nf 2410 2420 2238\r\nf 1930 1694 2222\r\nf 2222 2238 1930\r\nf 3132 3092 3116\r\nf 3116 3142 3132\r\nf 3090 3074 3092\r\nf 3092 3132 3090\r\nf 3054 3030 3074\r\nf 3074 3090 3054\r\nf 2984 2937 3030\r\nf 3030 3054 2984\r\nf 2837 2810 2937\r\nf 2937 2984 2837\r\nf 2705 2683 2810\r\nf 2810 2837 2705\r\nf 2574 2554 2683\r\nf 2683 2705 2574\r\nf 2430 2420 2554\r\nf 2554 2574 2430\r\nf 2247 2238 2420\r\nf 2420 2430 2247\r\nf 1913 1930 2238\r\nf 2238 2247 1913\r\nf 3150 3132 3142\r\nf 3142 3156 3150\r\nf 3128 3090 3132\r\nf 3132 3150 3128\r\nf 3076 3054 3090\r\nf 3090 3128 3076\r\nf 3014 2984 3054\r\nf 3054 3076 3014\r\nf 2861 2837 2984\r\nf 2984 3014 2861\r\nf 2723 2705 2837\r\nf 2837 2861 2723\r\nf 2585 2574 2705\r\nf 2705 2723 2585\r\nf 2438 2430 2574\r\nf 2574 2585 2438\r\nf 2253 2247 2430\r\nf 2430 2438 2253\r\nf 1711 1913 2247\r\nf 2247 2253 1711\r\nf 3162 3150 3156\r\nf 3156 3172 3162\r\nf 3148 3128 3150\r\nf 3150 3162 3148\r\nf 3088 3076 3128\r\nf 3128 3148 3088\r\nf 3036 3014 3076\r\nf 3076 3088 3036\r\nf 2893 2861 3014\r\nf 3014 3036 2893\r\nf 2743 2723 2861\r\nf 2861 2893 2743\r\nf 2599 2585 2723\r\nf 2723 2743 2599\r\nf 2450 2438 2585\r\nf 2585 2599 2450\r\nf 2267 2253 2438\r\nf 2438 2450 2267\r\nf 1794 1711 2253\r\nf 2253 2267 1794\r\nf 3178 3162 3172\r\nf 3172 3184 3178\r\nf 3154 3148 3162\r\nf 3162 3178 3154\r\nf 3118 3088 3148\r\nf 3148 3154 3118\r\nf 3046 3036 3088\r\nf 3088 3118 3046\r\nf 2915 2893 3036\r\nf 3036 3046 2915\r\nf 2763 2743 2893\r\nf 2893 2915 2763\r\nf 2615 2599 2743\r\nf 2743 2763 2615\r\nf 2452 2450 2599\r\nf 2599 2615 2452\r\nf 2277 2267 2450\r\nf 2450 2452 2277\r\nf 1710 1794 2267\r\nf 2267 2277 1710\r\nf 3188 3178 3184\r\nf 3184 3200 3188\r\nf 3164 3154 3178\r\nf 3178 3188 3164\r\nf 3130 3118 3154\r\nf 3154 3164 3130\r\nf 3058 3046 3118\r\nf 3118 3130 3058\r\nf 2941 2915 3046\r\nf 3046 3058 2941\r\nf 2775 2763 2915\r\nf 2915 2941 2775\r\nf 2627 2615 2763\r\nf 2763 2775 2627\r\nf 2458 2452 2615\r\nf 2615 2627 2458\r\nf 2287 2277 2452\r\nf 2452 2458 2287\r\nf 1910 1710 2277\r\nf 2277 2287 1910\r\nf 3198 3188 3200\r\nf 3200 3209 3198\r\nf 3170 3164 3188\r\nf 3188 3198 3170\r\nf 3136 3130 3164\r\nf 3164 3170 3136\r\nf 3064 3058 3130\r\nf 3130 3136 3064\r\nf 2955 2941 3058\r\nf 3058 3064 2955\r\nf 2781 2775 2941\r\nf 2941 2955 2781\r\nf 2636 2627 2775\r\nf 2775 2781 2636\r\nf 2462 2458 2627\r\nf 2627 2636 2462\r\nf 2295 2287 2458\r\nf 2458 2462 2295\r\nf 1909 1910 2287\r\nf 2287 2295 1909\r\nf 3202 3198 3209\r\nf 3209 3213 3202\r\nf 3174 3170 3198\r\nf 3198 3202 3174\r\nf 3138 3136 3170\r\nf 3170 3174 3138\r\nf 3066 3064 3136\r\nf 3136 3138 3066\r\nf 2961 2955 3064\r\nf 3064 3066 2961\r\nf 2783 2781 2955\r\nf 2955 2961 2783\r\nf 2642 2636 2781\r\nf 2781 2783 2642\r\nf 2464 2462 2636\r\nf 2636 2642 2464\r\nf 2297 2295 2462\r\nf 2462 2464 2297\r\nf 1784 1909 2295\r\nf 2295 2297 1784\r\nf 1414 1429 1811\r\nf 1811 1807 1414\r\nf 1220 1233 1429\r\nf 1429 1414 1220\r\nf 1093 1106 1233\r\nf 1233 1220 1093\r\nf 977 1011 1106\r\nf 1106 1093 977\r\nf 891 911 1011\r\nf 1011 977 891\r\nf 781 817 911\r\nf 911 891 781\r\nf 679 733 817\r\nf 817 781 679\r\nf 604 649 733\r\nf 733 679 604\r\nf 571 614 649\r\nf 649 604 571\r\nf 561 597 614\r\nf 614 571 561\r\nf 1400 1414 1807\r\nf 1807 1804 1400\r\nf 1212 1220 1414\r\nf 1414 1400 1212\r\nf 1083 1093 1220\r\nf 1220 1212 1083\r\nf 963 977 1093\r\nf 1093 1083 963\r\nf 849 891 977\r\nf 977 963 849\r\nf 739 781 891\r\nf 891 849 739\r\nf 628 679 781\r\nf 781 739 628\r\nf 565 604 679\r\nf 679 628 565\r\nf 530 571 604\r\nf 604 565 530\r\nf 524 561 571\r\nf 571 530 524\r\nf 1386 1400 1804\r\nf 1804 1802 1386\r\nf 1202 1212 1400\r\nf 1400 1386 1202\r\nf 1070 1083 1212\r\nf 1212 1202 1070\r\nf 939 963 1083\r\nf 1083 1070 939\r\nf 814 849 963\r\nf 963 939 814\r\nf 685 739 849\r\nf 849 814 685\r\nf 585 628 739\r\nf 739 685 585\r\nf 528 565 628\r\nf 628 585 528\r\nf 510 530 565\r\nf 565 528 510\r\nf 508 524 530\r\nf 530 510 508\r\nf 1375 1386 1802\r\nf 1802 1800 1375\r\nf 1192 1202 1386\r\nf 1386 1375 1192\r\nf 1050 1070 1202\r\nf 1202 1192 1050\r\nf 917 939 1070\r\nf 1070 1050 917\r\nf 785 814 939\r\nf 939 917 785\r\nf 638 685 814\r\nf 814 785 638\r\nf 553 585 685\r\nf 685 638 553\r\nf 512 528 585\r\nf 585 553 512\r\nf 492 510 528\r\nf 528 512 492\r\nf 482 508 510\r\nf 510 492 482\r\nf 1369 1375 1800\r\nf 1800 1798 1369\r\nf 1184 1192 1375\r\nf 1375 1369 1184\r\nf 1037 1050 1192\r\nf 1192 1184 1037\r\nf 899 917 1050\r\nf 1050 1037 899\r\nf 761 785 917\r\nf 917 899 761\r\nf 608 638 785\r\nf 785 761 608\r\nf 526 553 638\r\nf 638 608 526\r\nf 496 512 553\r\nf 553 526 496\r\nf 454 492 512\r\nf 512 496 454\r\nf 448 482 492\r\nf 492 454 448\r\nf 1355 1369 1798\r\nf 1798 1795 1355\r\nf 1172 1184 1369\r\nf 1369 1355 1172\r\nf 1023 1037 1184\r\nf 1184 1172 1023\r\nf 879 899 1037\r\nf 1037 1023 879\r\nf 729 761 899\r\nf 899 879 729\r\nf 579 608 761\r\nf 761 729 579\r\nf 514 526 608\r\nf 608 579 514\r\nf 457 496 526\r\nf 526 514 457\r\nf 442 454 496\r\nf 496 457 442\r\nf 432 448 454\r\nf 454 442 432\r\nf 1345 1355 1795\r\nf 1795 1792 1345\r\nf 1170 1172 1355\r\nf 1355 1345 1170\r\nf 1007 1023 1172\r\nf 1172 1170 1007\r\nf 859 879 1023\r\nf 1023 1007 859\r\nf 707 729 879\r\nf 879 859 707\r\nf 563 579 729\r\nf 729 707 563\r\nf 506 514 579\r\nf 579 563 506\r\nf 450 457 514\r\nf 514 506 450\r\nf 420 442 457\r\nf 457 450 420\r\nf 412 432 442\r\nf 442 420 412\r\nf 1335 1345 1792\r\nf 1792 1790 1335\r\nf 1164 1170 1345\r\nf 1345 1335 1164\r\nf 995 1007 1170\r\nf 1170 1164 995\r\nf 847 859 1007\r\nf 1007 995 847\r\nf 681 707 859\r\nf 859 847 681\r\nf 547 563 707\r\nf 707 681 547\r\nf 494 506 563\r\nf 563 547 494\r\nf 440 450 506\r\nf 506 494 440\r\nf 410 420 450\r\nf 450 440 410\r\nf 398 412 420\r\nf 420 410 398\r\nf 1327 1335 1790\r\nf 1790 1788 1327\r\nf 1160 1164 1335\r\nf 1335 1327 1160\r\nf 988 995 1164\r\nf 1164 1160 988\r\nf 841 847 995\r\nf 995 988 841\r\nf 667 681 847\r\nf 847 841 667\r\nf 538 547 681\r\nf 681 667 538\r\nf 488 494 547\r\nf 547 538 488\r\nf 434 440 494\r\nf 494 488 434\r\nf 400 410 440\r\nf 440 434 400\r\nf 381 398 410\r\nf 410 400 381\r\nf 1324 1327 1788\r\nf 1788 1785 1324\r\nf 1156 1160 1327\r\nf 1327 1324 1156\r\nf 979 988 1160\r\nf 1160 1156 979\r\nf 837 841 988\r\nf 988 979 837\r\nf 659 667 841\r\nf 841 837 659\r\nf 534 538 667\r\nf 667 659 534\r\nf 484 488 538\r\nf 538 534 484\r\nf 428 434 488\r\nf 488 484 428\r\nf 395 400 434\r\nf 434 428 395\r\nf 374 381 400\r\nf 400 395 374\r\nf 572 616 600\r\nf 600 562 572\r\nf 605 654 616\r\nf 616 572 605\r\nf 680 737 654\r\nf 654 605 680\r\nf 782 822 737\r\nf 737 680 782\r\nf 892 914 822\r\nf 822 782 892\r\nf 978 1014 914\r\nf 914 892 978\r\nf 1094 1104 1014\r\nf 1014 978 1094\r\nf 1221 1237 1104\r\nf 1104 1094 1221\r\nf 1415 1433 1237\r\nf 1237 1221 1415\r\nf 1809 1819 1433\r\nf 1433 1415 1809\r\nf 531 572 562\r\nf 562 525 531\r\nf 566 605 572\r\nf 572 531 566\r\nf 629 680 605\r\nf 605 566 629\r\nf 740 782 680\r\nf 680 629 740\r\nf 850 892 782\r\nf 782 740 850\r\nf 964 978 892\r\nf 892 850 964\r\nf 1084 1094 978\r\nf 978 964 1084\r\nf 1213 1221 1094\r\nf 1094 1084 1213\r\nf 1401 1415 1221\r\nf 1221 1213 1401\r\nf 1931 1809 1415\r\nf 1415 1401 1931\r\nf 511 531 525\r\nf 525 509 511\r\nf 529 566 531\r\nf 531 511 529\r\nf 586 629 566\r\nf 566 529 586\r\nf 686 740 629\r\nf 629 586 686\r\nf 813 850 740\r\nf 740 686 813\r\nf 940 964 850\r\nf 850 813 940\r\nf 1069 1084 964\r\nf 964 940 1069\r\nf 1203 1213 1084\r\nf 1084 1069 1203\r\nf 1385 1401 1213\r\nf 1213 1203 1385\r\nf 1693 1931 1401\r\nf 1401 1385 1693\r\nf 493 511 509\r\nf 509 483 493\r\nf 513 529 511\r\nf 511 493 513\r\nf 554 586 529\r\nf 529 513 554\r\nf 639 686 586\r\nf 586 554 639\r\nf 786 813 686\r\nf 686 639 786\r\nf 918 940 813\r\nf 813 786 918\r\nf 1049 1069 940\r\nf 940 918 1049\r\nf 1193 1203 1069\r\nf 1069 1049 1193\r\nf 1376 1385 1203\r\nf 1203 1193 1376\r\nf 1712 1693 1385\r\nf 1385 1376 1712\r\nf 455 493 483\r\nf 483 449 455\r\nf 497 513 493\r\nf 493 455 497\r\nf 527 554 513\r\nf 513 497 527\r\nf 609 639 554\r\nf 554 527 609\r\nf 762 786 639\r\nf 639 609 762\r\nf 900 918 786\r\nf 786 762 900\r\nf 1038 1049 918\r\nf 918 900 1038\r\nf 1185 1193 1049\r\nf 1049 1038 1185\r\nf 1370 1376 1193\r\nf 1193 1185 1370\r\nf 1912 1712 1376\r\nf 1376 1370 1912\r\nf 443 455 449\r\nf 449 433 443\r\nf 458 497 455\r\nf 455 443 458\r\nf 515 527 497\r\nf 497 458 515\r\nf 580 609 527\r\nf 527 515 580\r\nf 730 762 609\r\nf 609 580 730\r\nf 880 900 762\r\nf 762 730 880\r\nf 1024 1038 900\r\nf 900 880 1024\r\nf 1173 1185 1038\r\nf 1038 1024 1173\r\nf 1356 1370 1185\r\nf 1185 1173 1356\r\nf 1797 1912 1370\r\nf 1370 1356 1797\r\nf 421 443 433\r\nf 433 413 421\r\nf 451 458 443\r\nf 443 421 451\r\nf 507 515 458\r\nf 458 451 507\r\nf 564 580 515\r\nf 515 507 564\r\nf 708 730 580\r\nf 580 564 708\r\nf 860 880 730\r\nf 730 708 860\r\nf 1008 1024 880\r\nf 880 860 1008\r\nf 1171 1173 1024\r\nf 1024 1008 1171\r\nf 1346 1356 1173\r\nf 1173 1171 1346\r\nf 1911 1797 1356\r\nf 1356 1346 1911\r\nf 411 421 413\r\nf 413 399 411\r\nf 441 451 421\r\nf 421 411 441\r\nf 495 507 451\r\nf 451 441 495\r\nf 548 564 507\r\nf 507 495 548\r\nf 682 708 564\r\nf 564 548 682\r\nf 848 860 708\r\nf 708 682 848\r\nf 996 1008 860\r\nf 860 848 996\r\nf 1165 1171 1008\r\nf 1008 996 1165\r\nf 1336 1346 1171\r\nf 1171 1165 1336\r\nf 1709 1911 1346\r\nf 1346 1336 1709\r\nf 401 411 399\r\nf 399 382 401\r\nf 435 441 411\r\nf 411 401 435\r\nf 489 495 441\r\nf 441 435 489\r\nf 539 548 495\r\nf 495 489 539\r\nf 668 682 548\r\nf 548 539 668\r\nf 842 848 682\r\nf 682 668 842\r\nf 987 996 848\r\nf 848 842 987\r\nf 1161 1165 996\r\nf 996 987 1161\r\nf 1328 1336 1165\r\nf 1165 1161 1328\r\nf 1708 1709 1336\r\nf 1336 1328 1708\r\nf 397 401 382\r\nf 382 376 397\r\nf 431 435 401\r\nf 401 397 431\r\nf 487 489 435\r\nf 435 431 487\r\nf 537 539 489\r\nf 489 487 537\r\nf 662 668 539\r\nf 539 537 662\r\nf 840 842 668\r\nf 668 662 840\r\nf 981 987 842\r\nf 842 840 981\r\nf 1159 1161 987\r\nf 987 981 1159\r\nf 1326 1328 1161\r\nf 1161 1159 1326\r\nf 1787 1708 1328\r\nf 1328 1326 1787\r\nf 2209 2194 1818\r\nf 1818 1808 2209\r\nf 2403 2391 2194\r\nf 2194 2209 2403\r\nf 2530 2518 2391\r\nf 2391 2403 2530\r\nf 2646 2614 2518\r\nf 2518 2530 2646\r\nf 2732 2712 2614\r\nf 2614 2646 2732\r\nf 2842 2806 2712\r\nf 2712 2732 2842\r\nf 2944 2890 2806\r\nf 2806 2842 2944\r\nf 3019 2974 2890\r\nf 2890 2944 3019\r\nf 3041 3009 2974\r\nf 2974 3019 3041\r\nf 3049 3025 3009\r\nf 3009 3041 3049\r\nf 2223 2209 1808\r\nf 1808 1805 2223\r\nf 2411 2403 2209\r\nf 2209 2223 2411\r\nf 2540 2530 2403\r\nf 2403 2411 2540\r\nf 2660 2646 2530\r\nf 2530 2540 2660\r\nf 2774 2732 2646\r\nf 2646 2660 2774\r\nf 2884 2842 2732\r\nf 2732 2774 2884\r\nf 2995 2944 2842\r\nf 2842 2884 2995\r\nf 3045 3019 2944\r\nf 2944 2995 3045\r\nf 3073 3041 3019\r\nf 3019 3045 3073\r\nf 3079 3049 3041\r\nf 3041 3073 3079\r\nf 2237 2223 1805\r\nf 1805 1803 2237\r\nf 2421 2411 2223\r\nf 2223 2237 2421\r\nf 2553 2540 2411\r\nf 2411 2421 2553\r\nf 2684 2660 2540\r\nf 2540 2553 2684\r\nf 2809 2774 2660\r\nf 2660 2684 2809\r\nf 2938 2884 2774\r\nf 2774 2809 2938\r\nf 3031 2995 2884\r\nf 2884 2938 3031\r\nf 3075 3045 2995\r\nf 2995 3031 3075\r\nf 3093 3073 3045\r\nf 3045 3075 3093\r\nf 3117 3079 3073\r\nf 3073 3093 3117\r\nf 2248 2237 1803\r\nf 1803 1801 2248\r\nf 2431 2421 2237\r\nf 2237 2248 2431\r\nf 2573 2553 2421\r\nf 2421 2431 2573\r\nf 2706 2684 2553\r\nf 2553 2573 2706\r\nf 2838 2809 2684\r\nf 2684 2706 2838\r\nf 2985 2938 2809\r\nf 2809 2838 2985\r\nf 3055 3031 2938\r\nf 2938 2985 3055\r\nf 3091 3075 3031\r\nf 3031 3055 3091\r\nf 3133 3093 3075\r\nf 3075 3091 3133\r\nf 3143 3117 3093\r\nf 3093 3133 3143\r\nf 2254 2248 1801\r\nf 1801 1799 2254\r\nf 2439 2431 2248\r\nf 2248 2254 2439\r\nf 2586 2573 2431\r\nf 2431 2439 2586\r\nf 2724 2706 2573\r\nf 2573 2586 2724\r\nf 2862 2838 2706\r\nf 2706 2724 2862\r\nf 3015 2985 2838\r\nf 2838 2862 3015\r\nf 3077 3055 2985\r\nf 2985 3015 3077\r\nf 3129 3091 3055\r\nf 3055 3077 3129\r\nf 3151 3133 3091\r\nf 3091 3129 3151\r\nf 3157 3143 3133\r\nf 3133 3151 3157\r\nf 2268 2254 1799\r\nf 1799 1796 2268\r\nf 2451 2439 2254\r\nf 2254 2268 2451\r\nf 2600 2586 2439\r\nf 2439 2451 2600\r\nf 2744 2724 2586\r\nf 2586 2600 2744\r\nf 2894 2862 2724\r\nf 2724 2744 2894\r\nf 3037 3015 2862\r\nf 2862 2894 3037\r\nf 3089 3077 3015\r\nf 3015 3037 3089\r\nf 3149 3129 3077\r\nf 3077 3089 3149\r\nf 3163 3151 3129\r\nf 3129 3149 3163\r\nf 3173 3157 3151\r\nf 3151 3163 3173\r\nf 2278 2268 1796\r\nf 1796 1793 2278\r\nf 2453 2451 2268\r\nf 2268 2278 2453\r\nf 2616 2600 2451\r\nf 2451 2453 2616\r\nf 2764 2744 2600\r\nf 2600 2616 2764\r\nf 2916 2894 2744\r\nf 2744 2764 2916\r\nf 3047 3037 2894\r\nf 2894 2916 3047\r\nf 3119 3089 3037\r\nf 3037 3047 3119\r\nf 3155 3149 3089\r\nf 3089 3119 3155\r\nf 3179 3163 3149\r\nf 3149 3155 3179\r\nf 3185 3173 3163\r\nf 3163 3179 3185\r\nf 2288 2278 1793\r\nf 1793 1791 2288\r\nf 2459 2453 2278\r\nf 2278 2288 2459\r\nf 2628 2616 2453\r\nf 2453 2459 2628\r\nf 2776 2764 2616\r\nf 2616 2628 2776\r\nf 2942 2916 2764\r\nf 2764 2776 2942\r\nf 3059 3047 2916\r\nf 2916 2942 3059\r\nf 3131 3119 3047\r\nf 3047 3059 3131\r\nf 3165 3155 3119\r\nf 3119 3131 3165\r\nf 3189 3179 3155\r\nf 3155 3165 3189\r\nf 3201 3185 3179\r\nf 3179 3189 3201\r\nf 2296 2288 1791\r\nf 1791 1789 2296\r\nf 2463 2459 2288\r\nf 2288 2296 2463\r\nf 2635 2628 2459\r\nf 2459 2463 2635\r\nf 2782 2776 2628\r\nf 2628 2635 2782\r\nf 2956 2942 2776\r\nf 2776 2782 2956\r\nf 3065 3059 2942\r\nf 2942 2956 3065\r\nf 3137 3131 3059\r\nf 3059 3065 3137\r\nf 3171 3165 3131\r\nf 3131 3137 3171\r\nf 3199 3189 3165\r\nf 3165 3171 3199\r\nf 3210 3201 3189\r\nf 3189 3199 3210\r\nf 2299 2296 1789\r\nf 1789 1786 2299\r\nf 2467 2463 2296\r\nf 2296 2299 2467\r\nf 2644 2635 2463\r\nf 2463 2467 2644\r\nf 2786 2782 2635\r\nf 2635 2644 2786\r\nf 2964 2956 2782\r\nf 2782 2786 2964\r\nf 3069 3065 2956\r\nf 2956 2964 3069\r\nf 3141 3137 3065\r\nf 3065 3069 3141\r\nf 3177 3171 3137\r\nf 3137 3141 3177\r\nf 3204 3199 3171\r\nf 3171 3177 3204\r\nf 3214 3210 3199\r\nf 3199 3204 3214\r\nf 3194 3202 3213\r\nf 3213 3207 3194\r\nf 3166 3175 3202\r\nf 3202 3194 3166\r\nf 3134 3139 3175\r\nf 3175 3166 3134\r\nf 3060 3067 3139\r\nf 3139 3134 3060\r\nf 2953 2962 3067\r\nf 3067 3060 2953\r\nf 2777 2784 2962\r\nf 2962 2953 2777\r\nf 2629 2643 2784\r\nf 2784 2777 2629\r\nf 2460 2465 2643\r\nf 2643 2629 2460\r\nf 2293 2298 2465\r\nf 2465 2460 2293\r\nf 1696 1785 2298\r\nf 2298 2293 1696\r\nf 3180 3194 3207\r\nf 3207 3190 3180\r\nf 3158 3166 3194\r\nf 3194 3180 3158\r\nf 3124 3134 3166\r\nf 3166 3158 3124\r\nf 3050 3060 3134\r\nf 3134 3124 3050\r\nf 2927 2953 3060\r\nf 3060 3050 2927\r\nf 2767 2777 2953\r\nf 2953 2927 2767\r\nf 2619 2629 2777\r\nf 2777 2767 2619\r\nf 2454 2460 2629\r\nf 2629 2619 2454\r\nf 2283 2293 2460\r\nf 2460 2454 2283\r\nf 1695 1696 2293\r\nf 2293 2283 1695\r\nf 3160 3180 3190\r\nf 3190 3168 3160\r\nf 3144 3158 3180\r\nf 3180 3160 3144\r\nf 3086 3124 3158\r\nf 3158 3144 3086\r\nf 3032 3050 3124\r\nf 3124 3086 3032\r\nf 2891 2927 3050\r\nf 3050 3032 2891\r\nf 2739 2767 2927\r\nf 2927 2891 2739\r\nf 2597 2619 2767\r\nf 2767 2739 2597\r\nf 2448 2454 2619\r\nf 2619 2597 2448\r\nf 2265 2283 2454\r\nf 2454 2448 2265\r\nf 1707 1695 2283\r\nf 2283 2265 1707\r\nf 3146 3160 3168\r\nf 3168 3152 3146\r\nf 3122 3144 3160\r\nf 3160 3146 3122\r\nf 3070 3086 3144\r\nf 3144 3122 3070\r\nf 2998 3032 3086\r\nf 3086 3070 2998\r\nf 2853 2891 3032\r\nf 3032 2998 2853\r\nf 2717 2739 2891\r\nf 2891 2853 2717\r\nf 2582 2597 2739\r\nf 2739 2717 2582\r\nf 2434 2448 2597\r\nf 2597 2582 2434\r\nf 2251 2265 2448\r\nf 2448 2434 2251\r\nf 1907 1707 2265\r\nf 2265 2251 1907\r\nf 3120 3146 3152\r\nf 3152 3126 3120\r\nf 3082 3122 3146\r\nf 3146 3120 3082\r\nf 3042 3070 3122\r\nf 3122 3082 3042\r\nf 2957 2998 3070\r\nf 3070 3042 2957\r\nf 2825 2853 2998\r\nf 2998 2957 2825\r\nf 2693 2717 2853\r\nf 2853 2825 2693\r\nf 2556 2582 2717\r\nf 2717 2693 2556\r\nf 2424 2434 2582\r\nf 2582 2556 2424\r\nf 2239 2251 2434\r\nf 2434 2424 2239\r\nf 1906 1907 2251\r\nf 2251 2239 1906\r\nf 3080 3120 3126\r\nf 3126 3084 3080\r\nf 3056 3082 3120\r\nf 3120 3080 3056\r\nf 3012 3042 3082\r\nf 3082 3056 3012\r\nf 2899 2957 3042\r\nf 3042 3012 2899\r\nf 2789 2825 2957\r\nf 2957 2899 2789\r\nf 2675 2693 2825\r\nf 2825 2789 2675\r\nf 2545 2556 2693\r\nf 2693 2675 2545\r\nf 2416 2424 2556\r\nf 2556 2545 2416\r\nf 2228 2239 2424\r\nf 2424 2416 2228\r\nf 1770 1906 2239\r\nf 2239 2228 1770\r\nf 3053 3080 3084\r\nf 3084 3062 3053\r\nf 3028 3056 3080\r\nf 3080 3053 3028\r\nf 2978 3012 3056\r\nf 3056 3028 2978\r\nf 2860 2899 3012\r\nf 3012 2978 2860\r\nf 2754 2789 2899\r\nf 2899 2860 2754\r\nf 2652 2675 2789\r\nf 2789 2754 2652\r\nf 2534 2545 2675\r\nf 2675 2652 2534\r\nf 2406 2416 2545\r\nf 2545 2534 2406\r\nf 2217 2228 2416\r\nf 2416 2406 2217\r\nf 1929 1770 2228\r\nf 2228 2217 1929\r\nf 3035 3053 3062\r\nf 3062 3039 3035\r\nf 2997 3028 3053\r\nf 3053 3035 2997\r\nf 2920 2978 3028\r\nf 3028 2997 2920\r\nf 2832 2860 2978\r\nf 2978 2920 2832\r\nf 2728 2754 2860\r\nf 2860 2832 2728\r\nf 2634 2652 2754\r\nf 2754 2728 2634\r\nf 2528 2534 2652\r\nf 2652 2634 2528\r\nf 2396 2406 2534\r\nf 2534 2528 2396\r\nf 2202 2217 2406\r\nf 2406 2396 2202\r\nf 1765 1929 2217\r\nf 2217 2202 1765\r\nf 3017 3035 3039\r\nf 3039 3027 3017\r\nf 2980 2997 3035\r\nf 3035 3017 2980\r\nf 2896 2920 2997\r\nf 2997 2980 2896\r\nf 2812 2832 2920\r\nf 2920 2896 2812\r\nf 2715 2728 2832\r\nf 2832 2812 2715\r\nf 2618 2634 2728\r\nf 2728 2715 2618\r\nf 2523 2528 2634\r\nf 2634 2618 2523\r\nf 2392 2396 2528\r\nf 2528 2523 2392\r\nf 2196 2202 2396\r\nf 2396 2392 2196\r\nf 1724 1765 2202\r\nf 2202 2196 1724\r\nf 3007 3017 3027\r\nf 3027 3023 3007\r\nf 2969 2980 3017\r\nf 3017 3007 2969\r\nf 2887 2896 2980\r\nf 2980 2969 2887\r\nf 2802 2812 2896\r\nf 2896 2887 2802\r\nf 2709 2715 2812\r\nf 2812 2802 2709\r\nf 2609 2618 2715\r\nf 2715 2709 2609\r\nf 2519 2523 2618\r\nf 2618 2609 2519\r\nf 2386 2392 2523\r\nf 2523 2519 2386\r\nf 2190 2196 2392\r\nf 2392 2386 2190\r\nf 1759 1724 2196\r\nf 2196 2190 1759\r\nf 1329 1324 1785\r\nf 1785 1782 1329\r\nf 1162 1157 1324\r\nf 1324 1329 1162\r\nf 993 982 1157\r\nf 1157 1162 993\r\nf 845 838 982\r\nf 982 993 845\r\nf 669 660 838\r\nf 838 845 669\r\nf 542 535 660\r\nf 660 669 542\r\nf 490 485 535\r\nf 535 542 490\r\nf 438 429 485\r\nf 485 490 438\r\nf 404 396 429\r\nf 429 438 404\r\nf 387 376 396\r\nf 396 404 387\r\nf 1339 1329 1782\r\nf 1782 1780 1339\r\nf 1168 1162 1329\r\nf 1329 1339 1168\r\nf 1003 993 1162\r\nf 1162 1168 1003\r\nf 855 845 993\r\nf 993 1003 855\r\nf 695 669 845\r\nf 845 855 695\r\nf 559 542 669\r\nf 669 695 559\r\nf 500 490 542\r\nf 542 559 500\r\nf 446 438 490\r\nf 490 500 446\r\nf 416 404 438\r\nf 438 446 416\r\nf 408 387 404\r\nf 404 416 408\r\nf 1357 1339 1780\r\nf 1780 1778 1357\r\nf 1174 1168 1339\r\nf 1339 1357 1174\r\nf 1025 1003 1168\r\nf 1168 1174 1025\r\nf 883 855 1003\r\nf 1003 1025 883\r\nf 731 695 855\r\nf 855 883 731\r\nf 583 559 695\r\nf 695 731 583\r\nf 516 500 559\r\nf 559 583 516\r\nf 467 446 500\r\nf 500 516 467\r\nf 444 416 446\r\nf 446 467 444\r\nf 436 408 416\r\nf 416 444 436\r\nf 1371 1357 1778\r\nf 1778 1776 1371\r\nf 1188 1174 1357\r\nf 1357 1371 1188\r\nf 1042 1025 1174\r\nf 1174 1188 1042\r\nf 905 883 1025\r\nf 1025 1042 905\r\nf 769 731 883\r\nf 883 905 769\r\nf 624 583 731\r\nf 731 769 624\r\nf 532 516 583\r\nf 583 624 532\r\nf 502 467 516\r\nf 516 532 502\r\nf 459 444 467\r\nf 467 502 459\r\nf 452 436 444\r\nf 444 459 452\r\nf 1383 1371 1776\r\nf 1776 1774 1383\r\nf 1198 1188 1371\r\nf 1371 1383 1198\r\nf 1068 1042 1188\r\nf 1188 1198 1068\r\nf 929 905 1042\r\nf 1042 1068 929\r\nf 797 769 905\r\nf 905 929 797\r\nf 665 624 769\r\nf 769 797 665\r\nf 569 532 624\r\nf 624 665 569\r\nf 520 502 532\r\nf 532 569 520\r\nf 504 459 502\r\nf 502 520 504\r\nf 498 452 459\r\nf 459 504 498\r\nf 1394 1383 1774\r\nf 1774 1771 1394\r\nf 1206 1198 1383\r\nf 1383 1394 1206\r\nf 1077 1068 1198\r\nf 1198 1206 1077\r\nf 947 929 1068\r\nf 1068 1077 947\r\nf 833 797 929\r\nf 929 947 833\r\nf 723 665 797\r\nf 797 833 723\r\nf 610 569 665\r\nf 665 723 610\r\nf 549 520 569\r\nf 569 610 549\r\nf 522 504 520\r\nf 520 549 522\r\nf 518 498 504\r\nf 504 522 518\r\nf 1407 1394 1771\r\nf 1771 1768 1407\r\nf 1216 1206 1394\r\nf 1394 1407 1216\r\nf 1090 1077 1206\r\nf 1206 1216 1090\r\nf 972 947 1077\r\nf 1077 1090 972\r\nf 870 833 947\r\nf 947 972 870\r\nf 764 723 833\r\nf 833 870 764\r\nf 646 610 723\r\nf 723 764 646\r\nf 587 549 610\r\nf 610 646 587\r\nf 556 522 549\r\nf 549 587 556\r\nf 540 518 522\r\nf 522 556 540\r\nf 1420 1407 1768\r\nf 1768 1764 1420\r\nf 1226 1216 1407\r\nf 1407 1420 1226\r\nf 1096 1090 1216\r\nf 1216 1226 1096\r\nf 990 972 1090\r\nf 1090 1096 990\r\nf 896 870 972\r\nf 972 990 896\r\nf 792 764 870\r\nf 870 896 792\r\nf 704 646 764\r\nf 764 792 704\r\nf 627 587 646\r\nf 646 704 627\r\nf 582 556 587\r\nf 587 627 582\r\nf 574 540 556\r\nf 556 582 574\r\nf 1426 1420 1764\r\nf 1764 1762 1426\r\nf 1230 1226 1420\r\nf 1420 1426 1230\r\nf 1101 1096 1226\r\nf 1226 1230 1101\r\nf 1006 990 1096\r\nf 1096 1101 1006\r\nf 907 896 990\r\nf 990 1006 907\r\nf 812 792 896\r\nf 896 907 812\r\nf 728 704 792\r\nf 792 812 728\r\nf 644 627 704\r\nf 704 728 644\r\nf 607 582 627\r\nf 627 644 607\r\nf 592 574 582\r\nf 582 607 592\r\nf 1430 1426 1762\r\nf 1762 1758 1430\r\nf 1234 1230 1426\r\nf 1426 1430 1234\r\nf 1107 1101 1230\r\nf 1230 1234 1107\r\nf 1012 1006 1101\r\nf 1101 1107 1012\r\nf 912 907 1006\r\nf 1006 1012 912\r\nf 819 812 907\r\nf 907 912 819\r\nf 738 728 812\r\nf 812 819 738\r\nf 651 644 728\r\nf 728 738 651\r\nf 618 607 644\r\nf 644 651 618\r\nf 601 592 607\r\nf 607 618 601\r\nf 405 397 376\r\nf 376 388 405\r\nf 439 430 397\r\nf 397 405 439\r\nf 491 486 430\r\nf 430 439 491\r\nf 543 536 486\r\nf 486 491 543\r\nf 670 661 536\r\nf 536 543 670\r\nf 846 839 661\r\nf 661 670 846\r\nf 994 980 839\r\nf 839 846 994\r\nf 1163 1158 980\r\nf 980 994 1163\r\nf 1330 1325 1158\r\nf 1158 1163 1330\r\nf 1926 1786 1325\r\nf 1325 1330 1926\r\nf 417 405 388\r\nf 388 409 417\r\nf 447 439 405\r\nf 405 417 447\r\nf 501 491 439\r\nf 439 447 501\r\nf 560 543 491\r\nf 491 501 560\r\nf 696 670 543\r\nf 543 560 696\r\nf 856 846 670\r\nf 670 696 856\r\nf 1004 994 846\r\nf 846 856 1004\r\nf 1169 1163 994\r\nf 994 1004 1169\r\nf 1340 1330 1163\r\nf 1163 1169 1340\r\nf 1925 1926 1330\r\nf 1330 1340 1925\r\nf 445 417 409\r\nf 409 437 445\r\nf 468 447 417\r\nf 417 445 468\r\nf 517 501 447\r\nf 447 468 517\r\nf 584 560 501\r\nf 501 517 584\r\nf 732 696 560\r\nf 560 584 732\r\nf 884 856 696\r\nf 696 732 884\r\nf 1026 1004 856\r\nf 856 884 1026\r\nf 1175 1169 1004\r\nf 1004 1026 1175\r\nf 1358 1340 1169\r\nf 1169 1175 1358\r\nf 1908 1925 1340\r\nf 1340 1358 1908\r\nf 460 445 437\r\nf 437 453 460\r\nf 503 468 445\r\nf 445 460 503\r\nf 533 517 468\r\nf 468 503 533\r\nf 625 584 517\r\nf 517 533 625\r\nf 770 732 584\r\nf 584 625 770\r\nf 906 884 732\r\nf 732 770 906\r\nf 1041 1026 884\r\nf 884 906 1041\r\nf 1189 1175 1026\r\nf 1026 1041 1189\r\nf 1372 1358 1175\r\nf 1175 1189 1372\r\nf 1706 1908 1358\r\nf 1358 1372 1706\r\nf 505 460 453\r\nf 453 499 505\r\nf 521 503 460\r\nf 460 505 521\r\nf 570 533 503\r\nf 503 521 570\r\nf 666 625 533\r\nf 533 570 666\r\nf 798 770 625\r\nf 625 666 798\r\nf 930 906 770\r\nf 770 798 930\r\nf 1067 1041 906\r\nf 906 930 1067\r\nf 1199 1189 1041\r\nf 1041 1067 1199\r\nf 1384 1372 1189\r\nf 1189 1199 1384\r\nf 1705 1706 1372\r\nf 1372 1384 1705\r\nf 523 505 499\r\nf 499 519 523\r\nf 550 521 505\r\nf 505 523 550\r\nf 611 570 521\r\nf 521 550 611\r\nf 724 666 570\r\nf 570 611 724\r\nf 834 798 666\r\nf 666 724 834\r\nf 948 930 798\r\nf 798 834 948\r\nf 1078 1067 930\r\nf 930 948 1078\r\nf 1207 1199 1067\r\nf 1067 1078 1207\r\nf 1395 1384 1199\r\nf 1199 1207 1395\r\nf 1773 1705 1384\r\nf 1384 1395 1773\r\nf 555 523 519\r\nf 519 541 555\r\nf 588 550 523\r\nf 523 555 588\r\nf 645 611 550\r\nf 550 588 645\r\nf 763 724 611\r\nf 611 645 763\r\nf 869 834 724\r\nf 724 763 869\r\nf 971 948 834\r\nf 834 869 971\r\nf 1089 1078 948\r\nf 948 971 1089\r\nf 1217 1207 1078\r\nf 1078 1089 1217\r\nf 1406 1395 1207\r\nf 1207 1217 1406\r\nf 1692 1773 1395\r\nf 1395 1406 1692\r\nf 581 555 541\r\nf 541 573 581\r\nf 626 588 555\r\nf 555 581 626\r\nf 703 645 588\r\nf 588 626 703\r\nf 791 763 645\r\nf 645 703 791\r\nf 895 869 763\r\nf 763 791 895\r\nf 989 971 869\r\nf 869 895 989\r\nf 1095 1089 971\r\nf 971 989 1095\r\nf 1227 1217 1089\r\nf 1089 1095 1227\r\nf 1421 1406 1217\r\nf 1217 1227 1421\r\nf 1766 1692 1406\r\nf 1406 1421 1766\r\nf 606 581 573\r\nf 573 591 606\r\nf 643 626 581\r\nf 581 606 643\r\nf 727 703 626\r\nf 626 643 727\r\nf 811 791 703\r\nf 703 727 811\r\nf 908 895 791\r\nf 791 811 908\r\nf 1005 989 895\r\nf 895 908 1005\r\nf 1100 1095 989\r\nf 989 1005 1100\r\nf 1231 1227 1095\r\nf 1095 1100 1231\r\nf 1427 1421 1227\r\nf 1227 1231 1427\r\nf 1897 1766 1421\r\nf 1421 1427 1897\r\nf 615 606 591\r\nf 591 598 615\r\nf 653 643 606\r\nf 606 615 653\r\nf 735 727 643\r\nf 643 653 735\r\nf 820 811 727\r\nf 727 735 820\r\nf 913 908 811\r\nf 811 820 913\r\nf 1013 1005 908\r\nf 908 913 1013\r\nf 1103 1100 1005\r\nf 1005 1013 1103\r\nf 1236 1231 1100\r\nf 1100 1103 1236\r\nf 1432 1427 1231\r\nf 1231 1236 1432\r\nf 1760 1897 1427\r\nf 1427 1432 1760\r\nf 2294 2299 1786\r\nf 1786 1783 2294\r\nf 2461 2466 2299\r\nf 2299 2294 2461\r\nf 2630 2641 2466\r\nf 2466 2461 2630\r\nf 2778 2785 2641\r\nf 2641 2630 2778\r\nf 2954 2963 2785\r\nf 2785 2778 2954\r\nf 3061 3068 2963\r\nf 2963 2954 3061\r\nf 3135 3140 3068\r\nf 3068 3061 3135\r\nf 3167 3176 3140\r\nf 3140 3135 3167\r\nf 3195 3203 3176\r\nf 3176 3167 3195\r\nf 3208 3213 3203\r\nf 3203 3195 3208\r\nf 2284 2294 1783\r\nf 1783 1781 2284\r\nf 2455 2461 2294\r\nf 2294 2284 2455\r\nf 2620 2630 2461\r\nf 2461 2455 2620\r\nf 2768 2778 2630\r\nf 2630 2620 2768\r\nf 2928 2954 2778\r\nf 2778 2768 2928\r\nf 3051 3061 2954\r\nf 2954 2928 3051\r\nf 3125 3135 3061\r\nf 3061 3051 3125\r\nf 3159 3167 3135\r\nf 3135 3125 3159\r\nf 3181 3195 3167\r\nf 3167 3159 3181\r\nf 3191 3208 3195\r\nf 3195 3181 3191\r\nf 2266 2284 1781\r\nf 1781 1779 2266\r\nf 2449 2455 2284\r\nf 2284 2266 2449\r\nf 2598 2620 2455\r\nf 2455 2449 2598\r\nf 2740 2768 2620\r\nf 2620 2598 2740\r\nf 2892 2928 2768\r\nf 2768 2740 2892\r\nf 3033 3051 2928\r\nf 2928 2892 3033\r\nf 3087 3125 3051\r\nf 3051 3033 3087\r\nf 3145 3159 3125\r\nf 3125 3087 3145\r\nf 3161 3181 3159\r\nf 3159 3145 3161\r\nf 3169 3191 3181\r\nf 3181 3161 3169\r\nf 2252 2266 1779\r\nf 1779 1777 2252\r\nf 2435 2449 2266\r\nf 2266 2252 2435\r\nf 2581 2598 2449\r\nf 2449 2435 2581\r\nf 2718 2740 2598\r\nf 2598 2581 2718\r\nf 2854 2892 2740\r\nf 2740 2718 2854\r\nf 2999 3033 2892\r\nf 2892 2854 2999\r\nf 3071 3087 3033\r\nf 3033 2999 3071\r\nf 3123 3145 3087\r\nf 3087 3071 3123\r\nf 3147 3161 3145\r\nf 3145 3123 3147\r\nf 3153 3169 3161\r\nf 3161 3147 3153\r\nf 2240 2252 1777\r\nf 1777 1775 2240\r\nf 2425 2435 2252\r\nf 2252 2240 2425\r\nf 2555 2581 2435\r\nf 2435 2425 2555\r\nf 2694 2718 2581\r\nf 2581 2555 2694\r\nf 2826 2854 2718\r\nf 2718 2694 2826\r\nf 2958 2999 2854\r\nf 2854 2826 2958\r\nf 3043 3071 2999\r\nf 2999 2958 3043\r\nf 3083 3123 3071\r\nf 3071 3043 3083\r\nf 3121 3147 3123\r\nf 3123 3083 3121\r\nf 3127 3153 3147\r\nf 3147 3121 3127\r\nf 2229 2240 1775\r\nf 1775 1772 2229\r\nf 2417 2425 2240\r\nf 2240 2229 2417\r\nf 2546 2555 2425\r\nf 2425 2417 2546\r\nf 2676 2694 2555\r\nf 2555 2546 2676\r\nf 2790 2826 2694\r\nf 2694 2676 2790\r\nf 2900 2958 2826\r\nf 2826 2790 2900\r\nf 3013 3043 2958\r\nf 2958 2900 3013\r\nf 3057 3083 3043\r\nf 3043 3013 3057\r\nf 3081 3121 3083\r\nf 3083 3057 3081\r\nf 3085 3127 3121\r\nf 3121 3081 3085\r\nf 2216 2229 1772\r\nf 1772 1769 2216\r\nf 2407 2417 2229\r\nf 2229 2216 2407\r\nf 2533 2546 2417\r\nf 2417 2407 2533\r\nf 2651 2676 2546\r\nf 2546 2533 2651\r\nf 2753 2790 2676\r\nf 2676 2651 2753\r\nf 2859 2900 2790\r\nf 2790 2753 2859\r\nf 2977 3013 2900\r\nf 2900 2859 2977\r\nf 3029 3057 3013\r\nf 3013 2977 3029\r\nf 3052 3081 3057\r\nf 3057 3029 3052\r\nf 3063 3085 3081\r\nf 3081 3052 3063\r\nf 2203 2216 1769\r\nf 1769 1767 2203\r\nf 2397 2407 2216\r\nf 2216 2203 2397\r\nf 2527 2533 2407\r\nf 2407 2397 2527\r\nf 2633 2651 2533\r\nf 2533 2527 2633\r\nf 2727 2753 2651\r\nf 2651 2633 2727\r\nf 2831 2859 2753\r\nf 2753 2727 2831\r\nf 2919 2977 2859\r\nf 2859 2831 2919\r\nf 2996 3029 2977\r\nf 2977 2919 2996\r\nf 3034 3052 3029\r\nf 3029 2996 3034\r\nf 3038 3063 3052\r\nf 3052 3034 3038\r\nf 2197 2203 1767\r\nf 1767 1763 2197\r\nf 2393 2397 2203\r\nf 2203 2197 2393\r\nf 2522 2527 2397\r\nf 2397 2393 2522\r\nf 2617 2633 2527\r\nf 2527 2522 2617\r\nf 2716 2727 2633\r\nf 2633 2617 2716\r\nf 2811 2831 2727\r\nf 2727 2716 2811\r\nf 2895 2919 2831\r\nf 2831 2811 2895\r\nf 2979 2996 2919\r\nf 2919 2895 2979\r\nf 3016 3034 2996\r\nf 2996 2979 3016\r\nf 3026 3038 3034\r\nf 3034 3016 3026\r\nf 2193 2197 1763\r\nf 1763 1761 2193\r\nf 2389 2393 2197\r\nf 2197 2193 2389\r\nf 2516 2522 2393\r\nf 2393 2389 2516\r\nf 2610 2617 2522\r\nf 2522 2516 2610\r\nf 2710 2716 2617\r\nf 2617 2610 2710\r\nf 2803 2811 2716\r\nf 2716 2710 2803\r\nf 2885 2895 2811\r\nf 2811 2803 2885\r\nf 2971 2979 2895\r\nf 2895 2885 2971\r\nf 3005 3016 2979\r\nf 2979 2971 3005\r\nf 3022 3026 3016\r\nf 3016 3005 3022\r\nf 461 545 544\r\nf 544 456 461\r\nf 463 551 545\r\nf 545 461 463\r\nf 465 557 551\r\nf 551 463 465\r\nf 469 567 557\r\nf 557 465 469\r\nf 471 575 567\r\nf 567 469 471\r\nf 473 577 575\r\nf 575 471 473\r\nf 475 589 577\r\nf 577 473 475\r\nf 477 593 589\r\nf 589 475 477\r\nf 479 595 593\r\nf 593 477 479\r\nf 481 599 595\r\nf 595 479 481\r\nf 389 461 456\r\nf 456 392 389\r\nf 386 463 461\r\nf 461 389 386\r\nf 379 465 463\r\nf 463 386 379\r\nf 373 469 465\r\nf 465 379 373\r\nf 371 471 469\r\nf 469 373 371\r\nf 369 473 471\r\nf 471 371 369\r\nf 366 475 473\r\nf 473 369 366\r\nf 364 477 475\r\nf 475 366 364\r\nf 362 479 477\r\nf 477 364 362\r\nf 361 481 479\r\nf 479 362 361\r\nf 335 389 392\r\nf 392 337 335\r\nf 333 386 389\r\nf 389 335 333\r\nf 331 379 386\r\nf 386 333 331\r\nf 329 373 379\r\nf 379 331 329\r\nf 328 371 373\r\nf 373 329 328\r\nf 325 369 371\r\nf 371 328 325\r\nf 323 366 369\r\nf 369 325 323\r\nf 321 364 366\r\nf 366 323 321\r\nf 319 362 364\r\nf 364 321 319\r\nf 316 361 362\r\nf 362 319 316\r\nf 298 335 337\r\nf 337 302 298\r\nf 290 333 335\r\nf 335 298 290\r\nf 288 331 333\r\nf 333 290 288\r\nf 286 329 331\r\nf 331 288 286\r\nf 281 328 329\r\nf 329 286 281\r\nf 275 325 328\r\nf 328 281 275\r\nf 265 323 325\r\nf 325 275 265\r\nf 259 321 323\r\nf 323 265 259\r\nf 255 319 321\r\nf 321 259 255\r\nf 249 316 319\r\nf 319 255 249\r\nf 269 298 302\r\nf 302 271 269\r\nf 261 290 298\r\nf 298 269 261\r\nf 251 288 290\r\nf 290 261 251\r\nf 238 286 288\r\nf 288 251 238\r\nf 230 281 286\r\nf 286 238 230\r\nf 218 275 281\r\nf 281 230 218\r\nf 208 265 275\r\nf 275 218 208\r\nf 196 259 265\r\nf 265 208 196\r\nf 186 255 259\r\nf 259 196 186\r\nf 181 249 255\r\nf 255 186 181\r\nf 228 269 271\r\nf 271 234 228\r\nf 222 261 269\r\nf 269 228 222\r\nf 212 251 261\r\nf 261 222 212\r\nf 200 238 251\r\nf 251 212 200\r\nf 177 230 238\r\nf 238 200 177\r\nf 160 218 230\r\nf 230 177 160\r\nf 134 208 218\r\nf 218 160 134\r\nf 112 196 208\r\nf 208 134 112\r\nf 102 186 196\r\nf 196 112 102\r\nf 96 181 186\r\nf 186 102 96\r\nf 198 228 234\r\nf 234 205 198\r\nf 182 222 228\r\nf 228 198 182\r\nf 168 212 222\r\nf 222 182 168\r\nf 146 200 212\r\nf 212 168 146\r\nf 118 177 200\r\nf 200 146 118\r\nf 92 160 177\r\nf 177 118 92\r\nf 74 134 160\r\nf 160 92 74\r\nf 63 112 134\r\nf 134 74 63\r\nf 53 102 112\r\nf 112 63 53\r\nf 50 96 102\r\nf 102 53 50\r\nf 167 198 205\r\nf 205 170 167\r\nf 154 182 198\r\nf 198 167 154\r\nf 126 168 182\r\nf 182 154 126\r\nf 100 146 168\r\nf 168 126 100\r\nf 83 118 146\r\nf 146 100 83\r\nf 61 92 118\r\nf 118 83 61\r\nf 46 74 92\r\nf 92 61 46\r\nf 32 63 74\r\nf 74 46 32\r\nf 25 53 63\r\nf 63 32 25\r\nf 21 50 53\r\nf 53 25 21\r\nf 143 167 170\r\nf 170 150 143\r\nf 124 154 167\r\nf 167 143 124\r\nf 104 126 154\r\nf 154 124 104\r\nf 84 100 126\r\nf 126 104 84\r\nf 65 83 100\r\nf 100 84 65\r\nf 44 61 83\r\nf 83 65 44\r\nf 30 46 61\r\nf 61 44 30\r\nf 17 32 46\r\nf 46 30 17\r\nf 9 25 32\r\nf 32 17 9\r\nf 5 21 25\r\nf 25 9 5\r\nf 132 143 150\r\nf 150 140 132\r\nf 116 124 143\r\nf 143 132 116\r\nf 94 104 124\r\nf 124 116 94\r\nf 76 84 104\r\nf 104 94 76\r\nf 55 65 84\r\nf 84 76 55\r\nf 40 44 65\r\nf 65 55 40\r\nf 22 30 44\r\nf 44 40 22\r\nf 11 17 30\r\nf 30 22 11\r\nf 2 9 17\r\nf 17 11 2\r\nf 1 5 9\r\nf 9 2 1\r\nf 480 596 599\r\nf 599 481 480\r\nf 478 594 596\r\nf 596 480 478\r\nf 476 590 594\r\nf 594 478 476\r\nf 474 578 590\r\nf 590 476 474\r\nf 472 576 578\r\nf 578 474 472\r\nf 470 568 576\r\nf 576 472 470\r\nf 466 558 568\r\nf 568 470 466\r\nf 464 552 558\r\nf 558 466 464\r\nf 462 546 552\r\nf 552 464 462\r\nf 456 544 546\r\nf 546 462 456\r\nf 363 480 481\r\nf 481 360 363\r\nf 365 478 480\r\nf 480 363 365\r\nf 367 476 478\r\nf 478 365 367\r\nf 368 474 476\r\nf 476 367 368\r\nf 370 472 474\r\nf 474 368 370\r\nf 372 470 472\r\nf 472 370 372\r\nf 380 466 470\r\nf 470 372 380\r\nf 385 464 466\r\nf 466 380 385\r\nf 390 462 464\r\nf 464 385 390\r\nf 391 456 462\r\nf 462 390 391\r\nf 320 363 360\r\nf 360 316 320\r\nf 322 365 363\r\nf 363 320 322\r\nf 324 367 365\r\nf 365 322 324\r\nf 326 368 367\r\nf 367 324 326\r\nf 327 370 368\r\nf 368 326 327\r\nf 330 372 370\r\nf 370 327 330\r\nf 332 380 372\r\nf 372 330 332\r\nf 334 385 380\r\nf 380 332 334\r\nf 336 390 385\r\nf 385 334 336\r\nf 337 391 390\r\nf 390 336 337\r\nf 256 320 316\r\nf 316 250 256\r\nf 260 322 320\r\nf 320 256 260\r\nf 266 324 322\r\nf 322 260 266\r\nf 276 326 324\r\nf 324 266 276\r\nf 282 327 326\r\nf 326 276 282\r\nf 287 330 327\r\nf 327 282 287\r\nf 289 332 330\r\nf 330 287 289\r\nf 291 334 332\r\nf 332 289 291\r\nf 299 336 334\r\nf 334 291 299\r\nf 303 337 336\r\nf 336 299 303\r\nf 187 256 250\r\nf 250 181 187\r\nf 197 260 256\r\nf 256 187 197\r\nf 209 266 260\r\nf 260 197 209\r\nf 219 276 266\r\nf 266 209 219\r\nf 231 282 276\r\nf 276 219 231\r\nf 239 287 282\r\nf 282 231 239\r\nf 252 289 287\r\nf 287 239 252\r\nf 262 291 289\r\nf 289 252 262\r\nf 270 299 291\r\nf 291 262 270\r\nf 272 303 299\r\nf 299 270 272\r\nf 103 187 181\r\nf 181 97 103\r\nf 113 197 187\r\nf 187 103 113\r\nf 135 209 197\r\nf 197 113 135\r\nf 161 219 209\r\nf 209 135 161\r\nf 178 231 219\r\nf 219 161 178\r\nf 201 239 231\r\nf 231 178 201\r\nf 213 252 239\r\nf 239 201 213\r\nf 223 262 252\r\nf 252 213 223\r\nf 229 270 262\r\nf 262 223 229\r\nf 235 272 270\r\nf 270 229 235\r\nf 54 103 97\r\nf 97 50 54\r\nf 64 113 103\r\nf 103 54 64\r\nf 75 135 113\r\nf 113 64 75\r\nf 93 161 135\r\nf 135 75 93\r\nf 119 178 161\r\nf 161 93 119\r\nf 147 201 178\r\nf 178 119 147\r\nf 169 213 201\r\nf 201 147 169\r\nf 183 223 213\r\nf 213 169 183\r\nf 199 229 223\r\nf 223 183 199\r\nf 205 235 229\r\nf 229 199 205\r\nf 24 54 50\r\nf 50 21 24\r\nf 33 64 54\r\nf 54 24 33\r\nf 47 75 64\r\nf 64 33 47\r\nf 62 93 75\r\nf 75 47 62\r\nf 82 119 93\r\nf 93 62 82\r\nf 101 147 119\r\nf 119 82 101\r\nf 127 169 147\r\nf 147 101 127\r\nf 155 183 169\r\nf 169 127 155\r\nf 166 199 183\r\nf 183 155 166\r\nf 171 205 199\r\nf 199 166 171\r\nf 10 24 21\r\nf 21 6 10\r\nf 18 33 24\r\nf 24 10 18\r\nf 31 47 33\r\nf 33 18 31\r\nf 45 62 47\r\nf 47 31 45\r\nf 66 82 62\r\nf 62 45 66\r\nf 85 101 82\r\nf 82 66 85\r\nf 105 127 101\r\nf 101 85 105\r\nf 125 155 127\r\nf 127 105 125\r\nf 144 166 155\r\nf 155 125 144\r\nf 151 171 166\r\nf 166 144 151\r\nf 3 10 6\r\nf 6 1 3\r\nf 12 18 10\r\nf 10 3 12\r\nf 23 31 18\r\nf 18 12 23\r\nf 41 45 31\r\nf 31 23 41\r\nf 56 66 45\r\nf 45 41 56\r\nf 77 85 66\r\nf 66 56 77\r\nf 95 105 85\r\nf 85 77 95\r\nf 117 125 105\r\nf 105 95 117\r\nf 133 144 125\r\nf 125 117 133\r\nf 140 151 144\r\nf 144 133 140\r\nf 138 132 140\r\nf 140 145 138\r\nf 122 116 132\r\nf 132 138 122\r\nf 98 94 116\r\nf 116 122 98\r\nf 80 76 94\r\nf 94 98 80\r\nf 60 55 76\r\nf 76 80 60\r\nf 42 40 55\r\nf 55 60 42\r\nf 28 22 40\r\nf 40 42 28\r\nf 13 11 22\r\nf 22 28 13\r\nf 7 2 11\r\nf 11 13 7\r\nf 4 1 2\r\nf 2 7 4\r\nf 152 138 145\r\nf 145 158 152\r\nf 136 122 138\r\nf 138 152 136\r\nf 108 98 122\r\nf 122 136 108\r\nf 89 80 98\r\nf 98 108 89\r\nf 70 60 80\r\nf 80 89 70\r\nf 52 42 60\r\nf 60 70 52\r\nf 38 28 42\r\nf 42 52 38\r\nf 26 13 28\r\nf 28 38 26\r\nf 19 7 13\r\nf 13 26 19\r\nf 15 4 7\r\nf 7 19 15\r\nf 173 152 158\r\nf 158 176 173\r\nf 162 136 152\r\nf 152 173 162\r\nf 142 108 136\r\nf 136 162 142\r\nf 111 89 108\r\nf 108 142 111\r\nf 91 70 89\r\nf 89 111 91\r\nf 73 52 70\r\nf 70 91 73\r\nf 58 38 52\r\nf 52 73 58\r\nf 48 26 38\r\nf 38 58 48\r\nf 37 19 26\r\nf 26 48 37\r\nf 35 15 19\r\nf 19 37 35\r\nf 194 173 176\r\nf 176 202 194\r\nf 184 162 173\r\nf 173 194 184\r\nf 174 142 162\r\nf 162 184 174\r\nf 156 111 142\r\nf 142 174 156\r\nf 128 91 111\r\nf 111 156 128\r\nf 106 73 91\r\nf 91 128 106\r\nf 86 58 73\r\nf 73 106 86\r\nf 78 48 58\r\nf 58 86 78\r\nf 68 37 48\r\nf 48 78 68\r\nf 67 35 37\r\nf 37 68 67\r\nf 221 194 202\r\nf 202 225 221\r\nf 216 184 194\r\nf 194 221 216\r\nf 206 174 184\r\nf 184 216 206\r\nf 192 156 174\r\nf 174 206 192\r\nf 180 128 156\r\nf 156 192 180\r\nf 164 106 128\r\nf 128 180 164\r\nf 148 86 106\r\nf 106 164 148\r\nf 130 78 86\r\nf 86 148 130\r\nf 121 68 78\r\nf 78 130 121\r\nf 115 67 68\r\nf 68 121 115\r\nf 244 221 225\r\nf 225 247 244\r\nf 240 216 221\r\nf 221 244 240\r\nf 236 206 216\r\nf 216 240 236\r\nf 233 192 206\r\nf 206 236 233\r\nf 227 180 192\r\nf 192 233 227\r\nf 215 164 180\r\nf 180 227 215\r\nf 210 148 164\r\nf 164 215 210\r\nf 203 130 148\r\nf 148 210 203\r\nf 191 121 130\r\nf 130 203 191\r\nf 188 115 121\r\nf 121 191 188\r\nf 284 244 247\r\nf 247 285 284\r\nf 279 240 244\r\nf 244 284 279\r\nf 277 236 240\r\nf 240 279 277\r\nf 273 233 236\r\nf 236 277 273\r\nf 267 227 233\r\nf 233 273 267\r\nf 263 215 227\r\nf 227 267 263\r\nf 258 210 215\r\nf 215 263 258\r\nf 253 203 210\r\nf 210 258 253\r\nf 245 191 203\r\nf 203 253 245\r\nf 242 188 191\r\nf 191 245 242\r\nf 315 284 285\r\nf 285 318 315\r\nf 312 279 284\r\nf 284 315 312\r\nf 311 277 279\r\nf 279 312 311\r\nf 309 273 277\r\nf 277 311 309\r\nf 307 267 273\r\nf 273 309 307\r\nf 305 263 267\r\nf 267 307 305\r\nf 301 258 263\r\nf 263 305 301\r\nf 297 253 258\r\nf 258 301 297\r\nf 295 245 253\r\nf 253 297 295\r\nf 293 242 245\r\nf 245 295 293\r\nf 341 315 318\r\nf 318 339 341\r\nf 343 312 315\r\nf 315 341 343\r\nf 345 311 312\r\nf 312 343 345\r\nf 347 309 311\r\nf 311 345 347\r\nf 349 307 309\r\nf 309 347 349\r\nf 351 305 307\r\nf 307 349 351\r\nf 353 301 305\r\nf 305 351 353\r\nf 355 297 301\r\nf 301 353 355\r\nf 357 295 297\r\nf 297 355 357\r\nf 359 293 295\r\nf 295 357 359\r\nf 378 341 339\r\nf 339 376 378\r\nf 384 343 341\r\nf 341 378 384\r\nf 394 345 343\r\nf 343 384 394\r\nf 403 347 345\r\nf 345 394 403\r\nf 406 349 347\r\nf 347 403 406\r\nf 415 351 349\r\nf 349 406 415\r\nf 419 353 351\r\nf 351 415 419\r\nf 423 355 353\r\nf 353 419 423\r\nf 425 357 355\r\nf 355 423 425\r\nf 427 359 357\r\nf 357 425 427\r\nf 8 3 1\r\nf 1 4 8\r\nf 14 12 3\r\nf 3 8 14\r\nf 29 23 12\r\nf 12 14 29\r\nf 43 41 23\r\nf 23 29 43\r\nf 59 56 41\r\nf 41 43 59\r\nf 81 77 56\r\nf 56 59 81\r\nf 99 95 77\r\nf 77 81 99\r\nf 123 117 95\r\nf 95 99 123\r\nf 139 133 117\r\nf 117 123 139\r\nf 145 140 133\r\nf 133 139 145\r\nf 20 8 4\r\nf 4 16 20\r\nf 27 14 8\r\nf 8 20 27\r\nf 39 29 14\r\nf 14 27 39\r\nf 51 43 29\r\nf 29 39 51\r\nf 71 59 43\r\nf 43 51 71\r\nf 88 81 59\r\nf 59 71 88\r\nf 109 99 81\r\nf 81 88 109\r\nf 137 123 99\r\nf 99 109 137\r\nf 153 139 123\r\nf 123 137 153\r\nf 159 145 139\r\nf 139 153 159\r\nf 36 20 16\r\nf 16 34 36\r\nf 49 27 20\r\nf 20 36 49\r\nf 57 39 27\r\nf 27 49 57\r\nf 72 51 39\r\nf 39 57 72\r\nf 90 71 51\r\nf 51 72 90\r\nf 110 88 71\r\nf 71 90 110\r\nf 141 109 88\r\nf 88 110 141\r\nf 163 137 109\r\nf 109 141 163\r\nf 172 153 137\r\nf 137 163 172\r\nf 176 159 153\r\nf 153 172 176\r\nf 69 36 34\r\nf 34 67 69\r\nf 79 49 36\r\nf 36 69 79\r\nf 87 57 49\r\nf 49 79 87\r\nf 107 72 57\r\nf 57 87 107\r\nf 129 90 72\r\nf 72 107 129\r\nf 157 110 90\r\nf 90 129 157\r\nf 175 141 110\r\nf 110 157 175\r\nf 185 163 141\r\nf 141 175 185\r\nf 195 172 163\r\nf 163 185 195\r\nf 202 176 172\r\nf 172 195 202\r\nf 120 69 67\r\nf 67 114 120\r\nf 131 79 69\r\nf 69 120 131\r\nf 149 87 79\r\nf 79 131 149\r\nf 165 107 87\r\nf 87 149 165\r\nf 179 129 107\r\nf 107 165 179\r\nf 193 157 129\r\nf 129 179 193\r\nf 207 175 157\r\nf 157 193 207\r\nf 217 185 175\r\nf 175 207 217\r\nf 220 195 185\r\nf 185 217 220\r\nf 224 202 195\r\nf 195 220 224\r\nf 190 120 114\r\nf 114 189 190\r\nf 204 131 120\r\nf 120 190 204\r\nf 211 149 131\r\nf 131 204 211\r\nf 214 165 149\r\nf 149 211 214\r\nf 226 179 165\r\nf 165 214 226\r\nf 232 193 179\r\nf 179 226 232\r\nf 237 207 193\r\nf 193 232 237\r\nf 241 217 207\r\nf 207 237 241\r\nf 243 220 217\r\nf 217 241 243\r\nf 248 224 220\r\nf 220 243 248\r\nf 246 190 189\r\nf 189 242 246\r\nf 254 204 190\r\nf 190 246 254\r\nf 257 211 204\r\nf 204 254 257\r\nf 264 214 211\r\nf 211 257 264\r\nf 268 226 214\r\nf 214 264 268\r\nf 274 232 226\r\nf 226 268 274\r\nf 278 237 232\r\nf 232 274 278\r\nf 280 241 237\r\nf 237 278 280\r\nf 283 243 241\r\nf 241 280 283\r\nf 285 248 243\r\nf 243 283 285\r\nf 294 246 242\r\nf 242 292 294\r\nf 296 254 246\r\nf 246 294 296\r\nf 300 257 254\r\nf 254 296 300\r\nf 304 264 257\r\nf 257 300 304\r\nf 306 268 264\r\nf 264 304 306\r\nf 308 274 268\r\nf 268 306 308\r\nf 310 278 274\r\nf 274 308 310\r\nf 313 280 278\r\nf 278 310 313\r\nf 314 283 280\r\nf 280 313 314\r\nf 317 285 283\r\nf 283 314 317\r\nf 356 294 292\r\nf 292 358 356\r\nf 354 296 294\r\nf 294 356 354\r\nf 352 300 296\r\nf 296 354 352\r\nf 350 304 300\r\nf 300 352 350\r\nf 348 306 304\r\nf 304 350 348\r\nf 346 308 306\r\nf 306 348 346\r\nf 344 310 308\r\nf 308 346 344\r\nf 342 313 310\r\nf 310 344 342\r\nf 340 314 313\r\nf 313 342 340\r\nf 338 317 314\r\nf 314 340 338\r\nf 424 356 358\r\nf 358 426 424\r\nf 422 354 356\r\nf 356 424 422\r\nf 418 352 354\r\nf 354 422 418\r\nf 414 350 352\r\nf 352 418 414\r\nf 407 348 350\r\nf 350 414 407\r\nf 402 346 348\r\nf 348 407 402\r\nf 393 344 346\r\nf 346 402 393\r\nf 383 342 344\r\nf 344 393 383\r\nf 377 340 342\r\nf 342 383 377\r\nf 375 338 340\r\nf 340 377 375\r\nf 3186 3113 3115\r\nf 3115 3182 3186\r\nf 3192 3110 3113\r\nf 3113 3186 3192\r\nf 3196 3109 3110\r\nf 3110 3192 3196\r\nf 3205 3106 3109\r\nf 3109 3196 3205\r\nf 3211 3104 3106\r\nf 3106 3205 3211\r\nf 3215 3102 3104\r\nf 3104 3211 3215\r\nf 3217 3101 3102\r\nf 3102 3215 3217\r\nf 3220 3098 3101\r\nf 3101 3217 3220\r\nf 3222 3097 3098\r\nf 3098 3220 3222\r\nf 3223 3095 3097\r\nf 3097 3222 3223\r\nf 3227 3186 3182\r\nf 3182 3225 3227\r\nf 3229 3192 3186\r\nf 3186 3227 3229\r\nf 3231 3196 3192\r\nf 3192 3229 3231\r\nf 3233 3205 3196\r\nf 3196 3231 3233\r\nf 3235 3211 3205\r\nf 3205 3233 3235\r\nf 3241 3215 3211\r\nf 3211 3235 3241\r\nf 3245 3217 3215\r\nf 3215 3241 3245\r\nf 3249 3220 3217\r\nf 3217 3245 3249\r\nf 3251 3222 3220\r\nf 3220 3249 3251\r\nf 3253 3223 3222\r\nf 3222 3251 3253\r\nf 3239 3227 3225\r\nf 3225 3237 3239\r\nf 3243 3229 3227\r\nf 3227 3239 3243\r\nf 3247 3231 3229\r\nf 3229 3243 3247\r\nf 3257 3233 3231\r\nf 3231 3247 3257\r\nf 3263 3235 3233\r\nf 3233 3257 3263\r\nf 3271 3241 3235\r\nf 3235 3263 3271\r\nf 3279 3245 3241\r\nf 3241 3271 3279\r\nf 3285 3249 3245\r\nf 3245 3279 3285\r\nf 3293 3251 3249\r\nf 3249 3285 3293\r\nf 3297 3253 3251\r\nf 3251 3293 3297\r\nf 3259 3239 3237\r\nf 3237 3255 3259\r\nf 3261 3243 3239\r\nf 3239 3259 3261\r\nf 3265 3247 3243\r\nf 3243 3261 3265\r\nf 3275 3257 3247\r\nf 3247 3265 3275\r\nf 3287 3263 3257\r\nf 3257 3275 3287\r\nf 3303 3271 3263\r\nf 3263 3287 3303\r\nf 3314 3279 3271\r\nf 3271 3303 3314\r\nf 3320 3285 3279\r\nf 3279 3314 3320\r\nf 3330 3293 3285\r\nf 3285 3320 3330\r\nf 3332 3297 3293\r\nf 3293 3330 3332\r\nf 3270 3259 3255\r\nf 3255 3268 3270\r\nf 3273 3261 3259\r\nf 3259 3270 3273\r\nf 3283 3265 3261\r\nf 3261 3273 3283\r\nf 3299 3275 3265\r\nf 3265 3283 3299\r\nf 3308 3287 3275\r\nf 3275 3299 3308\r\nf 3322 3303 3287\r\nf 3287 3308 3322\r\nf 3338 3314 3303\r\nf 3303 3322 3338\r\nf 3346 3320 3314\r\nf 3314 3338 3346\r\nf 3351 3330 3320\r\nf 3320 3346 3351\r\nf 3355 3332 3330\r\nf 3330 3351 3355\r\nf 3282 3270 3268\r\nf 3268 3278 3282\r\nf 3290 3273 3270\r\nf 3270 3282 3290\r\nf 3302 3283 3273\r\nf 3273 3290 3302\r\nf 3312 3299 3283\r\nf 3283 3302 3312\r\nf 3324 3308 3299\r\nf 3299 3312 3324\r\nf 3340 3322 3308\r\nf 3308 3324 3340\r\nf 3353 3338 3322\r\nf 3322 3340 3353\r\nf 3368 3346 3338\r\nf 3338 3353 3368\r\nf 3373 3351 3346\r\nf 3346 3368 3373\r\nf 3379 3355 3351\r\nf 3351 3373 3379\r\nf 3295 3282 3278\r\nf 3278 3292 3295\r\nf 3306 3290 3282\r\nf 3282 3295 3306\r\nf 3316 3302 3290\r\nf 3290 3306 3316\r\nf 3326 3312 3302\r\nf 3302 3316 3326\r\nf 3345 3324 3312\r\nf 3312 3326 3345\r\nf 3359 3340 3324\r\nf 3324 3345 3359\r\nf 3376 3353 3340\r\nf 3340 3359 3376\r\nf 3394 3368 3353\r\nf 3353 3376 3394\r\nf 3404 3373 3368\r\nf 3368 3394 3404\r\nf 3406 3379 3373\r\nf 3373 3404 3406\r\nf 3310 3295 3292\r\nf 3292 3307 3310\r\nf 3318 3306 3295\r\nf 3295 3310 3318\r\nf 3336 3316 3306\r\nf 3306 3318 3336\r\nf 3348 3326 3316\r\nf 3316 3336 3348\r\nf 3369 3345 3326\r\nf 3326 3348 3369\r\nf 3389 3359 3345\r\nf 3345 3369 3389\r\nf 3425 3376 3359\r\nf 3359 3389 3425\r\nf 3449 3394 3376\r\nf 3376 3425 3449\r\nf 3468 3404 3394\r\nf 3394 3449 3468\r\nf 3472 3406 3404\r\nf 3404 3468 3472\r\nf 3335 3310 3307\r\nf 3307 3329 3335\r\nf 3343 3318 3310\r\nf 3310 3335 3343\r\nf 3362 3336 3318\r\nf 3318 3343 3362\r\nf 3386 3348 3336\r\nf 3336 3362 3386\r\nf 3422 3369 3348\r\nf 3348 3386 3422\r\nf 3464 3389 3369\r\nf 3369 3422 3464\r\nf 3490 3425 3389\r\nf 3389 3464 3490\r\nf 3505 3449 3425\r\nf 3425 3490 3505\r\nf 3521 3468 3449\r\nf 3449 3505 3521\r\nf 3523 3472 3468\r\nf 3468 3521 3523\r\nf 3364 3335 3329\r\nf 3329 3357 3364\r\nf 3382 3343 3335\r\nf 3335 3364 3382\r\nf 3416 3362 3343\r\nf 3343 3382 3416\r\nf 3465 3386 3362\r\nf 3362 3416 3465\r\nf 3495 3422 3386\r\nf 3386 3465 3495\r\nf 3528 3464 3422\r\nf 3422 3495 3528\r\nf 3553 3490 3464\r\nf 3464 3528 3553\r\nf 3579 3505 3490\r\nf 3490 3553 3579\r\nf 3592 3521 3505\r\nf 3505 3579 3592\r\nf 3604 3523 3521\r\nf 3521 3592 3604\r\nf 3221 3096 3094\r\nf 3094 3224 3221\r\nf 3219 3099 3096\r\nf 3096 3221 3219\r\nf 3218 3100 3099\r\nf 3099 3219 3218\r\nf 3216 3103 3100\r\nf 3100 3218 3216\r\nf 3212 3105 3103\r\nf 3103 3216 3212\r\nf 3206 3107 3105\r\nf 3105 3212 3206\r\nf 3197 3108 3107\r\nf 3107 3206 3197\r\nf 3193 3111 3108\r\nf 3108 3197 3193\r\nf 3187 3112 3111\r\nf 3111 3193 3187\r\nf 3183 3114 3112\r\nf 3112 3187 3183\r\nf 3252 3221 3224\r\nf 3224 3254 3252\r\nf 3250 3219 3221\r\nf 3221 3252 3250\r\nf 3246 3218 3219\r\nf 3219 3250 3246\r\nf 3242 3216 3218\r\nf 3218 3246 3242\r\nf 3236 3212 3216\r\nf 3216 3242 3236\r\nf 3234 3206 3212\r\nf 3212 3236 3234\r\nf 3232 3197 3206\r\nf 3206 3234 3232\r\nf 3230 3193 3197\r\nf 3197 3232 3230\r\nf 3228 3187 3193\r\nf 3193 3230 3228\r\nf 3226 3183 3187\r\nf 3187 3228 3226\r\nf 3294 3252 3254\r\nf 3254 3298 3294\r\nf 3286 3250 3252\r\nf 3252 3294 3286\r\nf 3280 3246 3250\r\nf 3250 3286 3280\r\nf 3272 3242 3246\r\nf 3246 3280 3272\r\nf 3264 3236 3242\r\nf 3242 3272 3264\r\nf 3258 3234 3236\r\nf 3236 3264 3258\r\nf 3248 3232 3234\r\nf 3234 3258 3248\r\nf 3244 3230 3232\r\nf 3232 3248 3244\r\nf 3240 3228 3230\r\nf 3230 3244 3240\r\nf 3238 3226 3228\r\nf 3228 3240 3238\r\nf 3331 3294 3298\r\nf 3298 3333 3331\r\nf 3321 3286 3294\r\nf 3294 3331 3321\r\nf 3315 3280 3286\r\nf 3286 3321 3315\r\nf 3304 3272 3280\r\nf 3280 3315 3304\r\nf 3288 3264 3272\r\nf 3272 3304 3288\r\nf 3276 3258 3264\r\nf 3264 3288 3276\r\nf 3266 3248 3258\r\nf 3258 3276 3266\r\nf 3262 3244 3248\r\nf 3248 3266 3262\r\nf 3260 3240 3244\r\nf 3244 3262 3260\r\nf 3256 3238 3240\r\nf 3240 3260 3256\r\nf 3350 3331 3333\r\nf 3333 3354 3350\r\nf 3347 3321 3331\r\nf 3331 3350 3347\r\nf 3339 3315 3321\r\nf 3321 3347 3339\r\nf 3323 3304 3315\r\nf 3315 3339 3323\r\nf 3309 3288 3304\r\nf 3304 3323 3309\r\nf 3300 3276 3288\r\nf 3288 3309 3300\r\nf 3284 3266 3276\r\nf 3276 3300 3284\r\nf 3274 3262 3266\r\nf 3266 3284 3274\r\nf 3269 3260 3262\r\nf 3262 3274 3269\r\nf 3267 3256 3260\r\nf 3260 3269 3267\r\nf 3372 3350 3354\r\nf 3354 3378 3372\r\nf 3367 3347 3350\r\nf 3350 3372 3367\r\nf 3352 3339 3347\r\nf 3347 3367 3352\r\nf 3341 3323 3339\r\nf 3339 3352 3341\r\nf 3325 3309 3323\r\nf 3323 3341 3325\r\nf 3313 3300 3309\r\nf 3309 3325 3313\r\nf 3301 3284 3300\r\nf 3300 3313 3301\r\nf 3289 3274 3284\r\nf 3284 3301 3289\r\nf 3281 3269 3274\r\nf 3274 3289 3281\r\nf 3277 3267 3269\r\nf 3269 3281 3277\r\nf 3403 3372 3378\r\nf 3378 3405 3403\r\nf 3393 3367 3372\r\nf 3372 3403 3393\r\nf 3377 3352 3367\r\nf 3367 3393 3377\r\nf 3360 3341 3352\r\nf 3352 3377 3360\r\nf 3344 3325 3341\r\nf 3341 3360 3344\r\nf 3327 3313 3325\r\nf 3325 3344 3327\r\nf 3317 3301 3313\r\nf 3313 3327 3317\r\nf 3305 3289 3301\r\nf 3301 3317 3305\r\nf 3296 3281 3289\r\nf 3289 3305 3296\r\nf 3291 3277 3281\r\nf 3281 3296 3291\r\nf 3469 3403 3405\r\nf 3405 3472 3469\r\nf 3450 3393 3403\r\nf 3403 3469 3450\r\nf 3426 3377 3393\r\nf 3393 3450 3426\r\nf 3390 3360 3377\r\nf 3377 3426 3390\r\nf 3370 3344 3360\r\nf 3360 3390 3370\r\nf 3349 3327 3344\r\nf 3344 3370 3349\r\nf 3337 3317 3327\r\nf 3327 3349 3337\r\nf 3319 3305 3317\r\nf 3317 3337 3319\r\nf 3311 3296 3305\r\nf 3305 3319 3311\r\nf 3307 3291 3296\r\nf 3296 3311 3307\r\nf 3520 3469 3472\r\nf 3472 3522 3520\r\nf 3504 3450 3469\r\nf 3469 3520 3504\r\nf 3489 3426 3450\r\nf 3450 3504 3489\r\nf 3463 3390 3426\r\nf 3426 3489 3463\r\nf 3421 3370 3390\r\nf 3390 3463 3421\r\nf 3385 3349 3370\r\nf 3370 3421 3385\r\nf 3361 3337 3349\r\nf 3349 3385 3361\r\nf 3342 3319 3337\r\nf 3337 3361 3342\r\nf 3334 3311 3319\r\nf 3319 3342 3334\r\nf 3328 3307 3311\r\nf 3311 3334 3328\r\nf 3591 3520 3522\r\nf 3522 3603 3591\r\nf 3578 3504 3520\r\nf 3520 3591 3578\r\nf 3552 3489 3504\r\nf 3504 3578 3552\r\nf 3530 3463 3489\r\nf 3489 3552 3530\r\nf 3499 3421 3463\r\nf 3463 3530 3499\r\nf 3467 3385 3421\r\nf 3421 3499 3467\r\nf 3415 3361 3385\r\nf 3385 3467 3415\r\nf 3381 3342 3361\r\nf 3361 3415 3381\r\nf 3363 3334 3342\r\nf 3342 3381 3363\r\nf 3356 3328 3334\r\nf 3334 3363 3356\r\nf 3374 3365 3358\r\nf 3358 3371 3374\r\nf 3395 3383 3365\r\nf 3365 3374 3395\r\nf 3443 3417 3383\r\nf 3383 3395 3443\r\nf 3481 3466 3417\r\nf 3417 3443 3481\r\nf 3514 3496 3466\r\nf 3466 3481 3514\r\nf 3545 3529 3496\r\nf 3496 3514 3545\r\nf 3573 3551 3529\r\nf 3529 3545 3573\r\nf 3597 3577 3551\r\nf 3551 3573 3597\r\nf 3613 3590 3577\r\nf 3577 3597 3613\r\nf 3619 3603 3590\r\nf 3590 3613 3619\r\nf 3387 3374 3371\r\nf 3371 3380 3387\r\nf 3413 3395 3374\r\nf 3374 3387 3413\r\nf 3461 3443 3395\r\nf 3395 3413 3461\r\nf 3493 3481 3443\r\nf 3443 3461 3493\r\nf 3524 3514 3481\r\nf 3481 3493 3524\r\nf 3556 3545 3514\r\nf 3514 3524 3556\r\nf 3584 3573 3545\r\nf 3545 3556 3584\r\nf 3611 3597 3573\r\nf 3573 3584 3611\r\nf 3628 3613 3597\r\nf 3597 3611 3628\r\nf 3632 3619 3613\r\nf 3613 3628 3632\r\nf 3398 3387 3380\r\nf 3380 3391 3398\r\nf 3435 3413 3387\r\nf 3387 3398 3435\r\nf 3473 3461 3413\r\nf 3413 3435 3473\r\nf 3500 3493 3461\r\nf 3461 3473 3500\r\nf 3531 3524 3493\r\nf 3493 3500 3531\r\nf 3562 3556 3524\r\nf 3524 3531 3562\r\nf 3595 3584 3556\r\nf 3556 3562 3595\r\nf 3617 3611 3584\r\nf 3584 3595 3617\r\nf 3633 3628 3611\r\nf 3611 3617 3633\r\nf 3641 3632 3628\r\nf 3628 3633 3641\r\nf 3409 3398 3391\r\nf 3391 3400 3409\r\nf 3447 3435 3398\r\nf 3398 3409 3447\r\nf 3477 3473 3435\r\nf 3435 3447 3477\r\nf 3506 3500 3473\r\nf 3473 3477 3506\r\nf 3540 3531 3500\r\nf 3500 3506 3540\r\nf 3567 3562 3531\r\nf 3531 3540 3567\r\nf 3601 3595 3562\r\nf 3562 3567 3601\r\nf 3624 3617 3595\r\nf 3595 3601 3624\r\nf 3639 3633 3617\r\nf 3617 3624 3639\r\nf 3644 3641 3633\r\nf 3633 3639 3644\r\nf 3433 3409 3400\r\nf 3400 3411 3433\r\nf 3453 3447 3409\r\nf 3409 3433 3453\r\nf 3483 3477 3447\r\nf 3447 3453 3483\r\nf 3510 3506 3477\r\nf 3477 3483 3510\r\nf 3543 3540 3506\r\nf 3506 3510 3543\r\nf 3569 3567 3540\r\nf 3540 3543 3569\r\nf 3599 3601 3567\r\nf 3567 3569 3599\r\nf 3622 3624 3601\r\nf 3601 3599 3622\r\nf 3637 3639 3624\r\nf 3624 3622 3637\r\nf 3642 3644 3639\r\nf 3639 3637 3642\r\nf 3439 3433 3411\r\nf 3411 3424 3439\r\nf 3458 3453 3433\r\nf 3433 3439 3458\r\nf 3487 3483 3453\r\nf 3453 3458 3487\r\nf 3513 3510 3483\r\nf 3483 3487 3513\r\nf 3542 3543 3510\r\nf 3510 3513 3542\r\nf 3566 3569 3543\r\nf 3543 3542 3566\r\nf 3593 3599 3569\r\nf 3569 3566 3593\r\nf 3616 3622 3599\r\nf 3599 3593 3616\r\nf 3630 3637 3622\r\nf 3622 3616 3630\r\nf 3636 3642 3637\r\nf 3637 3630 3636\r\nf 3441 3439 3424\r\nf 3424 3429 3441\r\nf 3459 3458 3439\r\nf 3439 3441 3459\r\nf 3485 3487 3458\r\nf 3458 3459 3485\r\nf 3508 3513 3487\r\nf 3487 3485 3508\r\nf 3533 3542 3513\r\nf 3513 3508 3533\r\nf 3558 3566 3542\r\nf 3542 3533 3558\r\nf 3582 3593 3566\r\nf 3566 3558 3582\r\nf 3607 3616 3593\r\nf 3593 3582 3607\r\nf 3620 3630 3616\r\nf 3616 3607 3620\r\nf 3626 3636 3630\r\nf 3630 3620 3626\r\nf 3437 3441 3429\r\nf 3429 3427 3437\r\nf 3455 3459 3441\r\nf 3441 3437 3455\r\nf 3479 3485 3459\r\nf 3459 3455 3479\r\nf 3502 3508 3485\r\nf 3485 3479 3502\r\nf 3526 3533 3508\r\nf 3508 3502 3526\r\nf 3547 3558 3533\r\nf 3533 3526 3547\r\nf 3571 3582 3558\r\nf 3558 3547 3571\r\nf 3588 3607 3582\r\nf 3582 3571 3588\r\nf 3605 3620 3607\r\nf 3607 3588 3605\r\nf 3609 3626 3620\r\nf 3620 3605 3609\r\nf 3419 3437 3427\r\nf 3427 3408 3419\r\nf 3445 3455 3437\r\nf 3437 3419 3445\r\nf 3470 3479 3455\r\nf 3455 3445 3470\r\nf 3492 3502 3479\r\nf 3479 3470 3492\r\nf 3517 3526 3502\r\nf 3502 3492 3517\r\nf 3536 3547 3526\r\nf 3526 3517 3536\r\nf 3554 3571 3547\r\nf 3547 3536 3554\r\nf 3575 3588 3571\r\nf 3571 3554 3575\r\nf 3580 3605 3588\r\nf 3588 3575 3580\r\nf 3587 3609 3605\r\nf 3605 3580 3587\r\nf 3401 3419 3408\r\nf 3408 3397 3401\r\nf 3431 3445 3419\r\nf 3419 3401 3431\r\nf 3451 3470 3445\r\nf 3445 3431 3451\r\nf 3475 3492 3470\r\nf 3470 3451 3475\r\nf 3497 3517 3492\r\nf 3492 3475 3497\r\nf 3518 3536 3517\r\nf 3517 3497 3518\r\nf 3537 3554 3536\r\nf 3536 3518 3537\r\nf 3549 3575 3554\r\nf 3554 3537 3549\r\nf 3560 3580 3575\r\nf 3575 3549 3560\r\nf 3564 3587 3580\r\nf 3580 3560 3564\r\nf 3614 3591 3603\r\nf 3603 3619 3614\r\nf 3598 3578 3591\r\nf 3591 3614 3598\r\nf 3574 3552 3578\r\nf 3578 3598 3574\r\nf 3546 3530 3552\r\nf 3552 3574 3546\r\nf 3515 3499 3530\r\nf 3530 3546 3515\r\nf 3482 3467 3499\r\nf 3499 3515 3482\r\nf 3444 3418 3467\r\nf 3467 3482 3444\r\nf 3396 3384 3418\r\nf 3418 3444 3396\r\nf 3375 3366 3384\r\nf 3384 3396 3375\r\nf 3371 3358 3366\r\nf 3366 3375 3371\r\nf 3629 3614 3619\r\nf 3619 3632 3629\r\nf 3612 3598 3614\r\nf 3614 3629 3612\r\nf 3585 3574 3598\r\nf 3598 3612 3585\r\nf 3557 3546 3574\r\nf 3574 3585 3557\r\nf 3525 3515 3546\r\nf 3546 3557 3525\r\nf 3494 3482 3515\r\nf 3515 3525 3494\r\nf 3462 3444 3482\r\nf 3482 3494 3462\r\nf 3414 3396 3444\r\nf 3444 3462 3414\r\nf 3388 3375 3396\r\nf 3396 3414 3388\r\nf 3380 3371 3375\r\nf 3375 3388 3380\r\nf 3634 3629 3632\r\nf 3632 3641 3634\r\nf 3618 3612 3629\r\nf 3629 3634 3618\r\nf 3596 3585 3612\r\nf 3612 3618 3596\r\nf 3563 3557 3585\r\nf 3585 3596 3563\r\nf 3532 3525 3557\r\nf 3557 3563 3532\r\nf 3501 3494 3525\r\nf 3525 3532 3501\r\nf 3474 3462 3494\r\nf 3494 3501 3474\r\nf 3436 3414 3462\r\nf 3462 3474 3436\r\nf 3399 3388 3414\r\nf 3414 3436 3399\r\nf 3392 3380 3388\r\nf 3388 3399 3392\r\nf 3640 3634 3641\r\nf 3641 3644 3640\r\nf 3625 3618 3634\r\nf 3634 3640 3625\r\nf 3602 3596 3618\r\nf 3618 3625 3602\r\nf 3568 3563 3596\r\nf 3596 3602 3568\r\nf 3539 3532 3563\r\nf 3563 3568 3539\r\nf 3507 3501 3532\r\nf 3532 3539 3507\r\nf 3478 3474 3501\r\nf 3501 3507 3478\r\nf 3448 3436 3474\r\nf 3474 3478 3448\r\nf 3410 3399 3436\r\nf 3436 3448 3410\r\nf 3400 3392 3399\r\nf 3399 3410 3400\r\nf 3638 3640 3644\r\nf 3644 3643 3638\r\nf 3623 3625 3640\r\nf 3640 3638 3623\r\nf 3600 3602 3625\r\nf 3625 3623 3600\r\nf 3570 3568 3602\r\nf 3602 3600 3570\r\nf 3544 3539 3568\r\nf 3568 3570 3544\r\nf 3511 3507 3539\r\nf 3539 3544 3511\r\nf 3484 3478 3507\r\nf 3507 3511 3484\r\nf 3454 3448 3478\r\nf 3478 3484 3454\r\nf 3434 3410 3448\r\nf 3448 3454 3434\r\nf 3412 3400 3410\r\nf 3410 3434 3412\r\nf 3631 3638 3643\r\nf 3643 3635 3631\r\nf 3615 3623 3638\r\nf 3638 3631 3615\r\nf 3594 3600 3623\r\nf 3623 3615 3594\r\nf 3565 3570 3600\r\nf 3600 3594 3565\r\nf 3541 3544 3570\r\nf 3570 3565 3541\r\nf 3512 3511 3544\r\nf 3544 3541 3512\r\nf 3488 3484 3511\r\nf 3511 3512 3488\r\nf 3457 3454 3484\r\nf 3484 3488 3457\r\nf 3440 3434 3454\r\nf 3454 3457 3440\r\nf 3423 3412 3434\r\nf 3434 3440 3423\r\nf 3621 3631 3635\r\nf 3635 3627 3621\r\nf 3608 3615 3631\r\nf 3631 3621 3608\r\nf 3583 3594 3615\r\nf 3615 3608 3583\r\nf 3559 3565 3594\r\nf 3594 3583 3559\r\nf 3534 3541 3565\r\nf 3565 3559 3534\r\nf 3509 3512 3541\r\nf 3541 3534 3509\r\nf 3486 3488 3512\r\nf 3512 3509 3486\r\nf 3460 3457 3488\r\nf 3488 3486 3460\r\nf 3442 3440 3457\r\nf 3457 3460 3442\r\nf 3430 3423 3440\r\nf 3440 3442 3430\r\nf 3606 3621 3627\r\nf 3627 3610 3606\r\nf 3589 3608 3621\r\nf 3621 3606 3589\r\nf 3572 3583 3608\r\nf 3608 3589 3572\r\nf 3548 3559 3583\r\nf 3583 3572 3548\r\nf 3527 3534 3559\r\nf 3559 3548 3527\r\nf 3503 3509 3534\r\nf 3534 3527 3503\r\nf 3480 3486 3509\r\nf 3509 3503 3480\r\nf 3456 3460 3486\r\nf 3486 3480 3456\r\nf 3438 3442 3460\r\nf 3460 3456 3438\r\nf 3428 3430 3442\r\nf 3442 3438 3428\r\nf 3581 3606 3610\r\nf 3610 3586 3581\r\nf 3576 3589 3606\r\nf 3606 3581 3576\r\nf 3555 3572 3589\r\nf 3589 3576 3555\r\nf 3535 3548 3572\r\nf 3572 3555 3535\r\nf 3516 3527 3548\r\nf 3548 3535 3516\r\nf 3491 3503 3527\r\nf 3527 3516 3491\r\nf 3471 3480 3503\r\nf 3503 3491 3471\r\nf 3446 3456 3480\r\nf 3480 3471 3446\r\nf 3420 3438 3456\r\nf 3456 3446 3420\r\nf 3407 3428 3438\r\nf 3438 3420 3407\r\nf 3561 3581 3586\r\nf 3586 3564 3561\r\nf 3550 3576 3581\r\nf 3581 3561 3550\r\nf 3538 3555 3576\r\nf 3576 3550 3538\r\nf 3519 3535 3555\r\nf 3555 3538 3519\r\nf 3498 3516 3535\r\nf 3535 3519 3498\r\nf 3476 3491 3516\r\nf 3516 3498 3476\r\nf 3452 3471 3491\r\nf 3491 3476 3452\r\nf 3432 3446 3471\r\nf 3471 3452 3432\r\nf 3402 3420 3446\r\nf 3446 3432 3402\r\nf 3397 3407 3420\r\nf 3420 3402 3397\r\nf 1888 2110 2104\r\nf 1888 2104 2096\r\nf 1888 2096 2076\r\nf 1888 2076 2048\r\nf 1888 2048 2030\r\nf 1888 2030 2006\r\nf 1888 2006 1982\r\nf 1888 1982 1960\r\nf 1888 1960 1936\r\nf 1888 1936 1732\r\nf 2257 2104 2110\r\nf 2110 2261 2257\r\nf 2249 2096 2104\r\nf 2104 2257 2249\r\nf 2226 2076 2096\r\nf 2096 2249 2226\r\nf 2200 2048 2076\r\nf 2076 2226 2200\r\nf 2142 2030 2048\r\nf 2048 2200 2142\r\nf 2094 2006 2030\r\nf 2030 2142 2094\r\nf 2036 1982 2006\r\nf 2006 2094 2036\r\nf 1988 1960 1982\r\nf 1982 2036 1988\r\nf 1948 1936 1960\r\nf 1960 1988 1948\r\nf 1728 1732 1936\r\nf 1936 1948 1728\r\nf 2310 2257 2261\r\nf 2261 2315 2310\r\nf 2300 2249 2257\r\nf 2257 2310 2300\r\nf 2279 2226 2249\r\nf 2249 2300 2279\r\nf 2243 2200 2226\r\nf 2226 2279 2243\r\nf 2204 2142 2200\r\nf 2200 2243 2204\r\nf 2132 2094 2142\r\nf 2142 2204 2132\r\nf 2067 2036 2094\r\nf 2094 2132 2067\r\nf 2000 1988 2036\r\nf 2036 2067 2000\r\nf 1956 1948 1988\r\nf 1988 2000 1956\r\nf 1734 1728 1948\r\nf 1948 1956 1734\r\nf 2312 2310 2315\r\nf 2315 2316 2312\r\nf 2302 2300 2310\r\nf 2310 2312 2302\r\nf 2281 2279 2300\r\nf 2300 2302 2281\r\nf 2245 2243 2279\r\nf 2279 2281 2245\r\nf 2206 2204 2243\r\nf 2243 2245 2206\r\nf 2134 2132 2204\r\nf 2204 2206 2134\r\nf 2068 2067 2132\r\nf 2132 2134 2068\r\nf 2002 2000 2067\r\nf 2067 2068 2002\r\nf 1958 1956 2000\r\nf 2000 2002 1958\r\nf 1878 1734 1956\r\nf 1956 1958 1878\r\nf 2285 2312 2316\r\nf 2316 2289 2285\r\nf 2259 2302 2312\r\nf 2312 2285 2259\r\nf 2241 2281 2302\r\nf 2302 2259 2241\r\nf 2214 2245 2281\r\nf 2281 2241 2214\r\nf 2168 2206 2245\r\nf 2245 2214 2168\r\nf 2106 2134 2206\r\nf 2206 2168 2106\r\nf 2042 2068 2134\r\nf 2134 2106 2042\r\nf 1994 2002 2068\r\nf 2068 2042 1994\r\nf 1952 1958 2002\r\nf 2002 1994 1952\r\nf 1731 1878 1958\r\nf 1958 1952 1731\r\nf 2220 2285 2289\r\nf 2289 2225 2220\r\nf 2210 2259 2285\r\nf 2285 2220 2210\r\nf 2186 2241 2259\r\nf 2259 2210 2186\r\nf 2146 2214 2241\r\nf 2241 2186 2146\r\nf 2108 2168 2214\r\nf 2214 2146 2108\r\nf 2060 2106 2168\r\nf 2168 2108 2060\r\nf 2018 2042 2106\r\nf 2106 2060 2018\r\nf 1978 1994 2042\r\nf 2042 2018 1978\r\nf 1944 1952 1994\r\nf 1994 1978 1944\r\nf 1727 1731 1952\r\nf 1952 1944 1727\r\nf 2141 2220 2225\r\nf 2225 2145 2141\r\nf 2127 2210 2220\r\nf 2220 2141 2127\r\nf 2112 2186 2210\r\nf 2210 2127 2112\r\nf 2084 2146 2186\r\nf 2186 2112 2084\r\nf 2044 2108 2146\r\nf 2146 2084 2044\r\nf 2024 2060 2108\r\nf 2108 2044 2024\r\nf 1992 2018 2060\r\nf 2060 2024 1992\r\nf 1970 1978 2018\r\nf 2018 1992 1970\r\nf 1942 1944 1978\r\nf 1978 1970 1942\r\nf 1721 1727 1944\r\nf 1944 1942 1721\r\nf 2079 2141 2145\r\nf 2145 2087 2079\r\nf 2075 2127 2141\r\nf 2141 2079 2075\r\nf 2055 2112 2127\r\nf 2127 2075 2055\r\nf 2039 2084 2112\r\nf 2112 2055 2039\r\nf 2021 2044 2084\r\nf 2084 2039 2021\r\nf 1996 2024 2044\r\nf 2044 2021 1996\r\nf 1974 1992 2024\r\nf 2024 1996 1974\r\nf 1954 1970 1992\r\nf 1992 1974 1954\r\nf 1934 1942 1970\r\nf 1970 1954 1934\r\nf 1720 1721 1942\r\nf 1942 1934 1720\r\nf 2063 2079 2087\r\nf 2087 2071 2063\r\nf 2051 2075 2079\r\nf 2079 2063 2051\r\nf 2041 2055 2075\r\nf 2075 2051 2041\r\nf 2029 2039 2055\r\nf 2055 2041 2029\r\nf 2013 2021 2039\r\nf 2039 2029 2013\r\nf 1991 1996 2021\r\nf 2021 2013 1991\r\nf 1972 1974 1996\r\nf 1996 1991 1972\r\nf 1950 1954 1974\r\nf 1974 1972 1950\r\nf 1932 1934 1954\r\nf 1954 1950 1932\r\nf 1701 1720 1934\r\nf 1934 1932 1701\r\nf 2115 2063 2071\r\nf 2071 2123 2115\r\nf 2101 2051 2063\r\nf 2063 2115 2101\r\nf 2081 2041 2051\r\nf 2051 2101 2081\r\nf 2057 2029 2041\r\nf 2041 2081 2057\r\nf 2033 2013 2029\r\nf 2029 2057 2033\r\nf 2009 1991 2013\r\nf 2013 2033 2009\r\nf 1984 1972 1991\r\nf 1991 2009 1984\r\nf 1964 1950 1972\r\nf 1972 1984 1964\r\nf 1938 1932 1950\r\nf 1950 1964 1938\r\nf 1698 1701 1932\r\nf 1932 1938 1698\r\nf 1888 1886 1686\r\nf 1888 1686 1662\r\nf 1888 1662 1640\r\nf 1888 1640 1616\r\nf 1888 1616 1592\r\nf 1888 1592 1574\r\nf 1888 1574 1546\r\nf 1888 1546 1526\r\nf 1888 1526 1518\r\nf 1888 1518 1512\r\nf 1674 1686 1886\r\nf 1886 1884 1674\r\nf 1634 1662 1686\r\nf 1686 1674 1634\r\nf 1586 1640 1662\r\nf 1662 1634 1586\r\nf 1528 1616 1640\r\nf 1640 1586 1528\r\nf 1480 1592 1616\r\nf 1616 1528 1480\r\nf 1422 1574 1592\r\nf 1592 1480 1422\r\nf 1396 1546 1574\r\nf 1574 1422 1396\r\nf 1373 1526 1546\r\nf 1546 1396 1373\r\nf 1365 1518 1526\r\nf 1526 1373 1365\r\nf 1361 1512 1518\r\nf 1518 1365 1361\r\nf 1666 1674 1884\r\nf 1884 1882 1666\r\nf 1622 1634 1674\r\nf 1674 1666 1622\r\nf 1557 1586 1634\r\nf 1634 1622 1557\r\nf 1490 1528 1586\r\nf 1586 1557 1490\r\nf 1418 1480 1528\r\nf 1528 1490 1418\r\nf 1379 1422 1480\r\nf 1480 1418 1379\r\nf 1343 1396 1422\r\nf 1422 1379 1343\r\nf 1322 1373 1396\r\nf 1396 1343 1322\r\nf 1312 1365 1373\r\nf 1373 1322 1312\r\nf 1309 1361 1365\r\nf 1365 1312 1309\r\nf 1664 1666 1882\r\nf 1882 1879 1664\r\nf 1620 1622 1666\r\nf 1666 1664 1620\r\nf 1554 1557 1622\r\nf 1622 1620 1554\r\nf 1488 1490 1557\r\nf 1557 1554 1488\r\nf 1416 1418 1490\r\nf 1490 1488 1416\r\nf 1377 1379 1418\r\nf 1418 1416 1377\r\nf 1341 1343 1379\r\nf 1379 1377 1341\r\nf 1320 1322 1343\r\nf 1343 1341 1320\r\nf 1310 1312 1322\r\nf 1322 1320 1310\r\nf 1306 1309 1312\r\nf 1312 1310 1306\r\nf 1670 1664 1879\r\nf 1879 1876 1670\r\nf 1628 1620 1664\r\nf 1664 1670 1628\r\nf 1580 1554 1620\r\nf 1620 1628 1580\r\nf 1516 1488 1554\r\nf 1554 1580 1516\r\nf 1454 1416 1488\r\nf 1488 1516 1454\r\nf 1408 1377 1416\r\nf 1416 1454 1408\r\nf 1381 1341 1377\r\nf 1377 1408 1381\r\nf 1363 1320 1341\r\nf 1341 1381 1363\r\nf 1337 1310 1320\r\nf 1320 1363 1337\r\nf 1333 1306 1310\r\nf 1310 1337 1333\r\nf 1678 1670 1876\r\nf 1876 1874 1678\r\nf 1644 1628 1670\r\nf 1670 1678 1644\r\nf 1604 1580 1628\r\nf 1628 1644 1604\r\nf 1562 1516 1580\r\nf 1580 1604 1562\r\nf 1514 1454 1516\r\nf 1516 1562 1514\r\nf 1476 1408 1454\r\nf 1454 1514 1476\r\nf 1436 1381 1408\r\nf 1408 1476 1436\r\nf 1412 1363 1381\r\nf 1381 1436 1412\r\nf 1402 1337 1363\r\nf 1363 1412 1402\r\nf 1399 1333 1337\r\nf 1337 1402 1399\r\nf 1680 1678 1874\r\nf 1874 1872 1680\r\nf 1652 1644 1678\r\nf 1678 1680 1652\r\nf 1630 1604 1644\r\nf 1644 1652 1630\r\nf 1598 1562 1604\r\nf 1604 1630 1598\r\nf 1578 1514 1562\r\nf 1562 1598 1578\r\nf 1538 1476 1514\r\nf 1514 1578 1538\r\nf 1510 1436 1476\r\nf 1476 1538 1510\r\nf 1497 1412 1436\r\nf 1436 1510 1497\r\nf 1483 1402 1412\r\nf 1412 1497 1483\r\nf 1479 1399 1402\r\nf 1402 1483 1479\r\nf 1688 1680 1872\r\nf 1872 1870 1688\r\nf 1668 1652 1680\r\nf 1680 1688 1668\r\nf 1648 1630 1652\r\nf 1652 1668 1648\r\nf 1626 1598 1630\r\nf 1630 1648 1626\r\nf 1603 1578 1598\r\nf 1598 1626 1603\r\nf 1585 1538 1578\r\nf 1578 1603 1585\r\nf 1569 1510 1538\r\nf 1538 1585 1569\r\nf 1549 1497 1510\r\nf 1510 1569 1549\r\nf 1545 1483 1497\r\nf 1497 1549 1545\r\nf 1537 1479 1483\r\nf 1483 1545 1537\r\nf 1690 1688 1870\r\nf 1870 1868 1690\r\nf 1672 1668 1688\r\nf 1688 1690 1672\r\nf 1650 1648 1668\r\nf 1668 1672 1650\r\nf 1633 1626 1648\r\nf 1648 1650 1633\r\nf 1611 1603 1626\r\nf 1626 1633 1611\r\nf 1595 1585 1603\r\nf 1603 1611 1595\r\nf 1583 1569 1585\r\nf 1585 1595 1583\r\nf 1573 1549 1569\r\nf 1569 1583 1573\r\nf 1561 1545 1549\r\nf 1549 1573 1561\r\nf 1553 1537 1545\r\nf 1545 1561 1553\r\nf 1684 1690 1868\r\nf 1868 1865 1684\r\nf 1658 1672 1690\r\nf 1690 1684 1658\r\nf 1638 1650 1672\r\nf 1672 1658 1638\r\nf 1615 1633 1650\r\nf 1650 1638 1615\r\nf 1591 1611 1633\r\nf 1633 1615 1591\r\nf 1567 1595 1611\r\nf 1611 1591 1567\r\nf 1543 1583 1595\r\nf 1595 1567 1543\r\nf 1523 1573 1583\r\nf 1583 1543 1523\r\nf 1509 1561 1573\r\nf 1573 1523 1509\r\nf 1501 1553 1561\r\nf 1561 1509 1501\r\nf 1888 1513 1519\r\nf 1888 1519 1527\r\nf 1888 1527 1547\r\nf 1888 1547 1575\r\nf 1888 1575 1593\r\nf 1888 1593 1617\r\nf 1888 1617 1641\r\nf 1888 1641 1663\r\nf 1888 1663 1687\r\nf 1888 1687 1894\r\nf 1366 1519 1513\r\nf 1513 1362 1366\r\nf 1374 1527 1519\r\nf 1519 1366 1374\r\nf 1397 1547 1527\r\nf 1527 1374 1397\r\nf 1423 1575 1547\r\nf 1547 1397 1423\r\nf 1481 1593 1575\r\nf 1575 1423 1481\r\nf 1529 1617 1593\r\nf 1593 1481 1529\r\nf 1587 1641 1617\r\nf 1617 1529 1587\r\nf 1635 1663 1641\r\nf 1641 1587 1635\r\nf 1675 1687 1663\r\nf 1663 1635 1675\r\nf 1895 1894 1687\r\nf 1687 1675 1895\r\nf 1313 1366 1362\r\nf 1362 1308 1313\r\nf 1323 1374 1366\r\nf 1366 1313 1323\r\nf 1344 1397 1374\r\nf 1374 1323 1344\r\nf 1380 1423 1397\r\nf 1397 1344 1380\r\nf 1419 1481 1423\r\nf 1423 1380 1419\r\nf 1491 1529 1481\r\nf 1481 1419 1491\r\nf 1556 1587 1529\r\nf 1529 1491 1556\r\nf 1623 1635 1587\r\nf 1587 1556 1623\r\nf 1667 1675 1635\r\nf 1635 1623 1667\r\nf 1890 1895 1675\r\nf 1675 1667 1890\r\nf 1311 1313 1308\r\nf 1308 1307 1311\r\nf 1321 1323 1313\r\nf 1313 1311 1321\r\nf 1342 1344 1323\r\nf 1323 1321 1342\r\nf 1378 1380 1344\r\nf 1344 1342 1378\r\nf 1417 1419 1380\r\nf 1380 1378 1417\r\nf 1489 1491 1419\r\nf 1419 1417 1489\r\nf 1555 1556 1491\r\nf 1491 1489 1555\r\nf 1621 1623 1556\r\nf 1556 1555 1621\r\nf 1665 1667 1623\r\nf 1623 1621 1665\r\nf 1881 1890 1667\r\nf 1667 1665 1881\r\nf 1338 1311 1307\r\nf 1307 1334 1338\r\nf 1364 1321 1311\r\nf 1311 1338 1364\r\nf 1382 1342 1321\r\nf 1321 1364 1382\r\nf 1409 1378 1342\r\nf 1342 1382 1409\r\nf 1455 1417 1378\r\nf 1378 1409 1455\r\nf 1517 1489 1417\r\nf 1417 1455 1517\r\nf 1581 1555 1489\r\nf 1489 1517 1581\r\nf 1629 1621 1555\r\nf 1555 1581 1629\r\nf 1671 1665 1621\r\nf 1621 1629 1671\r\nf 1893 1881 1665\r\nf 1665 1671 1893\r\nf 1403 1338 1334\r\nf 1334 1398 1403\r\nf 1413 1364 1338\r\nf 1338 1403 1413\r\nf 1437 1382 1364\r\nf 1364 1413 1437\r\nf 1477 1409 1382\r\nf 1382 1437 1477\r\nf 1515 1455 1409\r\nf 1409 1477 1515\r\nf 1563 1517 1455\r\nf 1455 1515 1563\r\nf 1605 1581 1517\r\nf 1517 1563 1605\r\nf 1645 1629 1581\r\nf 1581 1605 1645\r\nf 1679 1671 1629\r\nf 1629 1645 1679\r\nf 1900 1893 1671\r\nf 1671 1679 1900\r\nf 1482 1403 1398\r\nf 1398 1478 1482\r\nf 1496 1413 1403\r\nf 1403 1482 1496\r\nf 1511 1437 1413\r\nf 1413 1496 1511\r\nf 1539 1477 1437\r\nf 1437 1511 1539\r\nf 1579 1515 1477\r\nf 1477 1539 1579\r\nf 1599 1563 1515\r\nf 1515 1579 1599\r\nf 1631 1605 1563\r\nf 1563 1599 1631\r\nf 1653 1645 1605\r\nf 1605 1631 1653\r\nf 1681 1679 1645\r\nf 1645 1653 1681\r\nf 1902 1900 1679\r\nf 1679 1681 1902\r\nf 1544 1482 1478\r\nf 1478 1536 1544\r\nf 1548 1496 1482\r\nf 1482 1544 1548\r\nf 1568 1511 1496\r\nf 1496 1548 1568\r\nf 1584 1539 1511\r\nf 1511 1568 1584\r\nf 1602 1579 1539\r\nf 1539 1584 1602\r\nf 1627 1599 1579\r\nf 1579 1602 1627\r\nf 1649 1631 1599\r\nf 1599 1627 1649\r\nf 1669 1653 1631\r\nf 1631 1649 1669\r\nf 1689 1681 1653\r\nf 1653 1669 1689\r\nf 1921 1902 1681\r\nf 1681 1689 1921\r\nf 1560 1544 1536\r\nf 1536 1552 1560\r\nf 1572 1548 1544\r\nf 1544 1560 1572\r\nf 1582 1568 1548\r\nf 1548 1572 1582\r\nf 1594 1584 1568\r\nf 1568 1582 1594\r\nf 1610 1602 1584\r\nf 1584 1594 1610\r\nf 1632 1627 1602\r\nf 1602 1610 1632\r\nf 1651 1649 1627\r\nf 1627 1632 1651\r\nf 1673 1669 1649\r\nf 1649 1651 1673\r\nf 1691 1689 1669\r\nf 1669 1673 1691\r\nf 1922 1921 1689\r\nf 1689 1691 1922\r\nf 1508 1560 1552\r\nf 1552 1500 1508\r\nf 1522 1572 1560\r\nf 1560 1508 1522\r\nf 1542 1582 1572\r\nf 1572 1522 1542\r\nf 1566 1594 1582\r\nf 1582 1542 1566\r\nf 1590 1610 1594\r\nf 1594 1566 1590\r\nf 1614 1632 1610\r\nf 1610 1590 1614\r\nf 1639 1651 1632\r\nf 1632 1614 1639\r\nf 1659 1673 1651\r\nf 1651 1639 1659\r\nf 1685 1691 1673\r\nf 1673 1659 1685\r\nf 1928 1922 1691\r\nf 1691 1685 1928\r\nf 1888 1887 1937\r\nf 1888 1937 1961\r\nf 1888 1961 1983\r\nf 1888 1983 2007\r\nf 1888 2007 2031\r\nf 1888 2031 2049\r\nf 1888 2049 2077\r\nf 1888 2077 2097\r\nf 1888 2097 2105\r\nf 1888 2105 2111\r\nf 1949 1937 1887\r\nf 1887 1885 1949\r\nf 1989 1961 1937\r\nf 1937 1949 1989\r\nf 2037 1983 1961\r\nf 1961 1989 2037\r\nf 2095 2007 1983\r\nf 1983 2037 2095\r\nf 2143 2031 2007\r\nf 2007 2095 2143\r\nf 2201 2049 2031\r\nf 2031 2143 2201\r\nf 2227 2077 2049\r\nf 2049 2201 2227\r\nf 2250 2097 2077\r\nf 2077 2227 2250\r\nf 2258 2105 2097\r\nf 2097 2250 2258\r\nf 2262 2111 2105\r\nf 2105 2258 2262\r\nf 1957 1949 1885\r\nf 1885 1883 1957\r\nf 2001 1989 1949\r\nf 1949 1957 2001\r\nf 2066 2037 1989\r\nf 1989 2001 2066\r\nf 2133 2095 2037\r\nf 2037 2066 2133\r\nf 2205 2143 2095\r\nf 2095 2133 2205\r\nf 2244 2201 2143\r\nf 2143 2205 2244\r\nf 2280 2227 2201\r\nf 2201 2244 2280\r\nf 2301 2250 2227\r\nf 2227 2280 2301\r\nf 2311 2258 2250\r\nf 2250 2301 2311\r\nf 2314 2262 2258\r\nf 2258 2311 2314\r\nf 1959 1957 1883\r\nf 1883 1880 1959\r\nf 2003 2001 1957\r\nf 1957 1959 2003\r\nf 2069 2066 2001\r\nf 2001 2003 2069\r\nf 2135 2133 2066\r\nf 2066 2069 2135\r\nf 2207 2205 2133\r\nf 2133 2135 2207\r\nf 2246 2244 2205\r\nf 2205 2207 2246\r\nf 2282 2280 2244\r\nf 2244 2246 2282\r\nf 2303 2301 2280\r\nf 2280 2282 2303\r\nf 2313 2311 2301\r\nf 2301 2303 2313\r\nf 2317 2314 2311\r\nf 2311 2313 2317\r\nf 1953 1959 1880\r\nf 1880 1877 1953\r\nf 1995 2003 1959\r\nf 1959 1953 1995\r\nf 2043 2069 2003\r\nf 2003 1995 2043\r\nf 2107 2135 2069\r\nf 2069 2043 2107\r\nf 2169 2207 2135\r\nf 2135 2107 2169\r\nf 2215 2246 2207\r\nf 2207 2169 2215\r\nf 2242 2282 2246\r\nf 2246 2215 2242\r\nf 2260 2303 2282\r\nf 2282 2242 2260\r\nf 2286 2313 2303\r\nf 2303 2260 2286\r\nf 2290 2317 2313\r\nf 2313 2286 2290\r\nf 1945 1953 1877\r\nf 1877 1875 1945\r\nf 1979 1995 1953\r\nf 1953 1945 1979\r\nf 2019 2043 1995\r\nf 1995 1979 2019\r\nf 2061 2107 2043\r\nf 2043 2019 2061\r\nf 2109 2169 2107\r\nf 2107 2061 2109\r\nf 2147 2215 2169\r\nf 2169 2109 2147\r\nf 2187 2242 2215\r\nf 2215 2147 2187\r\nf 2211 2260 2242\r\nf 2242 2187 2211\r\nf 2221 2286 2260\r\nf 2260 2211 2221\r\nf 2224 2290 2286\r\nf 2286 2221 2224\r\nf 1943 1945 1875\r\nf 1875 1873 1943\r\nf 1971 1979 1945\r\nf 1945 1943 1971\r\nf 1993 2019 1979\r\nf 1979 1971 1993\r\nf 2025 2061 2019\r\nf 2019 1993 2025\r\nf 2045 2109 2061\r\nf 2061 2025 2045\r\nf 2085 2147 2109\r\nf 2109 2045 2085\r\nf 2113 2187 2147\r\nf 2147 2085 2113\r\nf 2126 2211 2187\r\nf 2187 2113 2126\r\nf 2140 2221 2211\r\nf 2211 2126 2140\r\nf 2144 2224 2221\r\nf 2221 2140 2144\r\nf 1935 1943 1873\r\nf 1873 1871 1935\r\nf 1955 1971 1943\r\nf 1943 1935 1955\r\nf 1975 1993 1971\r\nf 1971 1955 1975\r\nf 1997 2025 1993\r\nf 1993 1975 1997\r\nf 2020 2045 2025\r\nf 2025 1997 2020\r\nf 2038 2085 2045\r\nf 2045 2020 2038\r\nf 2054 2113 2085\r\nf 2085 2038 2054\r\nf 2074 2126 2113\r\nf 2113 2054 2074\r\nf 2078 2140 2126\r\nf 2126 2074 2078\r\nf 2086 2144 2140\r\nf 2140 2078 2086\r\nf 1933 1935 1871\r\nf 1871 1869 1933\r\nf 1951 1955 1935\r\nf 1935 1933 1951\r\nf 1973 1975 1955\r\nf 1955 1951 1973\r\nf 1990 1997 1975\r\nf 1975 1973 1990\r\nf 2012 2020 1997\r\nf 1997 1990 2012\r\nf 2028 2038 2020\r\nf 2020 2012 2028\r\nf 2040 2054 2038\r\nf 2038 2028 2040\r\nf 2050 2074 2054\r\nf 2054 2040 2050\r\nf 2062 2078 2074\r\nf 2074 2050 2062\r\nf 2070 2086 2078\r\nf 2078 2062 2070\r\nf 1939 1933 1869\r\nf 1869 1866 1939\r\nf 1965 1951 1933\r\nf 1933 1939 1965\r\nf 1985 1973 1951\r\nf 1951 1965 1985\r\nf 2008 1990 1973\r\nf 1973 1985 2008\r\nf 2032 2012 1990\r\nf 1990 2008 2032\r\nf 2056 2028 2012\r\nf 2012 2032 2056\r\nf 2080 2040 2028\r\nf 2028 2056 2080\r\nf 2100 2050 2040\r\nf 2040 2080 2100\r\nf 2114 2062 2050\r\nf 2050 2100 2114\r\nf 2122 2070 2062\r\nf 2062 2114 2122\r\nf 2232 2116 2124\r\nf 2124 2236 2232\r\nf 2218 2102 2116\r\nf 2116 2232 2218\r\nf 2199 2082 2102\r\nf 2102 2218 2199\r\nf 2150 2058 2082\r\nf 2082 2199 2150\r\nf 2120 2034 2058\r\nf 2058 2150 2120\r\nf 2064 2010 2034\r\nf 2034 2120 2064\r\nf 2023 1986 2010\r\nf 2010 2064 2023\r\nf 1980 1966 1986\r\nf 1986 2023 1980\r\nf 1946 1940 1966\r\nf 1966 1980 1946\r\nf 1862 1730 1940\r\nf 1940 1946 1862\r\nf 2332 2232 2236\r\nf 2236 2336 2332\r\nf 2322 2218 2232\r\nf 2232 2332 2322\r\nf 2306 2199 2218\r\nf 2218 2322 2306\r\nf 2275 2150 2199\r\nf 2199 2306 2275\r\nf 2234 2120 2150\r\nf 2150 2275 2234\r\nf 2170 2064 2120\r\nf 2120 2234 2170\r\nf 2093 2023 2064\r\nf 2064 2170 2093\r\nf 2016 1980 2023\r\nf 2023 2093 2016\r\nf 1968 1946 1980\r\nf 1980 2016 1968\r\nf 1858 1862 1946\r\nf 1946 1968 1858\r\nf 2409 2332 2336\r\nf 2336 2413 2409\r\nf 2400 2322 2332\r\nf 2332 2409 2400\r\nf 2376 2306 2322\r\nf 2322 2400 2376\r\nf 2349 2275 2306\r\nf 2306 2376 2349\r\nf 2324 2234 2275\r\nf 2275 2349 2324\r\nf 2271 2170 2234\r\nf 2234 2324 2271\r\nf 2185 2093 2170\r\nf 2170 2271 2185\r\nf 2072 2016 2093\r\nf 2093 2185 2072\r\nf 1976 1968 2016\r\nf 2016 2072 1976\r\nf 1729 1858 1968\r\nf 1968 1976 1729\r\nf 2488 2409 2413\r\nf 2413 2498 2488\r\nf 2470 2400 2409\r\nf 2409 2488 2470\r\nf 2444 2376 2400\r\nf 2400 2470 2444\r\nf 2418 2349 2376\r\nf 2376 2444 2418\r\nf 2384 2324 2349\r\nf 2349 2418 2384\r\nf 2338 2271 2324\r\nf 2324 2384 2338\r\nf 2269 2185 2271\r\nf 2271 2338 2269\r\nf 2138 2072 2185\r\nf 2185 2269 2138\r\nf 1998 1976 2072\r\nf 2072 2138 1998\r\nf 1722 1729 1976\r\nf 1976 1998 1722\r\nf 2559 2488 2498\r\nf 2498 2569 2559\r\nf 2549 2470 2488\r\nf 2488 2559 2549\r\nf 2531 2444 2470\r\nf 2470 2549 2531\r\nf 2492 2418 2444\r\nf 2444 2531 2492\r\nf 2436 2384 2418\r\nf 2418 2492 2436\r\nf 2394 2338 2384\r\nf 2384 2436 2394\r\nf 2326 2269 2338\r\nf 2338 2394 2326\r\nf 2212 2138 2269\r\nf 2269 2326 2212\r\nf 2026 1998 2138\r\nf 2138 2212 2026\r\nf 1850 1722 1998\r\nf 1998 2026 1850\r\nf 2653 2559 2569\r\nf 2569 2655 2653\r\nf 2631 2549 2559\r\nf 2559 2653 2631\r\nf 2593 2531 2549\r\nf 2549 2631 2593\r\nf 2551 2492 2531\r\nf 2531 2593 2551\r\nf 2510 2436 2492\r\nf 2492 2551 2510\r\nf 2432 2394 2436\r\nf 2436 2510 2432\r\nf 2366 2326 2394\r\nf 2394 2432 2366\r\nf 2263 2212 2326\r\nf 2326 2366 2263\r\nf 2052 2026 2212\r\nf 2212 2263 2052\r\nf 1726 1850 2026\r\nf 2026 2052 1726\r\nf 2720 2653 2655\r\nf 2655 2726 2720\r\nf 2697 2631 2653\r\nf 2653 2720 2697\r\nf 2662 2593 2631\r\nf 2631 2697 2662\r\nf 2607 2551 2593\r\nf 2593 2662 2607\r\nf 2547 2510 2551\r\nf 2551 2607 2547\r\nf 2484 2432 2510\r\nf 2510 2547 2484\r\nf 2405 2366 2432\r\nf 2432 2484 2405\r\nf 2308 2263 2366\r\nf 2366 2405 2308\r\nf 2090 2052 2263\r\nf 2263 2308 2090\r\nf 1719 1726 2052\r\nf 2052 2090 1719\r\nf 2787 2720 2726\r\nf 2726 2795 2787\r\nf 2759 2697 2720\r\nf 2720 2787 2759\r\nf 2713 2662 2697\r\nf 2697 2759 2713\r\nf 2657 2607 2662\r\nf 2662 2713 2657\r\nf 2589 2547 2607\r\nf 2607 2657 2589\r\nf 2525 2484 2547\r\nf 2547 2589 2525\r\nf 2422 2405 2484\r\nf 2484 2525 2422\r\nf 2330 2308 2405\r\nf 2405 2422 2330\r\nf 2118 2090 2308\r\nf 2308 2330 2118\r\nf 1700 1719 2090\r\nf 2090 2118 1700\r\nf 2834 2787 2795\r\nf 2795 2844 2834\r\nf 2798 2759 2787\r\nf 2787 2834 2798\r\nf 2750 2713 2759\r\nf 2759 2798 2750\r\nf 2690 2657 2713\r\nf 2713 2750 2690\r\nf 2624 2589 2657\r\nf 2657 2690 2624\r\nf 2536 2525 2589\r\nf 2589 2624 2536\r\nf 2441 2422 2525\r\nf 2525 2536 2441\r\nf 2340 2330 2422\r\nf 2422 2441 2340\r\nf 2128 2118 2330\r\nf 2330 2340 2128\r\nf 1825 1700 2118\r\nf 2118 2128 1825\r\nf 2847 2834 2844\r\nf 2844 2857 2847\r\nf 2821 2798 2834\r\nf 2834 2847 2821\r\nf 2765 2750 2798\r\nf 2798 2821 2765\r\nf 2703 2690 2750\r\nf 2750 2765 2703\r\nf 2637 2624 2690\r\nf 2690 2703 2637\r\nf 2543 2536 2624\r\nf 2624 2637 2543\r\nf 2446 2441 2536\r\nf 2536 2543 2446\r\nf 2344 2340 2441\r\nf 2441 2446 2344\r\nf 2136 2128 2340\r\nf 2340 2344 2136\r\nf 1713 1825 2128\r\nf 2128 2136 1713\r\nf 1676 1682 1864\r\nf 1864 1862 1676\r\nf 1642 1656 1682\r\nf 1682 1676 1642\r\nf 1601 1636 1656\r\nf 1656 1642 1601\r\nf 1558 1612 1636\r\nf 1636 1601 1558\r\nf 1502 1588 1612\r\nf 1612 1558 1502\r\nf 1472 1564 1588\r\nf 1588 1502 1472\r\nf 1425 1540 1564\r\nf 1564 1472 1425\r\nf 1404 1520 1540\r\nf 1540 1425 1404\r\nf 1390 1506 1520\r\nf 1520 1404 1390\r\nf 1387 1498 1506\r\nf 1506 1390 1387\r\nf 1654 1676 1862\r\nf 1862 1859 1654\r\nf 1606 1642 1676\r\nf 1676 1654 1606\r\nf 1531 1601 1642\r\nf 1642 1606 1531\r\nf 1452 1558 1601\r\nf 1601 1531 1452\r\nf 1388 1502 1558\r\nf 1558 1452 1388\r\nf 1347 1472 1502\r\nf 1502 1388 1347\r\nf 1316 1425 1472\r\nf 1472 1347 1316\r\nf 1300 1404 1425\r\nf 1425 1316 1300\r\nf 1290 1390 1404\r\nf 1404 1300 1290\r\nf 1286 1387 1390\r\nf 1390 1290 1286\r\nf 1646 1654 1859\r\nf 1859 1856 1646\r\nf 1550 1606 1654\r\nf 1654 1646 1550\r\nf 1439 1531 1606\r\nf 1606 1550 1439\r\nf 1351 1452 1531\r\nf 1531 1439 1351\r\nf 1298 1388 1452\r\nf 1452 1351 1298\r\nf 1275 1347 1388\r\nf 1388 1298 1275\r\nf 1246 1316 1347\r\nf 1347 1275 1246\r\nf 1222 1300 1316\r\nf 1316 1246 1222\r\nf 1215 1290 1300\r\nf 1300 1222 1215\r\nf 1211 1286 1290\r\nf 1290 1215 1211\r\nf 1624 1646 1856\r\nf 1856 1854 1624\r\nf 1484 1550 1646\r\nf 1646 1624 1484\r\nf 1353 1439 1550\r\nf 1550 1484 1353\r\nf 1284 1351 1439\r\nf 1439 1353 1284\r\nf 1238 1298 1351\r\nf 1351 1284 1238\r\nf 1204 1275 1298\r\nf 1298 1238 1204\r\nf 1178 1246 1275\r\nf 1275 1204 1178\r\nf 1152 1222 1246\r\nf 1246 1178 1152\r\nf 1134 1215 1222\r\nf 1222 1152 1134\r\nf 1124 1211 1215\r\nf 1215 1134 1124\r\nf 1596 1624 1854\r\nf 1854 1851 1596\r\nf 1410 1484 1624\r\nf 1624 1596 1410\r\nf 1296 1353 1484\r\nf 1484 1410 1296\r\nf 1228 1284 1353\r\nf 1353 1296 1228\r\nf 1186 1238 1284\r\nf 1284 1228 1186\r\nf 1130 1204 1238\r\nf 1238 1186 1130\r\nf 1091 1178 1204\r\nf 1204 1130 1091\r\nf 1073 1152 1178\r\nf 1178 1091 1073\r\nf 1063 1134 1152\r\nf 1152 1073 1063\r\nf 1053 1124 1134\r\nf 1134 1063 1053\r\nf 1570 1596 1851\r\nf 1851 1848 1570\r\nf 1359 1410 1596\r\nf 1596 1570 1359\r\nf 1256 1296 1410\r\nf 1410 1359 1256\r\nf 1190 1228 1296\r\nf 1296 1256 1190\r\nf 1112 1186 1228\r\nf 1228 1190 1112\r\nf 1071 1130 1186\r\nf 1186 1112 1071\r\nf 1029 1091 1130\r\nf 1130 1071 1029\r\nf 991 1073 1091\r\nf 1091 1029 991\r\nf 969 1063 1073\r\nf 1073 991 969\r\nf 967 1053 1063\r\nf 1063 969 967\r\nf 1532 1570 1848\r\nf 1848 1846 1532\r\nf 1314 1359 1570\r\nf 1570 1532 1314\r\nf 1219 1256 1359\r\nf 1359 1314 1219\r\nf 1138 1190 1256\r\nf 1256 1219 1138\r\nf 1075 1112 1190\r\nf 1190 1138 1075\r\nf 1015 1071 1112\r\nf 1112 1075 1015\r\nf 962 1029 1071\r\nf 1071 1015 962\r\nf 925 991 1029\r\nf 1029 962 925\r\nf 904 969 991\r\nf 991 925 904\r\nf 898 967 969\r\nf 969 904 898\r\nf 1504 1532 1846\r\nf 1846 1832 1504\r\nf 1292 1314 1532\r\nf 1532 1504 1292\r\nf 1200 1219 1314\r\nf 1314 1292 1200\r\nf 1097 1138 1219\r\nf 1219 1200 1097\r\nf 1033 1075 1138\r\nf 1138 1097 1033\r\nf 965 1015 1075\r\nf 1075 1033 965\r\nf 909 962 1015\r\nf 1015 965 909\r\nf 863 925 962\r\nf 962 909 863\r\nf 835 904 925\r\nf 925 863 835\r\nf 827 898 904\r\nf 904 835 827\r\nf 1494 1504 1832\r\nf 1832 1824 1494\r\nf 1282 1292 1504\r\nf 1504 1494 1282\r\nf 1183 1200 1292\r\nf 1292 1282 1183\r\nf 1088 1097 1200\r\nf 1200 1183 1088\r\nf 1000 1033 1097\r\nf 1097 1088 1000\r\nf 934 965 1033\r\nf 1033 1000 934\r\nf 874 909 965\r\nf 965 934 874\r\nf 826 863 909\r\nf 909 874 826\r\nf 790 835 863\r\nf 863 826 790\r\nf 780 827 835\r\nf 835 790 780\r\nf 1486 1494 1824\r\nf 1824 1814 1486\r\nf 1278 1282 1494\r\nf 1494 1486 1278\r\nf 1176 1183 1282\r\nf 1282 1278 1176\r\nf 1079 1088 1183\r\nf 1183 1176 1079\r\nf 985 1000 1088\r\nf 1088 1079 985\r\nf 919 934 1000\r\nf 1000 985 919\r\nf 857 874 934\r\nf 934 919 857\r\nf 801 826 874\r\nf 874 857 801\r\nf 775 790 826\r\nf 826 801 775\r\nf 765 780 790\r\nf 790 775 765\r\nf 1391 1507 1499\r\nf 1499 1387 1391\r\nf 1405 1521 1507\r\nf 1507 1391 1405\r\nf 1424 1541 1521\r\nf 1521 1405 1424\r\nf 1473 1565 1541\r\nf 1541 1424 1473\r\nf 1503 1589 1565\r\nf 1565 1473 1503\r\nf 1559 1613 1589\r\nf 1589 1503 1559\r\nf 1600 1637 1613\r\nf 1613 1559 1600\r\nf 1643 1657 1637\r\nf 1637 1600 1643\r\nf 1677 1683 1657\r\nf 1657 1643 1677\r\nf 1863 1892 1683\r\nf 1683 1677 1863\r\nf 1291 1391 1387\r\nf 1387 1287 1291\r\nf 1301 1405 1391\r\nf 1391 1291 1301\r\nf 1317 1424 1405\r\nf 1405 1301 1317\r\nf 1348 1473 1424\r\nf 1424 1317 1348\r\nf 1389 1503 1473\r\nf 1473 1348 1389\r\nf 1453 1559 1503\r\nf 1503 1389 1453\r\nf 1530 1600 1559\r\nf 1559 1453 1530\r\nf 1607 1643 1600\r\nf 1600 1530 1607\r\nf 1655 1677 1643\r\nf 1643 1607 1655\r\nf 1861 1863 1677\r\nf 1677 1655 1861\r\nf 1214 1291 1287\r\nf 1287 1210 1214\r\nf 1223 1301 1291\r\nf 1291 1214 1223\r\nf 1247 1317 1301\r\nf 1301 1223 1247\r\nf 1274 1348 1317\r\nf 1317 1247 1274\r\nf 1299 1389 1348\r\nf 1348 1274 1299\r\nf 1352 1453 1389\r\nf 1389 1299 1352\r\nf 1438 1530 1453\r\nf 1453 1352 1438\r\nf 1551 1607 1530\r\nf 1530 1438 1551\r\nf 1647 1655 1607\r\nf 1607 1551 1647\r\nf 1891 1861 1655\r\nf 1655 1647 1891\r\nf 1135 1214 1210\r\nf 1210 1125 1135\r\nf 1153 1223 1214\r\nf 1214 1135 1153\r\nf 1179 1247 1223\r\nf 1223 1153 1179\r\nf 1205 1274 1247\r\nf 1247 1179 1205\r\nf 1239 1299 1274\r\nf 1274 1205 1239\r\nf 1285 1352 1299\r\nf 1299 1239 1285\r\nf 1354 1438 1352\r\nf 1352 1285 1354\r\nf 1485 1551 1438\r\nf 1438 1354 1485\r\nf 1625 1647 1551\r\nf 1551 1485 1625\r\nf 1901 1891 1647\r\nf 1647 1625 1901\r\nf 1064 1135 1125\r\nf 1125 1054 1064\r\nf 1074 1153 1135\r\nf 1135 1064 1074\r\nf 1092 1179 1153\r\nf 1153 1074 1092\r\nf 1131 1205 1179\r\nf 1179 1092 1131\r\nf 1187 1239 1205\r\nf 1205 1131 1187\r\nf 1229 1285 1239\r\nf 1239 1187 1229\r\nf 1297 1354 1285\r\nf 1285 1229 1297\r\nf 1411 1485 1354\r\nf 1354 1297 1411\r\nf 1597 1625 1485\r\nf 1485 1411 1597\r\nf 1853 1901 1625\r\nf 1625 1597 1853\r\nf 970 1064 1054\r\nf 1054 968 970\r\nf 992 1074 1064\r\nf 1064 970 992\r\nf 1030 1092 1074\r\nf 1074 992 1030\r\nf 1072 1131 1092\r\nf 1092 1030 1072\r\nf 1113 1187 1131\r\nf 1131 1072 1113\r\nf 1191 1229 1187\r\nf 1187 1113 1191\r\nf 1257 1297 1229\r\nf 1229 1191 1257\r\nf 1360 1411 1297\r\nf 1297 1257 1360\r\nf 1571 1597 1411\r\nf 1411 1360 1571\r\nf 1899 1853 1597\r\nf 1597 1571 1899\r\nf 903 970 968\r\nf 968 897 903\r\nf 926 992 970\r\nf 970 903 926\r\nf 961 1030 992\r\nf 992 926 961\r\nf 1016 1072 1030\r\nf 1030 961 1016\r\nf 1076 1113 1072\r\nf 1072 1016 1076\r\nf 1139 1191 1113\r\nf 1113 1076 1139\r\nf 1218 1257 1191\r\nf 1191 1139 1218\r\nf 1315 1360 1257\r\nf 1257 1218 1315\r\nf 1533 1571 1360\r\nf 1360 1315 1533\r\nf 1920 1899 1571\r\nf 1571 1533 1920\r\nf 836 903 897\r\nf 897 828 836\r\nf 864 926 903\r\nf 903 836 864\r\nf 910 961 926\r\nf 926 864 910\r\nf 966 1016 961\r\nf 961 910 966\r\nf 1034 1076 1016\r\nf 1016 966 1034\r\nf 1098 1139 1076\r\nf 1076 1034 1098\r\nf 1201 1218 1139\r\nf 1139 1098 1201\r\nf 1293 1315 1218\r\nf 1218 1201 1293\r\nf 1505 1533 1315\r\nf 1315 1293 1505\r\nf 1924 1920 1533\r\nf 1533 1505 1924\r\nf 789 836 828\r\nf 828 779 789\r\nf 825 864 836\r\nf 836 789 825\r\nf 873 910 864\r\nf 864 825 873\r\nf 933 966 910\r\nf 910 873 933\r\nf 999 1034 966\r\nf 966 933 999\r\nf 1087 1098 1034\r\nf 1034 999 1087\r\nf 1182 1201 1098\r\nf 1098 1087 1182\r\nf 1283 1293 1201\r\nf 1201 1182 1283\r\nf 1495 1505 1293\r\nf 1293 1283 1495\r\nf 1826 1924 1505\r\nf 1505 1495 1826\r\nf 776 789 779\r\nf 779 766 776\r\nf 802 825 789\r\nf 789 776 802\r\nf 858 873 825\r\nf 825 802 858\r\nf 920 933 873\r\nf 873 858 920\r\nf 986 999 933\r\nf 933 920 986\r\nf 1080 1087 999\r\nf 999 986 1080\r\nf 1177 1182 1087\r\nf 1087 1080 1177\r\nf 1279 1283 1182\r\nf 1182 1177 1279\r\nf 1487 1495 1283\r\nf 1283 1279 1487\r\nf 1914 1826 1495\r\nf 1495 1487 1914\r\nf 1947 1941 1867\r\nf 1867 1863 1947\r\nf 1981 1967 1941\r\nf 1941 1947 1981\r\nf 2022 1987 1967\r\nf 1967 1981 2022\r\nf 2065 2011 1987\r\nf 1987 2022 2065\r\nf 2121 2035 2011\r\nf 2011 2065 2121\r\nf 2151 2059 2035\r\nf 2035 2121 2151\r\nf 2198 2083 2059\r\nf 2059 2151 2198\r\nf 2219 2103 2083\r\nf 2083 2198 2219\r\nf 2233 2117 2103\r\nf 2103 2219 2233\r\nf 2236 2125 2117\r\nf 2117 2233 2236\r\nf 1969 1947 1863\r\nf 1863 1860 1969\r\nf 2017 1981 1947\r\nf 1947 1969 2017\r\nf 2092 2022 1981\r\nf 1981 2017 2092\r\nf 2171 2065 2022\r\nf 2022 2092 2171\r\nf 2235 2121 2065\r\nf 2065 2171 2235\r\nf 2276 2151 2121\r\nf 2121 2235 2276\r\nf 2307 2198 2151\r\nf 2151 2276 2307\r\nf 2323 2219 2198\r\nf 2198 2307 2323\r\nf 2333 2233 2219\r\nf 2219 2323 2333\r\nf 2337 2236 2233\r\nf 2233 2333 2337\r\nf 1977 1969 1860\r\nf 1860 1857 1977\r\nf 2073 2017 1969\r\nf 1969 1977 2073\r\nf 2184 2092 2017\r\nf 2017 2073 2184\r\nf 2272 2171 2092\r\nf 2092 2184 2272\r\nf 2325 2235 2171\r\nf 2171 2272 2325\r\nf 2348 2276 2235\r\nf 2235 2325 2348\r\nf 2377 2307 2276\r\nf 2276 2348 2377\r\nf 2401 2323 2307\r\nf 2307 2377 2401\r\nf 2408 2333 2323\r\nf 2323 2401 2408\r\nf 2412 2337 2333\r\nf 2333 2408 2412\r\nf 1999 1977 1857\r\nf 1857 1855 1999\r\nf 2139 2073 1977\r\nf 1977 1999 2139\r\nf 2270 2184 2073\r\nf 2073 2139 2270\r\nf 2339 2272 2184\r\nf 2184 2270 2339\r\nf 2385 2325 2272\r\nf 2272 2339 2385\r\nf 2419 2348 2325\r\nf 2325 2385 2419\r\nf 2445 2377 2348\r\nf 2348 2419 2445\r\nf 2471 2401 2377\r\nf 2377 2445 2471\r\nf 2489 2408 2401\r\nf 2401 2471 2489\r\nf 2499 2412 2408\r\nf 2408 2489 2499\r\nf 2027 1999 1855\r\nf 1855 1852 2027\r\nf 2213 2139 1999\r\nf 1999 2027 2213\r\nf 2327 2270 2139\r\nf 2139 2213 2327\r\nf 2395 2339 2270\r\nf 2270 2327 2395\r\nf 2437 2385 2339\r\nf 2339 2395 2437\r\nf 2493 2419 2385\r\nf 2385 2437 2493\r\nf 2532 2445 2419\r\nf 2419 2493 2532\r\nf 2550 2471 2445\r\nf 2445 2532 2550\r\nf 2560 2489 2471\r\nf 2471 2550 2560\r\nf 2570 2499 2489\r\nf 2489 2560 2570\r\nf 2053 2027 1852\r\nf 1852 1849 2053\r\nf 2264 2213 2027\r\nf 2027 2053 2264\r\nf 2367 2327 2213\r\nf 2213 2264 2367\r\nf 2433 2395 2327\r\nf 2327 2367 2433\r\nf 2511 2437 2395\r\nf 2395 2433 2511\r\nf 2552 2493 2437\r\nf 2437 2511 2552\r\nf 2594 2532 2493\r\nf 2493 2552 2594\r\nf 2632 2550 2532\r\nf 2532 2594 2632\r\nf 2654 2560 2550\r\nf 2550 2632 2654\r\nf 2656 2570 2560\r\nf 2560 2654 2656\r\nf 2091 2053 1849\r\nf 1849 1847 2091\r\nf 2309 2264 2053\r\nf 2053 2091 2309\r\nf 2404 2367 2264\r\nf 2264 2309 2404\r\nf 2485 2433 2367\r\nf 2367 2404 2485\r\nf 2548 2511 2433\r\nf 2433 2485 2548\r\nf 2608 2552 2511\r\nf 2511 2548 2608\r\nf 2661 2594 2552\r\nf 2552 2608 2661\r\nf 2698 2632 2594\r\nf 2594 2661 2698\r\nf 2719 2654 2632\r\nf 2632 2698 2719\r\nf 2725 2656 2654\r\nf 2654 2719 2725\r\nf 2119 2091 1847\r\nf 1847 1833 2119\r\nf 2331 2309 2091\r\nf 2091 2119 2331\r\nf 2423 2404 2309\r\nf 2309 2331 2423\r\nf 2526 2485 2404\r\nf 2404 2423 2526\r\nf 2590 2548 2485\r\nf 2485 2526 2590\r\nf 2658 2608 2548\r\nf 2548 2590 2658\r\nf 2714 2661 2608\r\nf 2608 2658 2714\r\nf 2760 2698 2661\r\nf 2661 2714 2760\r\nf 2788 2719 2698\r\nf 2698 2760 2788\r\nf 2796 2725 2719\r\nf 2719 2788 2796\r\nf 2129 2119 1833\r\nf 1833 1827 2129\r\nf 2341 2331 2119\r\nf 2119 2129 2341\r\nf 2440 2423 2331\r\nf 2331 2341 2440\r\nf 2535 2526 2423\r\nf 2423 2440 2535\r\nf 2623 2590 2526\r\nf 2526 2535 2623\r\nf 2689 2658 2590\r\nf 2590 2623 2689\r\nf 2749 2714 2658\r\nf 2658 2689 2749\r\nf 2797 2760 2714\r\nf 2714 2749 2797\r\nf 2833 2788 2760\r\nf 2760 2797 2833\r\nf 2843 2796 2788\r\nf 2788 2833 2843\r\nf 2137 2129 1827\r\nf 1827 1815 2137\r\nf 2345 2341 2129\r\nf 2129 2137 2345\r\nf 2447 2440 2341\r\nf 2341 2345 2447\r\nf 2544 2535 2440\r\nf 2440 2447 2544\r\nf 2638 2623 2535\r\nf 2535 2544 2638\r\nf 2704 2689 2623\r\nf 2623 2638 2704\r\nf 2766 2749 2689\r\nf 2689 2704 2766\r\nf 2822 2797 2749\r\nf 2749 2766 2822\r\nf 2848 2833 2797\r\nf 2797 2822 2848\r\nf 2858 2843 2833\r\nf 2833 2848 2858\r\nf 1735 2334 2329\r\nf 1735 2329 2321\r\nf 1735 2321 2305\r\nf 1735 2305 2274\r\nf 1735 2274 2231\r\nf 1735 2231 2167\r\nf 1735 2167 2089\r\nf 1735 2089 2014\r\nf 1735 2014 1962\r\nf 1735 1962 1733\r\nf 2515 2329 2334\r\nf 2334 2524 2515\r\nf 2495 2321 2329\r\nf 2329 2515 2495\r\nf 2456 2305 2321\r\nf 2321 2495 2456\r\nf 2429 2274 2305\r\nf 2305 2456 2429\r\nf 2399 2231 2274\r\nf 2274 2429 2399\r\nf 2347 2167 2231\r\nf 2231 2399 2347\r\nf 2292 2089 2167\r\nf 2167 2347 2292\r\nf 2148 2014 2089\r\nf 2089 2292 2148\r\nf 2004 1962 2014\r\nf 2014 2148 2004\r\nf 1739 1733 1962\r\nf 1962 2004 1739\r\nf 2647 2515 2524\r\nf 2524 2649 2647\r\nf 2621 2495 2515\r\nf 2515 2647 2621\r\nf 2584 2456 2495\r\nf 2495 2621 2584\r\nf 2541 2429 2456\r\nf 2456 2584 2541\r\nf 2502 2399 2429\r\nf 2429 2541 2502\r\nf 2426 2347 2399\r\nf 2399 2502 2426\r\nf 2352 2292 2347\r\nf 2347 2426 2352\r\nf 2255 2148 2292\r\nf 2292 2352 2255\r\nf 2046 2004 2148\r\nf 2148 2255 2046\r\nf 1702 1739 2004\r\nf 2004 2046 1702\r\nf 2746 2647 2649\r\nf 2649 2757 2746\r\nf 2721 2621 2647\r\nf 2647 2746 2721\r\nf 2681 2584 2621\r\nf 2621 2721 2681\r\nf 2639 2541 2584\r\nf 2584 2681 2639\r\nf 2557 2502 2541\r\nf 2541 2639 2557\r\nf 2505 2426 2502\r\nf 2502 2557 2505\r\nf 2415 2352 2426\r\nf 2426 2505 2415\r\nf 2318 2255 2352\r\nf 2352 2415 2318\r\nf 2098 2046 2255\r\nf 2255 2318 2098\r\nf 1745 1702 2046\r\nf 2046 2098 1745\r\nf 2840 2746 2757\r\nf 2757 2849 2840\r\nf 2808 2721 2746\r\nf 2746 2840 2808\r\nf 2756 2681 2721\r\nf 2721 2808 2756\r\nf 2696 2639 2681\r\nf 2681 2756 2696\r\nf 2626 2557 2639\r\nf 2639 2696 2626\r\nf 2538 2505 2557\r\nf 2557 2626 2538\r\nf 2443 2415 2505\r\nf 2505 2538 2443\r\nf 2342 2318 2415\r\nf 2415 2443 2342\r\nf 2131 2098 2318\r\nf 2318 2342 2131\r\nf 1904 1745 2098\r\nf 2098 2131 1904\r\nf 2906 2840 2849\r\nf 2849 2925 2906\r\nf 2867 2808 2840\r\nf 2840 2906 2867\r\nf 2818 2756 2808\r\nf 2808 2867 2818\r\nf 2736 2696 2756\r\nf 2756 2818 2736\r\nf 2667 2626 2696\r\nf 2696 2736 2667\r\nf 2565 2538 2626\r\nf 2626 2667 2565\r\nf 2475 2443 2538\r\nf 2538 2565 2475\r\nf 2356 2342 2443\r\nf 2443 2475 2356\r\nf 2156 2131 2342\r\nf 2342 2356 2156\r\nf 1704 1904 2131\r\nf 2131 2156 1704\r\nf 2976 2906 2925\r\nf 2925 2987 2976\r\nf 2914 2867 2906\r\nf 2906 2976 2914\r\nf 2852 2818 2867\r\nf 2867 2914 2852\r\nf 2772 2736 2818\r\nf 2818 2852 2772\r\nf 2688 2667 2736\r\nf 2736 2772 2688\r\nf 2592 2565 2667\r\nf 2667 2688 2592\r\nf 2497 2475 2565\r\nf 2565 2592 2497\r\nf 2372 2356 2475\r\nf 2475 2497 2372\r\nf 2176 2156 2356\r\nf 2356 2372 2176\r\nf 1752 1704 2156\r\nf 2156 2176 1752\r\nf 2993 2976 2987\r\nf 2987 3011 2993\r\nf 2952 2914 2976\r\nf 2976 2993 2952\r\nf 2874 2852 2914\r\nf 2914 2952 2874\r\nf 2794 2772 2852\r\nf 2852 2874 2794\r\nf 2702 2688 2772\r\nf 2772 2794 2702\r\nf 2604 2592 2688\r\nf 2688 2702 2604\r\nf 2509 2497 2592\r\nf 2592 2604 2509\r\nf 2380 2372 2497\r\nf 2497 2509 2380\r\nf 2182 2176 2372\r\nf 2372 2380 2182\r\nf 1723 1752 2176\r\nf 2176 2182 1723\r\nf 3000 2993 3011\r\nf 3011 3020 3000\r\nf 2967 2952 2993\r\nf 2993 3000 2967\r\nf 2879 2874 2952\r\nf 2952 2967 2879\r\nf 2799 2794 2874\r\nf 2874 2879 2799\r\nf 2707 2702 2794\r\nf 2794 2799 2707\r\nf 2605 2604 2702\r\nf 2702 2707 2605\r\nf 2512 2509 2604\r\nf 2604 2605 2512\r\nf 2382 2380 2509\r\nf 2509 2512 2382\r\nf 2188 2182 2380\r\nf 2380 2382 2188\r\nf 1699 1723 2182\r\nf 2182 2188 1699\r\nf 3006 3000 3020\r\nf 3020 3022 3006\r\nf 2972 2967 3000\r\nf 3000 3006 2972\r\nf 2888 2879 2967\r\nf 2967 2972 2888\r\nf 2804 2799 2879\r\nf 2879 2888 2804\r\nf 2710 2707 2799\r\nf 2799 2804 2710\r\nf 2613 2605 2707\r\nf 2707 2710 2613\r\nf 2520 2512 2605\r\nf 2605 2613 2520\r\nf 2388 2382 2512\r\nf 2512 2520 2388\r\nf 2192 2188 2382\r\nf 2382 2388 2192\r\nf 1760 1699 2188\r\nf 2188 2192 1760\r\nf 1735 1737 1660\r\nf 1735 1660 1608\r\nf 1735 1608 1535\r\nf 1735 1535 1457\r\nf 1735 1457 1393\r\nf 1735 1393 1350\r\nf 1735 1350 1319\r\nf 1735 1319 1303\r\nf 1735 1303 1295\r\nf 1735 1295 1288\r\nf 1618 1660 1737\r\nf 1737 1739 1618\r\nf 1474 1608 1660\r\nf 1660 1618 1474\r\nf 1332 1535 1608\r\nf 1608 1474 1332\r\nf 1277 1457 1535\r\nf 1535 1332 1277\r\nf 1225 1393 1457\r\nf 1457 1277 1225\r\nf 1195 1350 1393\r\nf 1393 1225 1195\r\nf 1166 1319 1350\r\nf 1350 1195 1166\r\nf 1129 1303 1319\r\nf 1319 1166 1129\r\nf 1109 1295 1303\r\nf 1303 1129 1109\r\nf 1099 1288 1295\r\nf 1295 1109 1099\r\nf 1576 1618 1739\r\nf 1739 1741 1576\r\nf 1367 1474 1618\r\nf 1618 1576 1367\r\nf 1270 1332 1474\r\nf 1474 1367 1270\r\nf 1196 1277 1332\r\nf 1332 1270 1196\r\nf 1120 1225 1277\r\nf 1277 1196 1120\r\nf 1081 1195 1225\r\nf 1225 1120 1081\r\nf 1040 1166 1195\r\nf 1195 1081 1040\r\nf 1001 1129 1166\r\nf 1166 1040 1001\r\nf 975 1109 1129\r\nf 1129 1001 975\r\nf 973 1099 1109\r\nf 1109 975 973\r\nf 1524 1576 1741\r\nf 1741 1744 1524\r\nf 1304 1367 1576\r\nf 1576 1524 1304\r\nf 1209 1270 1367\r\nf 1367 1304 1209\r\nf 1119 1196 1270\r\nf 1270 1209 1119\r\nf 1065 1120 1196\r\nf 1196 1119 1065\r\nf 983 1081 1120\r\nf 1120 1065 983\r\nf 941 1040 1081\r\nf 1081 983 941\r\nf 901 1001 1040\r\nf 1040 941 901\r\nf 878 975 1001\r\nf 1001 901 878\r\nf 865 973 975\r\nf 975 878 865\r\nf 1493 1524 1744\r\nf 1744 1747 1493\r\nf 1280 1304 1524\r\nf 1524 1493 1280\r\nf 1181 1209 1304\r\nf 1304 1280 1181\r\nf 1086 1119 1209\r\nf 1209 1181 1086\r\nf 998 1065 1119\r\nf 1119 1086 998\r\nf 928 983 1065\r\nf 1065 998 928\r\nf 868 941 983\r\nf 983 928 868\r\nf 816 901 941\r\nf 941 868 816\r\nf 784 878 901\r\nf 901 816 784\r\nf 773 865 878\r\nf 878 784 773\r\nf 1466 1493 1747\r\nf 1747 1749 1466\r\nf 1266 1280 1493\r\nf 1493 1466 1266\r\nf 1149 1181 1280\r\nf 1280 1266 1149\r\nf 1057 1086 1181\r\nf 1181 1149 1057\r\nf 955 998 1086\r\nf 1086 1057 955\r\nf 888 928 998\r\nf 998 955 888\r\nf 806 868 928\r\nf 928 888 806\r\nf 755 816 868\r\nf 868 806 755\r\nf 718 784 816\r\nf 816 755 718\r\nf 697 773 784\r\nf 784 718 697\r\nf 1446 1466 1749\r\nf 1749 1753 1446\r\nf 1250 1266 1466\r\nf 1466 1446 1250\r\nf 1127 1149 1266\r\nf 1266 1250 1127\r\nf 1032 1057 1149\r\nf 1149 1127 1032\r\nf 936 955 1057\r\nf 1057 1032 936\r\nf 852 888 955\r\nf 955 936 852\r\nf 772 806 888\r\nf 888 852 772\r\nf 710 755 806\r\nf 806 772 710\r\nf 648 718 755\r\nf 755 710 648\r\nf 637 697 718\r\nf 718 648 637\r\nf 1440 1446 1753\r\nf 1753 1755 1440\r\nf 1242 1250 1446\r\nf 1446 1440 1242\r\nf 1115 1127 1250\r\nf 1250 1242 1115\r\nf 1020 1032 1127\r\nf 1127 1115 1020\r\nf 922 936 1032\r\nf 1032 1020 922\r\nf 830 852 936\r\nf 936 922 830\r\nf 750 772 852\r\nf 852 830 750\r\nf 672 710 772\r\nf 772 750 672\r\nf 631 648 710\r\nf 710 672 631\r\nf 613 637 648\r\nf 648 631 613\r\nf 1434 1440 1755\r\nf 1755 1757 1434\r\nf 1240 1242 1440\r\nf 1440 1434 1240\r\nf 1110 1115 1242\r\nf 1242 1240 1110\r\nf 1017 1020 1115\r\nf 1115 1110 1017\r\nf 915 922 1020\r\nf 1020 1017 915\r\nf 823 830 922\r\nf 922 915 823\r\nf 743 750 830\r\nf 830 823 743\r\nf 655 672 750\r\nf 750 743 655\r\nf 622 631 672\r\nf 672 655 622\r\nf 602 613 631\r\nf 631 622 602\r\nf 1428 1434 1757\r\nf 1757 1760 1428\r\nf 1232 1240 1434\r\nf 1434 1428 1232\r\nf 1105 1110 1240\r\nf 1240 1232 1105\r\nf 1010 1017 1110\r\nf 1110 1105 1010\r\nf 913 915 1017\r\nf 1017 1010 913\r\nf 821 823 915\r\nf 915 913 821\r\nf 736 743 823\r\nf 823 821 736\r\nf 652 655 743\r\nf 743 736 652\r\nf 619 622 655\r\nf 655 652 619\r\nf 601 602 622\r\nf 622 619 601\r\nf 1735 1289 1294\r\nf 1735 1294 1302\r\nf 1735 1302 1318\r\nf 1735 1318 1349\r\nf 1735 1349 1392\r\nf 1735 1392 1456\r\nf 1735 1456 1534\r\nf 1735 1534 1609\r\nf 1735 1609 1661\r\nf 1735 1661 1889\r\nf 1108 1294 1289\r\nf 1289 1099 1108\r\nf 1128 1302 1294\r\nf 1294 1108 1128\r\nf 1167 1318 1302\r\nf 1302 1128 1167\r\nf 1194 1349 1318\r\nf 1318 1167 1194\r\nf 1224 1392 1349\r\nf 1349 1194 1224\r\nf 1276 1456 1392\r\nf 1392 1224 1276\r\nf 1331 1534 1456\r\nf 1456 1276 1331\r\nf 1475 1609 1534\r\nf 1534 1331 1475\r\nf 1619 1661 1609\r\nf 1609 1475 1619\r\nf 1738 1889 1661\r\nf 1661 1619 1738\r\nf 976 1108 1099\r\nf 1099 974 976\r\nf 1002 1128 1108\r\nf 1108 976 1002\r\nf 1039 1167 1128\r\nf 1128 1002 1039\r\nf 1082 1194 1167\r\nf 1167 1039 1082\r\nf 1121 1224 1194\r\nf 1194 1082 1121\r\nf 1197 1276 1224\r\nf 1224 1121 1197\r\nf 1271 1331 1276\r\nf 1276 1197 1271\r\nf 1368 1475 1331\r\nf 1331 1271 1368\r\nf 1577 1619 1475\r\nf 1475 1368 1577\r\nf 1903 1738 1619\r\nf 1619 1577 1903\r\nf 877 976 974\r\nf 974 866 877\r\nf 902 1002 976\r\nf 976 877 902\r\nf 942 1039 1002\r\nf 1002 902 942\r\nf 984 1082 1039\r\nf 1039 942 984\r\nf 1066 1121 1082\r\nf 1082 984 1066\r\nf 1118 1197 1121\r\nf 1121 1066 1118\r\nf 1208 1271 1197\r\nf 1197 1118 1208\r\nf 1305 1368 1271\r\nf 1271 1208 1305\r\nf 1525 1577 1368\r\nf 1368 1305 1525\r\nf 1742 1903 1577\r\nf 1577 1525 1742\r\nf 783 877 866\r\nf 866 774 783\r\nf 815 902 877\r\nf 877 783 815\r\nf 867 942 902\r\nf 902 815 867\r\nf 927 984 942\r\nf 942 867 927\r\nf 997 1066 984\r\nf 984 927 997\r\nf 1085 1118 1066\r\nf 1066 997 1085\r\nf 1180 1208 1118\r\nf 1118 1085 1180\r\nf 1281 1305 1208\r\nf 1208 1180 1281\r\nf 1492 1525 1305\r\nf 1305 1281 1492\r\nf 1703 1742 1525\r\nf 1525 1492 1703\r\nf 717 783 774\r\nf 774 698 717\r\nf 756 815 783\r\nf 783 717 756\r\nf 805 867 815\r\nf 815 756 805\r\nf 887 927 867\r\nf 867 805 887\r\nf 956 997 927\r\nf 927 887 956\r\nf 1058 1085 997\r\nf 997 956 1058\r\nf 1148 1180 1085\r\nf 1085 1058 1148\r\nf 1267 1281 1180\r\nf 1180 1148 1267\r\nf 1467 1492 1281\r\nf 1281 1267 1467\r\nf 1905 1703 1492\r\nf 1492 1467 1905\r\nf 647 717 698\r\nf 698 636 647\r\nf 709 756 717\r\nf 717 647 709\r\nf 771 805 756\r\nf 756 709 771\r\nf 851 887 805\r\nf 805 771 851\r\nf 935 956 887\r\nf 887 851 935\r\nf 1031 1058 956\r\nf 956 935 1031\r\nf 1126 1148 1058\r\nf 1058 1031 1126\r\nf 1251 1267 1148\r\nf 1148 1126 1251\r\nf 1447 1467 1267\r\nf 1267 1251 1447\r\nf 1751 1905 1467\r\nf 1467 1447 1751\r\nf 630 647 636\r\nf 636 612 630\r\nf 671 709 647\r\nf 647 630 671\r\nf 749 771 709\r\nf 709 671 749\r\nf 829 851 771\r\nf 771 749 829\r\nf 921 935 851\r\nf 851 829 921\r\nf 1019 1031 935\r\nf 935 921 1019\r\nf 1114 1126 1031\r\nf 1031 1019 1114\r\nf 1243 1251 1126\r\nf 1126 1114 1243\r\nf 1441 1447 1251\r\nf 1251 1243 1441\r\nf 1896 1751 1447\r\nf 1447 1441 1896\r\nf 623 630 612\r\nf 612 603 623\r\nf 656 671 630\r\nf 630 623 656\r\nf 744 749 671\r\nf 671 656 744\r\nf 824 829 749\r\nf 749 744 824\r\nf 916 921 829\r\nf 829 824 916\r\nf 1018 1019 921\r\nf 921 916 1018\r\nf 1111 1114 1019\r\nf 1019 1018 1111\r\nf 1241 1243 1114\r\nf 1114 1111 1241\r\nf 1435 1441 1243\r\nf 1243 1241 1435\r\nf 1923 1896 1441\r\nf 1441 1435 1923\r\nf 617 623 603\r\nf 603 601 617\r\nf 650 656 623\r\nf 623 617 650\r\nf 734 744 656\r\nf 656 650 734\r\nf 818 824 744\r\nf 744 734 818\r\nf 912 916 824\r\nf 824 818 912\r\nf 1009 1018 916\r\nf 916 912 1009\r\nf 1102 1111 1018\r\nf 1018 1009 1102\r\nf 1235 1241 1111\r\nf 1111 1102 1235\r\nf 1431 1435 1241\r\nf 1241 1235 1431\r\nf 1759 1923 1435\r\nf 1435 1431 1759\r\nf 1735 1736 1963\r\nf 1735 1963 2015\r\nf 1735 2015 2088\r\nf 1735 2088 2166\r\nf 1735 2166 2230\r\nf 1735 2230 2273\r\nf 1735 2273 2304\r\nf 1735 2304 2320\r\nf 1735 2320 2328\r\nf 1735 2328 2335\r\nf 2005 1963 1736\r\nf 1736 1738 2005\r\nf 2149 2015 1963\r\nf 1963 2005 2149\r\nf 2291 2088 2015\r\nf 2015 2149 2291\r\nf 2346 2166 2088\r\nf 2088 2291 2346\r\nf 2398 2230 2166\r\nf 2166 2346 2398\r\nf 2428 2273 2230\r\nf 2230 2398 2428\r\nf 2457 2304 2273\r\nf 2273 2428 2457\r\nf 2494 2320 2304\r\nf 2304 2457 2494\r\nf 2514 2328 2320\r\nf 2320 2494 2514\r\nf 2524 2335 2328\r\nf 2328 2514 2524\r\nf 2047 2005 1738\r\nf 1738 1740 2047\r\nf 2256 2149 2005\r\nf 2005 2047 2256\r\nf 2353 2291 2149\r\nf 2149 2256 2353\r\nf 2427 2346 2291\r\nf 2291 2353 2427\r\nf 2503 2398 2346\r\nf 2346 2427 2503\r\nf 2542 2428 2398\r\nf 2398 2503 2542\r\nf 2583 2457 2428\r\nf 2428 2542 2583\r\nf 2622 2494 2457\r\nf 2457 2583 2622\r\nf 2648 2514 2494\r\nf 2494 2622 2648\r\nf 2650 2524 2514\r\nf 2514 2648 2650\r\nf 2099 2047 1740\r\nf 1740 1743 2099\r\nf 2319 2256 2047\r\nf 2047 2099 2319\r\nf 2414 2353 2256\r\nf 2256 2319 2414\r\nf 2504 2427 2353\r\nf 2353 2414 2504\r\nf 2558 2503 2427\r\nf 2427 2504 2558\r\nf 2640 2542 2503\r\nf 2503 2558 2640\r\nf 2682 2583 2542\r\nf 2542 2640 2682\r\nf 2722 2622 2583\r\nf 2583 2682 2722\r\nf 2745 2648 2622\r\nf 2622 2722 2745\r\nf 2758 2650 2648\r\nf 2648 2745 2758\r\nf 2130 2099 1743\r\nf 1743 1746 2130\r\nf 2343 2319 2099\r\nf 2099 2130 2343\r\nf 2442 2414 2319\r\nf 2319 2343 2442\r\nf 2537 2504 2414\r\nf 2414 2442 2537\r\nf 2625 2558 2504\r\nf 2504 2537 2625\r\nf 2695 2640 2558\r\nf 2558 2625 2695\r\nf 2755 2682 2640\r\nf 2640 2695 2755\r\nf 2807 2722 2682\r\nf 2682 2755 2807\r\nf 2839 2745 2722\r\nf 2722 2807 2839\r\nf 2850 2758 2745\r\nf 2745 2839 2850\r\nf 2157 2130 1746\r\nf 1746 1748 2157\r\nf 2357 2343 2130\r\nf 2130 2157 2357\r\nf 2474 2442 2343\r\nf 2343 2357 2474\r\nf 2566 2537 2442\r\nf 2442 2474 2566\r\nf 2668 2625 2537\r\nf 2537 2566 2668\r\nf 2735 2695 2625\r\nf 2625 2668 2735\r\nf 2817 2755 2695\r\nf 2695 2735 2817\r\nf 2868 2807 2755\r\nf 2755 2817 2868\r\nf 2905 2839 2807\r\nf 2807 2868 2905\r\nf 2926 2850 2839\r\nf 2839 2905 2926\r\nf 2177 2157 1748\r\nf 1748 1750 2177\r\nf 2373 2357 2157\r\nf 2157 2177 2373\r\nf 2496 2474 2357\r\nf 2357 2373 2496\r\nf 2591 2566 2474\r\nf 2474 2496 2591\r\nf 2687 2668 2566\r\nf 2566 2591 2687\r\nf 2771 2735 2668\r\nf 2668 2687 2771\r\nf 2851 2817 2735\r\nf 2735 2771 2851\r\nf 2913 2868 2817\r\nf 2817 2851 2913\r\nf 2975 2905 2868\r\nf 2868 2913 2975\r\nf 2986 2926 2905\r\nf 2905 2975 2986\r\nf 2183 2177 1750\r\nf 1750 1754 2183\r\nf 2381 2373 2177\r\nf 2177 2183 2381\r\nf 2508 2496 2373\r\nf 2373 2381 2508\r\nf 2603 2591 2496\r\nf 2496 2508 2603\r\nf 2701 2687 2591\r\nf 2591 2603 2701\r\nf 2793 2771 2687\r\nf 2687 2701 2793\r\nf 2873 2851 2771\r\nf 2771 2793 2873\r\nf 2951 2913 2851\r\nf 2851 2873 2951\r\nf 2992 2975 2913\r\nf 2913 2951 2992\r\nf 3010 2986 2975\r\nf 2975 2992 3010\r\nf 2189 2183 1754\r\nf 1754 1756 2189\r\nf 2383 2381 2183\r\nf 2183 2189 2383\r\nf 2513 2508 2381\r\nf 2381 2383 2513\r\nf 2606 2603 2508\r\nf 2508 2513 2606\r\nf 2708 2701 2603\r\nf 2603 2606 2708\r\nf 2800 2793 2701\r\nf 2701 2708 2800\r\nf 2880 2873 2793\r\nf 2793 2800 2880\r\nf 2968 2951 2873\r\nf 2873 2880 2968\r\nf 3001 2992 2951\r\nf 2951 2968 3001\r\nf 3021 3010 2992\r\nf 2992 3001 3021\r\nf 2195 2189 1756\r\nf 1756 1759 2195\r\nf 2390 2383 2189\r\nf 2189 2195 2390\r\nf 2517 2513 2383\r\nf 2383 2390 2517\r\nf 2612 2606 2513\r\nf 2513 2517 2612\r\nf 2709 2708 2606\r\nf 2606 2612 2709\r\nf 2801 2800 2708\r\nf 2708 2709 2801\r\nf 2886 2880 2800\r\nf 2800 2801 2886\r\nf 2970 2968 2880\r\nf 2880 2886 2970\r\nf 3004 3001 2968\r\nf 2968 2970 3004\r\nf 3022 3021 3001\r\nf 3001 3004 3022";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
kha_Assets.images = new kha__$Assets_ImageList();
kha_Assets.sounds = new kha__$Assets_SoundList();
kha_Assets.blobs = new kha__$Assets_BlobList();
kha_Assets.fonts = new kha__$Assets_FontList();
kha_Assets.videos = new kha__$Assets_VideoList();
kha__$Color_Color_$Impl_$.Black = -16777216;
kha__$Color_Color_$Impl_$.White = -1;
kha__$Color_Color_$Impl_$.Red = -65536;
kha__$Color_Color_$Impl_$.Blue = -16776961;
kha__$Color_Color_$Impl_$.Green = -16711936;
kha__$Color_Color_$Impl_$.Magenta = -65281;
kha__$Color_Color_$Impl_$.Yellow = -256;
kha__$Color_Color_$Impl_$.Cyan = -16711681;
kha__$Color_Color_$Impl_$.Purple = -8388480;
kha__$Color_Color_$Impl_$.Pink = -16181;
kha__$Color_Color_$Impl_$.Orange = -23296;
kha__$Color_Color_$Impl_$.Transparent = 0;
kha__$Color_Color_$Impl_$.invMaxChannelValue = 0.00392156862745098;
kha_Display.instance = new kha_Display();
kha_Scheduler.timeWarpSaveTime = 10.0;
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.painter_colored_fragData0 = "s198:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IGZyYWdtZW50Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_fragData1 = "s223:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSBmcmFnbWVudENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_fragData2 = "s192:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gZnJhZ21lbnRDb2xvcjsKfQoK";
kha_Shaders.painter_colored_vertData0 = "s331:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData1 = "s311:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData2 = "s374:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIG1lZGl1bXAgdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_image_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData1 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData2 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_image_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData1 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_image_vertData2 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_text_fragData0 = "s351:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChmcmFnbWVudENvbG9yLnh5eiwgdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_fragData1 = "s367:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSB2ZWM0KGZyYWdtZW50Q29sb3IueHl6LCB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_fragData2 = "s340:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjNCBmcmFnbWVudENvbG9yOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZnJhZ21lbnRDb2xvci54eXosIHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKS54ICogZnJhZ21lbnRDb2xvci53KTsKfQoK";
kha_Shaders.painter_text_vertData0 = "s436:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_vertData1 = "s402:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBmcmFnbWVudENvbG9yOwppbiB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_text_vertData2 = "s500:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGZyYWdtZW50Q29sb3I7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_video_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_fragData1 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_fragData2 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_video_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData1 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_video_vertData2 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.resumeListeners = [];
kha_System.pauseListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_System.dropFilesListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.ios = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.chrome = false;
kha_SystemImpl.firefox = false;
kha_SystemImpl.ie = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.maxGamepads = 4;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_SystemImpl.iosSoundEnabled = false;
kha_SystemImpl.soundEnabled = false;
kha_SystemImpl.iosTouchs = [];
kha_WebGLImage.GL_RGBA16F = 34842;
kha_WebGLImage.GL_RGBA32F = 34836;
kha_WebGLImage.GL_R16F = 33325;
kha_WebGLImage.GL_R32F = 33326;
kha_WebGLImage.GL_RED = 6403;
kha_WebGLImage.GL_DEPTH_COMPONENT24 = 33190;
kha_WebGLImage.GL_DEPTH24_STENCIL8 = 35056;
kha_WebGLImage.GL_DEPTH32F_STENCIL8 = 36013;
kha_Window.windows = [];
kha__$WindowOptions_WindowFeatures_$Impl_$.None = 0;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureResizable = 1;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureMinimizable = 2;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureMaximizable = 4;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureBorderless = 8;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureOnTop = 16;
kha_audio2_Audio.disableGcInteractions = false;
kha_audio2_Audio.intBox = new kha_internal_IntBox(0);
kha_audio2_Audio.virtualChannels = [];
kha_audio2_Audio1.channelCount = 32;
kha_audio2_Audio1.lastAllocationCount = 0;
kha_audio2_ogg_tools_Crc32.POLY = 79764919;
kha_audio2_ogg_vorbis_VorbisDecodeState.INVALID_BITS = -1;
kha_audio2_ogg_vorbis_VorbisTools.EOP = -1;
kha_audio2_ogg_vorbis_VorbisTools.M__PI = 3.14159265358979323846264;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_NUMER = 32;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_DENOM = 64;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_audio2_ogg_vorbis_data_Codebook.NO_CODE = 255;
kha_audio2_ogg_vorbis_data_Codebook.delay = 0;
kha_audio2_ogg_vorbis_data_Header.PACKET_ID = 1;
kha_audio2_ogg_vorbis_data_Header.PACKET_COMMENT = 3;
kha_audio2_ogg_vorbis_data_Header.PACKET_SETUP = 5;
kha_audio2_ogg_vorbis_data_PageFlag.CONTINUED_PACKET = 1;
kha_audio2_ogg_vorbis_data_PageFlag.FIRST_PAGE = 2;
kha_audio2_ogg_vorbis_data_PageFlag.LAST_PAGE = 4;
kha_audio2_ogg_vorbis_data_Setting.MAX_CHANNELS = 16;
kha_audio2_ogg_vorbis_data_Setting.PUSHDATA_CRC_COUNT = 4;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_LENGTH = 10;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_SIZE = 1024;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_MASK = 1023;
kha_graphics2_Graphics.fontGlyphs = (function($this) {
	var $r;
	var _g = [];
	{
		var _g1 = 32;
		while(_g1 < 256) {
			var i = _g1++;
			_g.push(i);
		}
	}
	$r = _g;
	return $r;
}(this));
kha_graphics2_truetype_StbTruetype.STBTT_vmove = 1;
kha_graphics2_truetype_StbTruetype.STBTT_vline = 2;
kha_graphics2_truetype_StbTruetype.STBTT_vcurve = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_DONTCARE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_BOLD = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_ITALIC = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_UNDERSCORE = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_NONE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_UNICODE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MAC = 1;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_ISO = 2;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MICROSOFT = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_0 = 0;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_1 = 1;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_ISO_10646 = 2;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_BMP = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_FULL = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SYMBOL = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_BMP = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SHIFTJIS = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_FULL = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ROMAN = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ARABIC = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_JAPANESE = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_HEBREW = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_CHINESE_TRAD = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_GREEK = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_KOREAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_RUSSIAN = 7;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ENGLISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ITALIAN = 1040;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_CHINESE = 2052;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_JAPANESE = 1041;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_DUTCH = 1043;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_KOREAN = 1042;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_FRENCH = 1036;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_RUSSIAN = 1049;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_GERMAN = 1031;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SPANISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_HEBREW = 1037;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SWEDISH = 1053;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ENGLISH = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_JAPANESE = 11;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ARABIC = 12;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_KOREAN = 23;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_DUTCH = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_RUSSIAN = 32;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_FRENCH = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SPANISH = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_GERMAN = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SWEDISH = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_HEBREW = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_SIMPLIFIED = 33;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ITALIAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_TRAD = 19;
kha_graphics2_truetype_StbTruetype.STBTT_MAX_OVERSAMPLE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_RASTERIZER_VERSION = 2;
kha_graphics4_CubeMap.GL_RGBA16F = 34842;
kha_graphics4_CubeMap.GL_RGBA32F = 34836;
kha_graphics4_CubeMap.GL_R16F = 33325;
kha_graphics4_CubeMap.GL_R32F = 33326;
kha_graphics4_CubeMap.GL_DEPTH_COMPONENT24 = 33190;
kha_graphics4_CubeMap.GL_DEPTH24_STENCIL8 = 35056;
kha_graphics4_CubeMap.GL_DEPTH32F_STENCIL8 = 36013;
kha_graphics4_ImageShaderPainter.bufferSize = 1500;
kha_graphics4_ImageShaderPainter.vertexSize = 9;
kha_graphics4_ColoredShaderPainter.bufferSize = 1000;
kha_graphics4_ColoredShaderPainter.triangleBufferSize = 1000;
kha_graphics4_TextShaderPainter.bufferSize = 1000;
kha_input_Gamepad.__meta__ = { statics : { sendConnectEvent : { input : null}, sendDisconnectEvent : { input : null}}, fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Gamepad.connectListeners = [];
kha_input_Gamepad.disconnectListeners = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendPressEvent : { input : null}}};
kha_input_Keyboard.keyBehavior = kha_input_BlockInterventions.Default;
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_input_Mouse.wheelEventBlockBehavior = kha_input_MouseEventBlockBehavior.Full;
kha_input_Sensor.isInited = false;
kha_input_Sensor.accelerometer = new kha_input_Sensor();
kha_input_Sensor.gyroscope = new kha_input_Sensor();
kha_input_Surface.touchDownEventBlockBehavior = kha_input_TouchDownEventBlockBehavior.Full;
kha_internal_BytesBlob.bufferSize = 2000;
kha_internal_HdrFormat.radiancePattern = new EReg("#\\?RADIANCE","i");
kha_internal_HdrFormat.commentPattern = new EReg("#.*","i");
kha_internal_HdrFormat.gammaPattern = new EReg("GAMMA=","i");
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_Sound.loading = [];
kha_js_graphics4_Graphics.GL_TEXTURE_COMPARE_MODE = 34892;
kha_js_graphics4_Graphics.GL_TEXTURE_COMPARE_FUNC = 34893;
kha_js_graphics4_Graphics.GL_COMPARE_REF_TO_TEXTURE = 34894;
kha_math_FastMatrix3.width = 3;
kha_math_FastMatrix3.height = 3;
kha_math_FastMatrix4.width = 4;
kha_math_FastMatrix4.height = 4;
kha_math_Matrix3.width = 3;
kha_math_Matrix3.height = 3;
kha_math_Matrix4.width = 4;
kha_math_Matrix4.height = 4;
kha_math_Quaternion.AXIS_X = 0;
kha_math_Quaternion.AXIS_Y = 1;
kha_math_Quaternion.AXIS_Z = 2;
kha_netsync_ControllerBuilder.nextId = 0;
kha_netsync_Session.START = 0;
kha_netsync_Session.ENTITY_UPDATES = 1;
kha_netsync_Session.CONTROLLER_UPDATES = 2;
kha_netsync_Session.REMOTE_CALL = 3;
kha_netsync_Session.PING = 4;
kha_netsync_Session.SESSION_ERROR = 5;
kha_netsync_Session.PLAYER_UPDATES = 6;
kha_netsync_Session.RPC_SERVER = 0;
kha_netsync_Session.RPC_ALL = 1;
kha_netsync_SyncBuilder.nextId = 0;
kha_netsync_SyncBuilder.objects = [];
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
